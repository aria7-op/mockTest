{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 08:13:20"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 08:14:45"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 08:15:39"}
{"level":"info","message":"Database initialized successfully","service":"mock-test-api","timestamp":"2025-08-03 08:15:39"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 11:22:55"}
{"level":"info","message":"Database initialized successfully","service":"mock-test-api","timestamp":"2025-08-03 11:22:55"}
{"level":"info","message":"Database disconnected","service":"mock-test-api","timestamp":"2025-08-03 11:58:44"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 11:58:48"}
{"level":"info","message":"Database initialized successfully","service":"mock-test-api","timestamp":"2025-08-03 11:58:48"}
{"level":"info","message":"Database disconnected","service":"mock-test-api","timestamp":"2025-08-03 12:26:22"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 12:35:33"}
{"level":"info","message":"Database initialized successfully","service":"mock-test-api","timestamp":"2025-08-03 12:35:33"}
{"level":"error","message":"Get questions error: adminService is not defined","service":"mock-test-api","stack":"ReferenceError: adminService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:937:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:41"}
{"level":"error","message":"Get categories error: examService is not defined","service":"mock-test-api","stack":"ReferenceError: examService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:713:28\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:41"}
{"level":"error","message":"Get questions error: adminService is not defined","service":"mock-test-api","stack":"ReferenceError: adminService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:937:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:42"}
{"level":"error","message":"Get categories error: examService is not defined","service":"mock-test-api","stack":"ReferenceError: examService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:713:28\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:42"}
{"level":"error","message":"Get questions error: adminService is not defined","service":"mock-test-api","stack":"ReferenceError: adminService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:937:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:44"}
{"level":"error","message":"Get categories error: examService is not defined","service":"mock-test-api","stack":"ReferenceError: examService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:713:28\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:44"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:45"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:46"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:49"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:35:53"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:36:23"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:36:24"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:36:26"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:36:30"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:37:01"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:37:02"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:37:04"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:37:08"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:37:38"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:37:39"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:37:42"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:37:46"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:38:16"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:38:17"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:38:19"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:38:23"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:38:53"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:38:54"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:38:56"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:39:00"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:39:30"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:39:31"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:39:33"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:39:37"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:40:07"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:40:08"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:40:10"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:40:14"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:40:44"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:40:45"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:40:47"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:40:51"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:41:21"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:41:22"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:41:24"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:41:28"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:42:01"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:42:02"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:42:04"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:42:08"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:42:38"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:42:39"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:42:41"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:42:45"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:43:16"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:43:17"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:43:19"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:43:23"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:43:53"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:43:54"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:43:56"}
{"level":"error","message":"Get users error: userService is not defined","service":"mock-test-api","stack":"ReferenceError: userService is not defined\n    at /home/ahmadi/Desktop/mock/server-secure.js:679:24\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/server-secure.js:84:9\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at authenticateToken (/home/ahmadi/Desktop/mock/server-secure.js:58:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-08-03 12:44:00"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 14:04:25"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 14:04:38"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 14:05:21"}
{"code":"42703","file":"parse_target.c","length":128,"level":"error","line":"1065","message":"Database query error: column \"first_name\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"first_name\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:05:54"}
{"code":"42703","file":"parse_target.c","length":128,"level":"error","line":"1065","message":"Register first admin error: column \"first_name\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"first_name\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:05:54"}
{"level":"info","message":"Database disconnected","service":"mock-test-api","timestamp":"2025-08-03 14:07:56"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 14:08:06"}
{"level":"info","message":"Database initialized successfully","service":"mock-test-api","timestamp":"2025-08-03 14:08:06"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Database query error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:08:39"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Register first admin error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:08:39"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Database query error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:09:28"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Register first admin error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:09:28"}
{"level":"info","message":"Database disconnected","service":"mock-test-api","timestamp":"2025-08-03 14:10:06"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 14:10:11"}
{"level":"info","message":"Database initialized successfully","service":"mock-test-api","timestamp":"2025-08-03 14:10:11"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Database query error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:10:26"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Register first admin error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:10:26"}
{"level":"info","message":"Database disconnected","service":"mock-test-api","timestamp":"2025-08-03 14:13:11"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 14:13:14"}
{"level":"info","message":"Database initialized successfully","service":"mock-test-api","timestamp":"2025-08-03 14:13:14"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Database query error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:13:38"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Register first admin error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:13:38"}
{"level":"info","message":"Database disconnected","service":"mock-test-api","timestamp":"2025-08-03 14:14:39"}
{"level":"info","message":"Database connected successfully","service":"mock-test-api","timestamp":"2025-08-03 14:14:45"}
{"level":"info","message":"Database initialized successfully","service":"mock-test-api","timestamp":"2025-08-03 14:14:45"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Database query error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:15:32"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Register first admin error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:15:32"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Database query error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:17:01"}
{"code":"42703","file":"parse_target.c","length":127,"level":"error","line":"1065","message":"Register first admin error: column \"firstname\" of relation \"users\" does not exist","name":"error","position":"37","routine":"checkInsertTargets","service":"mock-test-api","severity":"ERROR","stack":"error: column \"firstname\" of relation \"users\" does not exist\n    at /home/ahmadi/Desktop/mock/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async DatabaseService.query (/home/ahmadi/Desktop/mock/src/config/database-simple.js:51:28)\n    at async DatabaseService.create (/home/ahmadi/Desktop/mock/src/config/database-simple.js:125:24)\n    at async /home/ahmadi/Desktop/mock/server-secure.js:249:18","timestamp":"2025-08-03 14:17:01"}
{"level":"info","message":"Database disconnected","service":"mock-test-api","timestamp":"2025-08-03 14:25:05"}
{"clientVersion":"6.13.0","errorCode":"P1012","level":"error","message":"Database connection failed: \u001b[1;91merror\u001b[0m: \u001b[1mEnvironment variable not found: DATABASE_URL.\u001b[0m\n  \u001b[1;94m-->\u001b[0m  \u001b[4mschema.prisma:11\u001b[0m\n\u001b[1;94m   | \u001b[0m\n\u001b[1;94m10 | \u001b[0m  provider = \"postgresql\"\n\u001b[1;94m11 | \u001b[0m  url      = \u001b[1;91menv(\"DATABASE_URL\")\u001b[0m\n\u001b[1;94m   | \u001b[0m\n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"mock-test-api","stack":"PrismaClientInitializationError: \u001b[1;91merror\u001b[0m: \u001b[1mEnvironment variable not found: DATABASE_URL.\u001b[0m\n  \u001b[1;94m-->\u001b[0m  \u001b[4mschema.prisma:11\u001b[0m\n\u001b[1;94m   | \u001b[0m\n\u001b[1;94m10 | \u001b[0m  provider = \"postgresql\"\n\u001b[1;94m11 | \u001b[0m  url      = \u001b[1;91menv(\"DATABASE_URL\")\u001b[0m\n\u001b[1;94m   | \u001b[0m\n\nValidation Error Count: 1\n    at r (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:112:2770)\n    at async Database.connect (/home/ahmadi/Desktop/mock/src/config/database.js:34:7)\n    at async startServer (/home/ahmadi/Desktop/mock/src/server.js:154:5)","timestamp":"2025-08-03 15:05:47"}
{"clientVersion":"6.13.0","errorCode":"P1012","level":"error","message":"Database connection failed: \u001b[1;91merror\u001b[0m: \u001b[1mEnvironment variable not found: DATABASE_URL.\u001b[0m\n  \u001b[1;94m-->\u001b[0m  \u001b[4mschema.prisma:11\u001b[0m\n\u001b[1;94m   | \u001b[0m\n\u001b[1;94m10 | \u001b[0m  provider = \"postgresql\"\n\u001b[1;94m11 | \u001b[0m  url      = \u001b[1;91menv(\"DATABASE_URL\")\u001b[0m\n\u001b[1;94m   | \u001b[0m\n\nValidation Error Count: 1","name":"PrismaClientInitializationError","service":"mock-test-api","stack":"PrismaClientInitializationError: \u001b[1;91merror\u001b[0m: \u001b[1mEnvironment variable not found: DATABASE_URL.\u001b[0m\n  \u001b[1;94m-->\u001b[0m  \u001b[4mschema.prisma:11\u001b[0m\n\u001b[1;94m   | \u001b[0m\n\u001b[1;94m10 | \u001b[0m  provider = \"postgresql\"\n\u001b[1;94m11 | \u001b[0m  url      = \u001b[1;91menv(\"DATABASE_URL\")\u001b[0m\n\u001b[1;94m   | \u001b[0m\n\nValidation Error Count: 1\n    at r (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:112:2770)\n    at async Database.connect (/home/ahmadi/Desktop/mock/src/config/database.js:34:7)\n    at async startServer (/home/ahmadi/Desktop/mock/src/server.js:154:5)","timestamp":"2025-08-03 15:07:09"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-03 15:10:27"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-03 15:10:27"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-03 15:10:27"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-03 15:10:27"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-03 15:10:27"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:10:42 +0000] \"GET /health HTTP/1.1\" 200 122 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:10:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:10:42","url":"/health","userAgent":"curl/8.14.1","userId":"anonymous"}
{"ip":"::1","level":"error","message":"Application Error Route /api/v1/auth/health not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/auth/health not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-03 15:10:54","url":"/api/v1/auth/health","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:10:54 +0000] \"GET /api/v1/auth/health HTTP/1.1\" 404 1181 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:10:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-03 15:10:54","url":"/api/v1/auth/health","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"SIGINT received, shutting down gracefully","service":"mock-test-api","timestamp":"2025-08-03 15:11:11"}
{"level":"info","message":"Database connection closed","service":"mock-test-api","timestamp":"2025-08-03 15:11:11"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-03 15:11:13"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-03 15:11:13"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-03 15:11:13"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-03 15:11:13"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-03 15:11:13"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:14:23 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 401 59 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:14:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"83ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:14:23","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:15:00 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 401 59 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:15:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"7ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:15:00","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:15:53 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 401 59 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:15:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"5ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:15:53","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:15:59 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 401 59 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:15:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"4ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:15:59","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:16:11 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 401 59 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:16:11"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"4ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:16:11","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:18:49 +0000] \"POST /api/v1/auth/register HTTP/1.1\" 401 73 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:18:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:18:49","url":"/register","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:20:37","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:20:37 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:20:37"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"502ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:20:37","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"error":"jwt malformed","ip":"::ffff:127.0.0.1","level":"warn","message":"JWT verification failed","service":"mock-test-api","timestamp":"2025-08-03 15:20:37","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:20:37 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 54 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:20:37"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:20:37","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"error":"jwt malformed","ip":"::ffff:127.0.0.1","level":"warn","message":"JWT verification failed","service":"mock-test-api","timestamp":"2025-08-03 15:20:37","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:20:37 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 54 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:20:37"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:20:37","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:21:19","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:21:19 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:21:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"369ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:21:19","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"error":"jwt malformed","ip":"::ffff:127.0.0.1","level":"warn","message":"JWT verification failed","service":"mock-test-api","timestamp":"2025-08-03 15:21:19","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:21:19 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 54 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:21:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:21:19","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"error":"jwt malformed","ip":"::ffff:127.0.0.1","level":"warn","message":"JWT verification failed","service":"mock-test-api","timestamp":"2025-08-03 15:21:19","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:21:19 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 54 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:21:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:21:19","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:21:35","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:21:35 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:21:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"346ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:21:35","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"error":"jwt malformed","ip":"::ffff:127.0.0.1","level":"warn","message":"JWT verification failed","service":"mock-test-api","timestamp":"2025-08-03 15:21:35","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:21:35 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 54 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:21:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:21:35","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"error":"jwt malformed","ip":"::ffff:127.0.0.1","level":"warn","message":"JWT verification failed","service":"mock-test-api","timestamp":"2025-08-03 15:21:35","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:21:35 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 54 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:21:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:21:35","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:22:49","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:22:49 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:22:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"406ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:22:49","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:25:02","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:25:02 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:25:02"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"413ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:25:02","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:25:02 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:25:02"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"77ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:25:02","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:25:02 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:25:02"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"97ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:25:02","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:29:27","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:29:27 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:29:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"420ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:29:27","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:29:27 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:29:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:29:27","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:29:27 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:29:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:29:27","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:29:44","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:29:44 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:29:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"421ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:29:44","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:29:44 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:29:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:29:44","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:29:44 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:29:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:29:44","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:30:05","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:30:05 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:30:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"369ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:30:05","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:30:05 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:30:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"42ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:30:05","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:30:05 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:30:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"45ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:30:05","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:33:03","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:33:03 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:33:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"424ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:33:03","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:33:03 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:33:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:33:03","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:33:04 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:33:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:33:04","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:35:46","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:46 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"418ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:35:46","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:47 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:47"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"67ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:35:47","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:47 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:47"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:35:47","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:48 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:35:48","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:48 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:35:48","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:50 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:35:50","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:50 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:35:50","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:54 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:35:54","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:35:54 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:35:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:35:54","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:36:24 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:36:24"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:36:24","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:36:25 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:36:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:36:25","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:36:27 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:36:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:36:27","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:36:31 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:36:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:36:31","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:36:54 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:36:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:36:54","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:36:55 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:36:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:36:55","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:36:57 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:36:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:36:57","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:37:01 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:37:01","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:37:01 +0000] \"GET /api/v1/analytics/recent-activities HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:37:01","url":"/recent-activities","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:37:02 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:02"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:37:02","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:37:04 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:37:04","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:37:08 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:08"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:37:08","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:37:32 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:37:32","url":"/dashboard/stats","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:37:39","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:37:39 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"401ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:37:39","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"error":"Bad control character in string literal in JSON at position 16","ip":"::1","level":"warn","message":"JWT verification failed","service":"mock-test-api","timestamp":"2025-08-03 15:37:46","userAgent":"curl/8.14.1"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:37:46 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 54 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:37:46","url":"/dashboard/stats","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:37:59","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:37:59 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:37:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"653ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:37:59","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:38:08 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:08","url":"/dashboard/stats","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:38:28","userId":"cmdw2g1xl0000i2zq197aoscl"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:28 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"392ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:38:28","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:28 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:28","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:28 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 401 76 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:28","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:29 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:29","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:29 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:29","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:29 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:29","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:29 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 77 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"94ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:38:29","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:30 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:30","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:32 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:32","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:33 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:33"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"0ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:33","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:35 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:35","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:38:39 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:39"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:39","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:38:47 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 73 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:38:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:38:47","url":"/dashboard/stats","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:39:09 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:39:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:39:09","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:39:10 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:39:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:39:10","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:39:12 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:39:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:39:12","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:39:16 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:39:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:39:16","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:39:46 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:39:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:39:46","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:39:48 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:39:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:39:48","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:39:50 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:39:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:39:50","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:39:55 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:39:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:39:55","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:40:26 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:40:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:40:26","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:40:27 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:40:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:40:27","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:40:30 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:40:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:40:30","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:40:34 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:40:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"0ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:40:34","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:41:05 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:41:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:41:05","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:41:06 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:41:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:41:06","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:41:09 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:41:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:41:09","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:41:13 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:41:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:41:13","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:41:44 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:41:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:41:44","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:41:46 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:41:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:41:46","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:41:48 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:41:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:41:48","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:41:53 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:41:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:41:53","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:42:23 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:42:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:42:23","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:42:25 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:42:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:42:25","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:42:27 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:42:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:42:27","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:42:32 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:42:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:42:32","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:43:03 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:03","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:43:04 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:04","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:43:07 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:07"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:07","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:43:11 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:11"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:11","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:43:40","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:43:40 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"423ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:43:40","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:43:42 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:42","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:43:43 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:43","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:43:46","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:43:46 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"426ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:43:46","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:43:46 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:46","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:43:50 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:50","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:43:51 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:43:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"42ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:43:51","url":"/dashboard/stats","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:44:21 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:44:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:44:21","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:44:22 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:44:22"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:44:22","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:44:25 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:44:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:44:25","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:44:29 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:44:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:44:29","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:45:18","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:45:18 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:45:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"391ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:45:18","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:45:23","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:45:23 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:45:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"375ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:45:23","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:45:37 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:45:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:45:37","url":"/dashboard/stats","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:45:42 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 401 76 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:45:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:45:42","url":"/dashboard/stats","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"SIGINT received, shutting down gracefully","service":"mock-test-api","timestamp":"2025-08-03 15:46:18"}
{"level":"info","message":"Database connection closed","service":"mock-test-api","timestamp":"2025-08-03 15:46:18"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-03 15:46:20"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-03 15:46:20"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-03 15:46:20"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-03 15:46:20"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-03 15:46:20"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:46:54","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:46:54 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:46:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"604ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:46:54","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:47:07 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 200 1071 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"196ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:47:07","url":"/dashboard/stats","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:29 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:47:29","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:31 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 401 73 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"2ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-03 15:47:31","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:47:38","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:38 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"407ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:47:38","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:38 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:38","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:38 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"64ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:47:38","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:39 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:39"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:39","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:41 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:41"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:41","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:45 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:45"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:45","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:46 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"97ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:46","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:47 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:47"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:47","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:49 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:49"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:49","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:53 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:53","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:54 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"97ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 15:47:54","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:47:54"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:47:54"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:54 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"135ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:54","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:47:55"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:47:55"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:55 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:55","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:47:57"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:47:57"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:47:57 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:47:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:47:57","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:01"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:01"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:48:01 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:48:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:48:01","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:31"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:31"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:48:31 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:48:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:48:31","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:32"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:32"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:48:32 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:48:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:48:32","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"error","message":"Application Error Route /api/v1/admin/analytics/dashboard not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/analytics/dashboard not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-03 15:48:34","url":"/api/v1/admin/analytics/dashboard","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:48:34 +0000] \"GET /api/v1/admin/analytics/dashboard HTTP/1.1\" 404 1187 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:48:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-03 15:48:34","url":"/api/v1/admin/analytics/dashboard","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:34"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:34"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:48:34 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:48:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:48:34","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:38"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:48:38"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:48:38 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:48:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:48:38","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:08"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:08"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:49:08 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:49:08"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"49ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:49:08","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:09"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:09"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:49:09 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:49:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:49:09","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:11"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:11"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:49:11 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:49:11"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:49:11","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:15"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:15"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:49:15 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:49:15"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:49:15","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:45"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:45"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:49:45 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:49:45"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:49:45","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:46"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:46"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:49:46 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:49:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:49:46","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:48"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:48"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:49:48 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:49:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:49:48","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:53"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:49:53"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:49:53 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:49:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:49:53","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:50:23"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:50:23"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:50:23 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:50:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:50:23","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:50:24"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:50:24"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:50:24 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:50:24"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:50:24","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:50:26"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:50:26"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:50:26 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:50:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:50:26","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:50:30"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:50:30"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:50:30 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:50:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:50:30","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:00"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:00"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:51:00 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:51:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:51:00","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:01"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:01"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:51:01 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:51:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:51:01","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:03"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:03"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:51:03 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:51:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:51:03","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:07"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:07"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:51:07 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:51:07"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:51:07","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:37"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:37"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:51:37 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:51:37"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:51:37","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:38"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:38"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:51:38 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:51:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:51:38","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:40"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:40"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:51:40 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:51:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:51:40","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:44"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:51:44"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:51:44 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:51:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:51:44","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:14"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:14"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:52:14 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:14"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:14","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:15"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:15"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:52:15 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:15"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:15","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:17"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:17"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:52:17 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:17"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:17","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:21"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:21"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:52:21 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:21","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:52:25 +0000] \"GET /api/v1/users HTTP/1.1\" 500 1585 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:25","url":"/","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:51"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:51"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:52:51 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:51","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:52"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:52"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:52:52 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:52","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:54"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:54"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:52:54 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"52ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:54","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:58"}
{"clientVersion":"6.13.0","level":"error","message":"Get all questions failed \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.question.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/services/questionService.js:123:25\n\n  120 }\n  121 \n  122 const [questions, total] = await Promise.all([\n→ 123   prisma.question.findMany({\n          where: {\n            isActive: false\n          },\n          include: {\n            options: {\n              select: {\n                id: true,\n                text: true,\n                isCorrect: true\n              }\n            },\n            examCategory: {\n              select: {\n                name: true,\n                color: true\n              }\n            },\n            _count: {\n              select: {\n                questionResponses: true,\n                ~~~~~~~~~~~~~~~~~\n        ?       options?: true,\n        ?       images?: true,\n        ?       tags?: true,\n        ?       examQuestions?: true,\n        ?       responses?: true,\n        ?       scores?: true\n              }\n            }\n          },\n          orderBy: {\n            createdAt: \"desc\"\n          },\n          skip: 0,\n          take: 20\n        })\n\nUnknown field `questionResponses` for select statement on model `QuestionCountOutputType`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async Promise.all (index 0)\n    at async QuestionService.getAllQuestions (/home/ahmadi/Desktop/mock/src/services/questionService.js:122:34)\n    at async getAllQuestions (/home/ahmadi/Desktop/mock/src/controllers/adminController.js:516:25)","timestamp":"2025-08-03 15:52:58"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:52:58 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 500 63 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:52:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 15:52:58","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"SIGINT received, shutting down gracefully","service":"mock-test-api","timestamp":"2025-08-03 15:53:02"}
{"level":"info","message":"Database connection closed","service":"mock-test-api","timestamp":"2025-08-03 15:53:02"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-03 15:58:19"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-03 15:58:19"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-03 15:58:19"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-03 15:58:19"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-03 15:58:19"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:58:26 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 200 127 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:58:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"128ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:58:26","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:58:32 +0000] \"GET /health HTTP/1.1\" 200 122 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:58:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:58:32","url":"/health","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-03 15:58:41","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:58:41 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:58:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"577ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:58:41","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::1 - - [03/Aug/2025:19:58:51 +0000] \"GET /api/v1/users HTTP/1.1\" 200 1877 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-03 15:58:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"95ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:58:51","url":"/","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:58:56 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:58:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 15:58:56","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:59:26 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:59:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"35ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 15:59:26","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:59:52 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:59:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 15:59:52","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:59:52 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:59:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"87ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 15:59:52","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:19:59:55 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 15:59:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 15:59:55","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:00:25 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:00:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:00:25","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:00:55 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:00:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:00:55","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:01:25 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:01:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:01:25","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:01:55 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:01:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:01:55","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:02:15 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:02:15"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:02:15","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:02:32 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:02:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:02:32","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:02:34 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:02:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:02:34","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:03:53 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:03:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"74ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:03:53","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:04:53 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:04:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:04:53","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:05:02 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:05:02"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"45ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:05:02","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:05:02 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:05:02"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"30ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:05:02","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:05:04 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 200 106 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:05:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"89ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 16:05:04","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:05:06 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 41 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:05:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"78ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 16:05:06","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:05:36 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:05:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:05:36","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:06:06 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:06:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:06:06","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:06:36 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:06:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:06:36","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:07:06 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:07:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:07:06","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:07:36 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:07:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:07:36","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:08:06 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:08:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:08:06","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:08:36 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:08:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:08:36","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:09:06 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:09:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"37ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:09:06","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:09:36 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:09:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:09:36","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:10:06 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:10:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"59ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:10:06","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:10:36 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:10:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:10:36","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:10:40 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:10:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:10:40","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:11:10 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:11:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:11:10","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:11:32 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:11:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:11:32","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:11:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:11:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:11:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:12:25 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:12:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"32ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:12:25","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:12:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:12:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:12:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:13:25 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:13:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:13:25","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:13:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:13:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:13:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:14:25 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:14:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"99ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:14:25","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:14:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:14:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:14:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:15:25 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:15:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"86ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:15:25","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:15:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:15:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:15:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:16:25 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:16:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:16:25","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:16:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:16:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:16:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:17:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:17:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:17:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:17:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:17:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:17:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:18:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:18:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:18:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:18:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:18:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:18:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:19:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:19:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"44ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:19:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:19:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:19:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:19:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:20:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:20:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"37ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:20:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:20:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:20:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:20:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:21:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:21:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:21:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:21:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:21:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:21:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:22:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:22:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:22:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:22:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:22:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:22:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:23:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:23:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:23:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:23:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:23:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"32ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:23:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:24:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:24:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:24:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:24:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:24:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:24:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:25:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:25:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"48ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:25:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:25:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:25:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:25:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"SIGINT received, shutting down gracefully","service":"mock-test-api","timestamp":"2025-08-03 16:26:10"}
{"level":"info","message":"Database connection closed","service":"mock-test-api","timestamp":"2025-08-03 16:26:10"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-03 16:26:15"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-03 16:26:15"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-03 16:26:15"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-03 16:26:15"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-03 16:26:15"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-03 16:26:15"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:26:27 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:26:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"125ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:26:27","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:26:57 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:26:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:26:57","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:27:27 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:27:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:27:27","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:27:50 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:27:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:27:50","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:27:59 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:27:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"93ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:27:59","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"email":"student1@example.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-03 16:29:25","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:29:25 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:29:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"493ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 16:29:25","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: BeW8frtH_jxWb-9DAAAB","service":"mock-test-api","timestamp":"2025-08-03 16:29:25"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-03 16:29:25"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:29:29 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:29:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-03 16:29:29","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:29:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:29:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 16:29:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:29:57 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:29:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"160ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 16:29:57","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:29:58 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:29:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 16:29:58","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:30:00 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:30:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 16:30:00","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [03/Aug/2025:20:30:04 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 16:30:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 16:30:04","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:02:42:44 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 22:42:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-03 22:42:44","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:02:42:44 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-03 22:42:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-03 22:42:44","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","errorCode":"P1001","level":"error","message":"Database connection failed: Can't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","name":"PrismaClientInitializationError","service":"mock-test-api","stack":"PrismaClientInitializationError: Can't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.\n    at r (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:112:2770)\n    at async Database.connect (/home/ahmadi/Desktop/mock/src/config/database.js:34:7)\n    at async startServer (/home/ahmadi/Desktop/mock/src/server.js:226:5)","timestamp":"2025-08-03 23:59:12"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:02:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:02:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:02:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:02:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:02:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:02:35"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:02:47"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:02:47"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:02:47"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:02:47"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:02:47"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:02:47"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:02:53 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:02:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"168ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:02:53","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:02:53 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:02:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"339ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:02:53","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:02:54 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:02:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:02:54","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:02:56 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:02:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:02:56","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:03:00 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:03:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:03:00","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:03:13 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:03:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:03:13","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:03:13 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:03:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"43ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:03:13","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:03:14 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:03:14"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:03:14","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:03:16 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:03:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:03:16","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:03:20 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:03:20"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:03:20","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:03:43 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:03:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:03:43","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:04:13 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:04:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:04:13","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:04:20 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:04:20"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:04:20","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:04:21 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:04:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:04:21","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:04:23 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:04:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:04:23","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:04:27 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:04:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:04:27","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:04:43 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:04:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:04:43","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:05:13 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:05:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:05:13","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:05:27 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:05:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:05:27","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:05:28 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:05:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:05:28","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:05:31 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:05:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:05:31","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:05:35 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:05:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:05:35","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:05:43 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:05:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:05:43","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:06:14 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:06:14"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:06:14","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:06:35 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:06:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:06:35","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:06:36 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:06:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:06:36","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:06:38 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:06:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:06:38","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:06:42 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 826 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:06:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:06:42","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:06:44 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:06:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:06:44","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:07:14 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:07:14"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:07:14","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:07:28"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:07:28"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:07:28"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:07:28"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:07:28"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:07:28"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:07:42 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 676 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:07:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"153ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:07:42","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:07:43 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:07:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"30ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:07:43","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:07:44 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:07:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"149ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:07:44","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:07:46"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:07:46"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:07:46"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:07:46"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:07:46"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:07:46"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:07:50 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 676 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:07:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"276ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:07:50","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:07:52"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:07:52"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:07:52"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:07:52"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:07:52"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:07:52"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:08:14 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:08:14"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"130ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:08:14","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:08:44 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:08:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:08:44","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:08:50 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:08:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"118ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:08:50","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:08:51 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:08:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:08:51","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:08:53 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:08:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:08:53","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:08:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 676 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:08:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:08:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"SIGTERM received, shutting down gracefully","service":"mock-test-api","timestamp":"2025-08-04 00:09:09"}
{"level":"info","message":"Database connection closed","service":"mock-test-api","timestamp":"2025-08-04 00:09:09"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:09:20"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:09:20"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:09:20"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:09:20"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:09:20"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:09:20"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:09:21 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:09:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"159ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:09:21","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:09:24 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:09:24"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:09:24","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:09:24 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:09:24"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"142ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:09:24","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:09:26 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:09:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:09:26","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:09:28 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:09:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:09:28","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:09:32 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 676 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:09:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:09:32","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:09:55 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:09:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:09:55","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:09:59"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:09:59"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:09:59"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:09:59"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:09:59"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:09:59"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:10:14"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:14"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:10:14"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:10:14"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:14"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:10:14"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:10:20"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:20"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:10:20"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:10:20"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:20"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:10:20"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:10:26 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:10:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"366ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:10:26","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:10:26 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:10:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"344ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:10:26","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:10:28"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:28"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:10:28"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:10:28"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:28"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:10:28"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:10:30 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:10:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"233ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:10:30","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:10:34 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:10:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:10:34","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:10:36"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:36"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:10:36"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:10:36"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:36"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:10:36"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:10:42"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:42"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:10:42"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:10:42"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:10:42"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:10:42"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:10:57 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:10:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"167ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:10:57","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:11:04"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:04"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:11:04"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:11:04"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:04"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:11:04"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:11:05 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:11:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"169ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:11:05","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:11:05 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:11:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"197ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:11:05","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:11:07 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:11:07"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"40ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:11:07","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:11:12"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:12"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:11:12"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:11:12"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:12"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:11:12"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:11:21"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:21"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:11:21"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:11:21"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:21"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:11:21"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:11:32"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:32"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:11:32"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:11:32"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:32"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:11:32"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:11:35 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:11:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"217ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:11:36","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:11:42"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:42"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:11:42"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:11:42"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:11:42"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:11:42"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:12:04"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:04"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:12:04"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:12:04"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:04"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:12:04"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:06 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"126ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:12:06","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:11 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:11"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"119ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:12:11","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:12:14"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:14"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:12:14"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:12:14"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:14"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:12:14"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:15 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:15"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"143ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:12:15","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:19 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"60ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:12:19","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:12:24"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:24"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:12:24"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:12:24"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:24"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:12:24"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:12:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:12:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:12:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:12:35"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:36 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"189ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:12:36","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:40 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"109ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:12:40","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:42 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"105ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:12:42","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:42 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"153ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:12:42","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:12:44"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:44"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:12:44"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:12:44"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:12:44"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:12:44"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:47 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:47"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"148ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:12:47","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:12:51 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:12:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:12:51","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:13:00 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:13:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"129ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:13:00","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:13:02"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:02"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:13:02"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:13:02"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:02"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:13:02"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:13:04 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:13:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"152ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:13:04","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:13:12"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:12"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:13:12"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:13:12"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:12"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:13:12"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:13:23"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:23"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:13:23"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:13:23"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:23"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:13:23"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:13:34 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:13:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"206ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:13:34","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:13:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:13:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:13:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:13:35"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:13:46"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:46"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:13:46"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:13:46"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:46"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:13:46"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:13:59"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:59"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:13:59"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:13:59"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:13:59"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:13:59"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:14:04 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:14:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"146ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:14:04","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:14:11"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:14:11"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:14:11"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:14:11"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:14:11"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:14:11"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:14:24"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:14:24"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:14:24"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:14:24"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:14:24"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:14:24"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:14:34 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:14:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"209ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:14:34","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:14:40"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:14:40"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:14:40"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:14:40"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:14:40"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:14:40"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:14:51"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:14:51"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:14:51"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:14:51"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:14:51"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:14:51"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:15:05 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:15:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"167ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:15:05","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:15:10"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:15:10"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:15:10"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:15:10"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:15:10"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:15:10"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:15:29"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:15:29"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:15:29"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:15:29"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:15:29"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:15:29"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:15:35 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:15:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"178ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:15:35","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:15:42"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:15:42"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:15:42"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:15:42"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:15:42"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:15:42"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:15:59"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:15:59"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:15:59"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:15:59"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:15:59"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:15:59"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:16:05 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:16:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"185ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:16:05","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:16:19"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:16:19"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:16:19"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:16:19"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:16:19"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:16:19"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:16:35 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:16:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"108ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:16:35","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:05 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:17:05","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:07 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:07"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"122ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:07","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:08 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:08"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:08","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:10 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:10","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:10 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"135ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:17:10","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:11 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:11"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:11","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:13 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:13","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:17 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:17"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:17","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:21 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:17:21","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:24 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:24"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:24","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:25 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:25","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:27 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:27","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:31 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 500 580 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:17:31","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:17:55 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:17:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:17:55","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:18:18"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:18:18"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:18:18"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:18:18"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:18:18"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:18:18"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:18:25 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:18:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"241ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:18:25","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:18:31 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 520 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:18:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"105ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:18:31","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:18:58"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:18:58"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:18:58"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:18:58"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:18:58"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:18:58"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:18:58 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:18:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"179ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:18:58","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:19:10"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:19:10"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:19:10"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:19:10"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:19:10"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:19:10"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:19:23"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:19:23"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:19:23"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:19:23"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:19:23"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:19:23"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:19:29 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:19:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"188ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:19:29","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:19:31 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:19:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"205ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:19:31","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:19:39"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:19:39"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:19:39"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:19:39"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:19:39"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:19:39"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:19:53"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:19:53"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:19:53"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:19:53"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:19:53"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:19:53"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:19:59 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:19:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"142ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:19:59","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:20:17"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:20:17"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:20:17"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:20:17"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:20:17"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:20:17"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:20:21"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:20:21"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:20:21"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:20:21"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:20:21"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:20:21"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:20:30 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:20:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"315ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:20:30","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:20:32 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:20:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"144ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:20:32","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:20:40"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:20:40"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:20:40"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:20:40"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:20:40"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:20:40"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:20:43"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:20:43"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:20:43"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:20:43"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:20:43"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:20:43"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:20:51 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:20:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"208ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:20:51","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:20:51 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:20:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"241ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:20:51","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:21:21 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:21:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:21:21","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:21:51 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:21:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:21:51","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:21:51 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:21:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:21:51","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:22:21 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:22:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:22:21","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:22:51 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:22:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:22:51","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:22:51 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:22:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:22:51","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:23:21 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:23:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"30ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:23:21","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:23:51 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:23:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:23:51","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:23:51 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:23:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:23:51","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:24:21 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:24:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:24:21","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:24:51 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:24:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:24:51","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:24:51 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:24:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:24:51","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:25:21 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:25:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:25:21","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:25:51 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:25:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"106ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:25:51","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:25:52 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:25:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"78ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:25:52","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:12 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"110ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:12","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:12 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 123 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"127ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:26:12","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:12 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 200 127 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"118ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:26:12","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:12 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 106 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"128ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:26:12","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:42 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:42","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:42 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:42","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:42 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:42","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:42 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:42","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:53 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:53","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:53 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:53","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:53 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:53","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:53 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:53","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:26:53 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:26:53","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: v-AS-60z5iyMmLK5AAAC","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"level":"info","message":"🔌 WebSocket connected: nMqxgE77ZvTsG_jFAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:26:53"}
{"level":"info","message":"🔌 WebSocket disconnected: v-AS-60z5iyMmLK5AAAC","service":"mock-test-api","timestamp":"2025-08-04 00:27:02"}
{"level":"info","message":"🔌 WebSocket disconnected: nMqxgE77ZvTsG_jFAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:27:02"}
{"level":"info","message":"🔌 WebSocket connected: vEk92EWubB4AbeNiAAAF","service":"mock-test-api","timestamp":"2025-08-04 00:27:03"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:27:03 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:27:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:27:03","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:27:03 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:27:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:27:03","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:27:03 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:27:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:27:03","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:27:03 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:27:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:27:03","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:27:03 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:27:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:27:03","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: trlF2z7K-8NOJPKNAAAH","service":"mock-test-api","timestamp":"2025-08-04 00:27:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:27:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:27:04"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:27:34 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:27:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"88ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:27:34","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:27:53 +0000] \"POST /api/v1/admin/users HTTP/1.1\" 400 268 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:27:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"37ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 00:27:53","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:27:54 +0000] \"POST /api/v1/admin/users HTTP/1.1\" 400 268 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:27:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"9ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 00:27:54","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:28:31 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:28:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:28:31","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:28:31 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 123 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:28:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:28:31","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:28:31 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:28:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:28:31","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:28:31 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:28:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:28:31","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:26 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:26","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:26 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:26","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:26 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:26","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:26 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:26","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: vEk92EWubB4AbeNiAAAF","service":"mock-test-api","timestamp":"2025-08-04 00:29:32"}
{"level":"info","message":"🔌 WebSocket disconnected: trlF2z7K-8NOJPKNAAAH","service":"mock-test-api","timestamp":"2025-08-04 00:29:32"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:34 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:34","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:34 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:34","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:34 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:34","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:34 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"30ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:34","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: KOHskFpm0YhHckOsAAAK","service":"mock-test-api","timestamp":"2025-08-04 00:29:34"}
{"level":"info","message":"🔌 WebSocket connected: qk4Xdm23ZHu7q44xAAAL","service":"mock-test-api","timestamp":"2025-08-04 00:29:35"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:29:35"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:29:35"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:35 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:35","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: qk4Xdm23ZHu7q44xAAAL","service":"mock-test-api","timestamp":"2025-08-04 00:29:57"}
{"level":"info","message":"🔌 WebSocket disconnected: KOHskFpm0YhHckOsAAAK","service":"mock-test-api","timestamp":"2025-08-04 00:29:57"}
{"level":"info","message":"🔌 WebSocket connected: t3eNelm2da1EACQMAAAO","service":"mock-test-api","timestamp":"2025-08-04 00:29:58"}
{"level":"info","message":"🔌 WebSocket connected: J7za0a8AZvyL5KTXAAAP","service":"mock-test-api","timestamp":"2025-08-04 00:29:58"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:29:58"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:29:58"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:59 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:59","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:59 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:59","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:59 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:59","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:59 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:59","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:29:59 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:29:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:29:59","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: t3eNelm2da1EACQMAAAO","service":"mock-test-api","timestamp":"2025-08-04 00:30:06"}
{"level":"info","message":"🔌 WebSocket disconnected: J7za0a8AZvyL5KTXAAAP","service":"mock-test-api","timestamp":"2025-08-04 00:30:06"}
{"level":"info","message":"🔌 WebSocket connected: vrhZRrz41WLFQC2cAAAR","service":"mock-test-api","timestamp":"2025-08-04 00:30:22"}
{"level":"info","message":"🔌 WebSocket connected: 6nB_Xam7xQ0chfAAAAAT","service":"mock-test-api","timestamp":"2025-08-04 00:30:22"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:30:22"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:30:22"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:30:23 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:30:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:30:23","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:30:23 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:30:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:30:23","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:30:23 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:30:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:30:23","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:30:23 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:30:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:30:23","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:30:23 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:30:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:30:23","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:12 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"63ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:12","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:12 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"54ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:12","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:12 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"61ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:12","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:12 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"72ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:12","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:42 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"67ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:42","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:43 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:43","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:43 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:43","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:43 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:43","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:31:43 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:31:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:31:43","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 6nB_Xam7xQ0chfAAAAAT","service":"mock-test-api","timestamp":"2025-08-04 00:33:07"}
{"level":"info","message":"🔌 WebSocket disconnected: vrhZRrz41WLFQC2cAAAR","service":"mock-test-api","timestamp":"2025-08-04 00:33:07"}
{"level":"info","message":"🔌 WebSocket connected: 90Tl2jYQLDWfzawDAAAV","service":"mock-test-api","timestamp":"2025-08-04 00:33:09"}
{"level":"info","message":"🔌 WebSocket connected: RS2ouh7gC9zjKlqIAAAX","service":"mock-test-api","timestamp":"2025-08-04 00:33:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:33:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:33:09"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:10 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:10","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:10 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:10","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:10 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:10","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:10 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:10","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:10 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:10","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:33:37"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:33:37"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:33:37"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:33:37"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:33:37"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:33:37"}
{"level":"info","message":"🔌 WebSocket connected: nL7mSydxdgjmx1tLAAAB","service":"mock-test-api","timestamp":"2025-08-04 00:33:37"}
{"level":"info","message":"🔌 WebSocket connected: S3MWMM_FPA2SENdDAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:33:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:33:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:33:39"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:40 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"182ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:40","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:40 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"142ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:40","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:40 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"187ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:40","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:33:40 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:33:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"173ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:33:40","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:34:10 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:34:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"137ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:34:10","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:34:10 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:34:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:34:10","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:34:10 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:34:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:34:10","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:34:10 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:34:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:34:10","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:34:10 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:34:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:34:10","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:34:26 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:34:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"129ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:34:26","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:34:56 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:34:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:34:56","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:35:26 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:35:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:35:26","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:35:56 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:35:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:35:56","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"🔌 WebSocket connected: qmYEVPzRY6qU45yoAAAB","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"🔌 WebSocket connected: 3-gZobCibXf55zhJAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:36:06"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:36:26 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:36:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"111ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:36:26","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 3-gZobCibXf55zhJAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:36:33"}
{"level":"info","message":"🔌 WebSocket disconnected: qmYEVPzRY6qU45yoAAAB","service":"mock-test-api","timestamp":"2025-08-04 00:36:33"}
{"level":"info","message":"🔌 WebSocket connected: 1WYhNhmtJ0p2VVe9AAAF","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"level":"info","message":"🔌 WebSocket connected: 4vyTog_vGGEIJ-RnAAAH","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:36:35 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"88ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:36:35","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:36:35 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"130ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:36:35","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:36:35 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"121ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:36:35","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:36:35 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"140ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:36:35","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:36:35 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:36:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"154ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:36:35","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:05 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:05","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:05 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:05","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:05 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:05","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:05 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"49ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:05","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:35 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:35","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:35 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:35","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:35 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:35","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:35 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:35","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:37:35 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:37:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:37:35","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 4vyTog_vGGEIJ-RnAAAH","service":"mock-test-api","timestamp":"2025-08-04 00:38:04"}
{"level":"info","message":"🔌 WebSocket disconnected: 1WYhNhmtJ0p2VVe9AAAF","service":"mock-test-api","timestamp":"2025-08-04 00:38:04"}
{"level":"info","message":"🔌 WebSocket connected: EnaqD2apjZWPat-MAAAJ","service":"mock-test-api","timestamp":"2025-08-04 00:38:05"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:38:05","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:05 +0000] \"GET /api/v1/exams HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:38:05","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:05 +0000] \"GET /api/v1/users HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"40ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:38:05","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:06 +0000] \"GET /api/v1/questions HTTP/1.1\" 500 981 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"135ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:38:06","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:06 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"133ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:38:06","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: neyIkTX6HNYmh_MBAAAL","service":"mock-test-api","timestamp":"2025-08-04 00:38:06"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:38:06"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:38:06"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:38:07","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:07 +0000] \"GET /api/v1/exams HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:07"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:38:07","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:07 +0000] \"GET /api/v1/questions HTTP/1.1\" 500 981 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:07"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:38:07","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:38:09","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:09 +0000] \"GET /api/v1/exams HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:38:09","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:09 +0000] \"GET /api/v1/questions HTTP/1.1\" 500 981 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 00:38:09","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:10 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:38:10","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:38:40 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:38:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:38:40","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: EnaqD2apjZWPat-MAAAJ","service":"mock-test-api","timestamp":"2025-08-04 00:39:00"}
{"level":"info","message":"🔌 WebSocket disconnected: neyIkTX6HNYmh_MBAAAL","service":"mock-test-api","timestamp":"2025-08-04 00:39:00"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:39:01 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:39:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:39:01","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:39:01 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:39:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:39:01","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: LmauCAVUOTyK-akpAAAO","service":"mock-test-api","timestamp":"2025-08-04 00:39:01"}
{"level":"info","message":"🔌 WebSocket connected: Nd0kXtSH0TQ03iCfAAAP","service":"mock-test-api","timestamp":"2025-08-04 00:39:01"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:39:01"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:39:01"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:39:04 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:39:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:39:04","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:39:18 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:39:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:39:18","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:39:18 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:39:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:39:18","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:39:18 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:39:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:39:18","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:04","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:04 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"37ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:04","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:05","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:05 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:05","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:08","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:08 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:08"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:08","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:12","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:12 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:12","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:20","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:20 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:20"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:20","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:21","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:21 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:21","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:23","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:23 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:23","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:27","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:27 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:27","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:31","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:31 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:31","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:32","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:32 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:32","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:34","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:34 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:34","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:44:38","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:44:38 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:44:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:44:38","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:45:09","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:09 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:45:09","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:45:10","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:10 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:45:10","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:45:12","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:12 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:45:12","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:140:5","timestamp":"2025-08-04 00:45:16","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:16 +0000] \"GET /api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 00:45:16","url":"/api/v1/admin/bookings?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:45:20"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:45:20"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:45:20"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:45:20"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:45:20"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:45:20"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:21","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:21 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"87ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:21","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: xrcWIgT81bbWuN6nAAAC","service":"mock-test-api","timestamp":"2025-08-04 00:45:21"}
{"level":"info","message":"🔌 WebSocket connected: xfeMAfm0VBytJKufAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:45:21"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:45:21"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:45:21"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:22","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:22 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:22"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:22","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:24","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:24 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:24"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:24","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:28","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:30","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:30 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"86ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:30","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: lY9hZ50GDeeeomwhAAAC","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"level":"info","message":"🔌 WebSocket connected: xYdjLygH7OXyaGWHAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:45:30"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:45:31"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:45:31"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:32","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:32 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:32","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:34","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:34 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:34","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:38","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:38 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:38","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:45:41"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:45:41"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:45:41"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:45:41"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:45:41"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:45:41"}
{"level":"info","message":"🔌 WebSocket connected: 6HxaXyIhm3x94DEFAAAC","service":"mock-test-api","timestamp":"2025-08-04 00:45:41"}
{"level":"info","message":"🔌 WebSocket connected: 6-xcsIIgvHOhiLC4AAAD","service":"mock-test-api","timestamp":"2025-08-04 00:45:41"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:42","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"103ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:45:42"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:45:42"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:43","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:43 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:43"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:43","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:45","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:45 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:45"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:45","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:45:49","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:45:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:45:49"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:45:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:19","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:20","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:20 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:20"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:20","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:46:21"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:22","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:22 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:22"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:22","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:46:27"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:46:27"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:46:27"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:46:27"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:46:27"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:46:27"}
{"level":"info","message":"🔌 WebSocket connected: nZVUhVw9vAtfraAtAAAC","service":"mock-test-api","timestamp":"2025-08-04 00:46:28"}
{"level":"info","message":"🔌 WebSocket connected: xg3Ararhjyiw4Ge7AAAD","service":"mock-test-api","timestamp":"2025-08-04 00:46:28"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:46:28"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:46:28"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:28","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"107ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:29","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: xg3Ararhjyiw4Ge7AAAD","service":"mock-test-api","timestamp":"2025-08-04 00:46:30"}
{"level":"info","message":"🔌 WebSocket disconnected: nZVUhVw9vAtfraAtAAAC","service":"mock-test-api","timestamp":"2025-08-04 00:46:30"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:31","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:31 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:31"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:31","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: 8yDbckmlNI_nlGZFAAAG","service":"mock-test-api","timestamp":"2025-08-04 00:46:31"}
{"level":"info","message":"🔌 WebSocket connected: 89L7sszuRDoCrTpoAAAH","service":"mock-test-api","timestamp":"2025-08-04 00:46:31"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:46:31"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:46:31"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:32","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:32 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:32","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:34","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:34 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:34","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:46:38","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:46:38 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:46:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:46:38","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:08","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:08 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:08"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:08","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:09","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:09 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:09","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:11","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:11 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:11"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:11","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:15","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:15 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:15"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:15","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:46","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:46 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:46","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-04 00:47:46","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:46 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"507ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:47:46","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: CMEYITs6IaY4pkc0AAAJ","service":"mock-test-api","timestamp":"2025-08-04 00:47:46"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:47:46"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:46 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 41 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"125ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:47:46","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:46 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 123 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"160ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:47:46","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:46 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 106 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"159ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:47:46","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:46 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 200 127 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:46"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"172ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:47:46","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:47","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:47"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:49","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:49"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:49","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:49"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:50","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:50 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:50","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:52","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:52 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:52","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:53","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:53 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:53","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:47:56","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:47:56 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:47:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:47:56","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:48:23","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:48:23 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:48:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:48:23","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:48:24","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:48:24 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:48:24"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:48:24","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:48:26","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:48:26 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:48:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:48:26","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:48:26","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:48:26 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:48:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:48:26","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:48:27","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:48:27 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:48:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:48:27","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:48:29","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:48:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:48:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:48:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:48:30","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:48:30 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:48:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:48:30","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:48:33","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:48:33 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:48:33"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:48:33","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:00","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:00 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:00","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:01","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:01 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:01","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:03","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:03 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:03","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:03","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:03 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:03","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:04","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:04 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:04","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:06","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:06 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:06","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"SIGINT received, shutting down gracefully","service":"mock-test-api","timestamp":"2025-08-04 00:49:06"}
{"level":"info","message":"Database connection closed","service":"mock-test-api","timestamp":"2025-08-04 00:49:06"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:49:09"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:49:09"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:49:09"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:49:09"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:49:09"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:49:09"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:10","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:10 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"80ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:10","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: UOjS32Zbn8HaZ8OuAAAC","service":"mock-test-api","timestamp":"2025-08-04 00:49:11"}
{"level":"info","message":"🔌 WebSocket connected: s4dN1_aebxJK9yNAAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:49:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:49:11"}
{"level":"info","message":"🔌 WebSocket connected: hRAe5ga7wSzND4hhAAAF","service":"mock-test-api","timestamp":"2025-08-04 00:49:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:49:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:49:11"}
{"level":"info","message":"🔌 WebSocket disconnected: hRAe5ga7wSzND4hhAAAF","service":"mock-test-api","timestamp":"2025-08-04 00:49:14"}
{"level":"info","message":"🔌 WebSocket disconnected: UOjS32Zbn8HaZ8OuAAAC","service":"mock-test-api","timestamp":"2025-08-04 00:49:14"}
{"level":"info","message":"🔌 WebSocket connected: EW5uRUlraENIdonJAAAH","service":"mock-test-api","timestamp":"2025-08-04 00:49:15"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:15","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:15 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:15"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:15","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: UmB6aYFH801LTZs9AAAJ","service":"mock-test-api","timestamp":"2025-08-04 00:49:15"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:49:15"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:49:15"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:16","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:16 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:16","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:18","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:18 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:18","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:22","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:22 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:22"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:22","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:41","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:41 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:41"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:41","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:42","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:44","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:44 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:44","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:48","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:48 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:48","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:52","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:52 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:52","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:53","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:53 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:53","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:55","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:55 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:55","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 00:49:59","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:49:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:49:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"38ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 00:49:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"🔌 WebSocket connected: NSVuGngwlg_9JWI_AAAB","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"🔌 WebSocket connected: xKHtAiguULi0SRGYAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"🔌 WebSocket connected: Nlwe5nNRMzOXKOMqAAAF","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:02"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:50:18 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 126 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:50:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"154ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:50:18","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:50:22"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:50:22"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:50:22"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:50:22"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:50:22"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:50:22"}
{"level":"info","message":"🔌 WebSocket connected: M6VlJZlcLxLUPPzIAAAC","service":"mock-test-api","timestamp":"2025-08-04 00:50:24"}
{"level":"info","message":"🔌 WebSocket connected: YJqu5ndrp8MDudMPAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:50:24"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:24"}
{"level":"info","message":"🔌 WebSocket connected: 8jVzRB-S3q5RxNLiAAAF","service":"mock-test-api","timestamp":"2025-08-04 00:50:25"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:25"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:25"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:50:25 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 126 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:50:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"141ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:50:25","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 00:50:33"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 00:50:33"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 00:50:33"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 00:50:33"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 00:50:33"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 00:50:33"}
{"level":"info","message":"🔌 WebSocket connected: UVLFz043kG5Ot0_8AAAB","service":"mock-test-api","timestamp":"2025-08-04 00:50:34"}
{"level":"info","message":"🔌 WebSocket connected: o2nFjSdteNa_yKZfAAAD","service":"mock-test-api","timestamp":"2025-08-04 00:50:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:34"}
{"level":"info","message":"🔌 WebSocket connected: 5p1iDT2xlt3MTEDfAAAF","service":"mock-test-api","timestamp":"2025-08-04 00:50:36"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:36"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 00:50:36"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:50:48 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:50:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"146ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:50:48","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:51:18 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:51:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:51:18","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:51:48 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:51:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:51:48","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:52:18 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:52:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:52:18","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:52:48 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:52:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:52:48","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:53:18 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:53:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:53:18","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:53:48 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:53:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:53:48","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:54:18 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:54:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:54:18","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:54:48 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:54:48"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"37ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:54:48","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:55:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:55:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"33ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:55:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 5p1iDT2xlt3MTEDfAAAF","service":"mock-test-api","timestamp":"2025-08-04 00:55:22"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:55:40 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 401 59 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:55:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"131ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-04 00:55:40","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:55:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:55:49"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"195ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:55:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:56:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:56:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:56:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:56:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:56:49"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"43ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:56:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:57:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:57:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:57:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:57:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:57:49"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:57:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:16 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"154ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:58:16","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:17 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 77 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:17"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"115ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:58:17","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:17 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 200 127 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:17"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"149ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:58:17","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:19 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 200 106 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:19"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"144ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 00:58:19","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:21 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:21"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"87ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:58:21","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:32 +0000] \"PUT /api/v1/admin/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 400 212 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:32"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"PUT","responseTime":"29ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 00:58:32","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:33 +0000] \"PUT /api/v1/admin/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 400 212 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:33"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"PUT","responseTime":"15ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 00:58:33","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:53 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:58:53","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:53 +0000] \"PUT /api/v1/admin/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 400 229 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"PUT","responseTime":"15ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 00:58:53","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:58:54 +0000] \"PUT /api/v1/admin/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 400 229 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:58:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"PUT","responseTime":"18ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 00:58:54","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:59:12 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:59:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"32ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:59:12","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:59:12 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:59:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:59:12","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:04:59:12 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 00:59:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"166ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 00:59:12","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"email":"admin@mocktest.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-04 01:06:25","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:25 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"454ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:06:25","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: zCiO6dTARQZ3422JAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:06:25"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:06:25"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:25 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"120ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:06:25","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:25 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"118ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:06:25","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:25 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"126ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:06:25","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:25 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"133ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:06:25","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:27 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:06:27","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:06:27","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:27 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:06:27","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:27 +0000] \"GET /api/v1/analytics/dashboard?period=month HTTP/1.1\" 200 520 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"215ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:06:27","url":"/dashboard?period=month","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:27 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"203ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:06:27","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:28 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:06:28","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:06:28","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:28 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:06:28","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:30 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:06:30","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:06:30","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:30 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:06:30","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:34 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:06:34","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:06:34","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:06:34 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:06:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:06:34","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:07:08"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:09 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:07:09","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:07:09","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:09 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:07:09","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:10 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:07:10","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:07:10","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:10 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:07:10","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:12 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:07:12","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:07:12","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:12 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:07:12","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:16 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:07:16","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:07:16","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:16 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:07:16","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"🔌 WebSocket connected: Tx5wG0zNVsdVgnHnAAAC","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"🔌 WebSocket connected: 3Il-ohgD9YeJP0DFAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"🔌 WebSocket connected: f70HFpnHj5eWD_gHAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:07:26"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"🔌 WebSocket connected: NNxc3aDHoL22dL0MAAAC","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"🔌 WebSocket connected: KcEpBHnjFDvOifQkAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:07:37"}
{"level":"info","message":"🔌 WebSocket connected: E_TPqWy5KXikrZD4AAAF","service":"mock-test-api","timestamp":"2025-08-04 01:07:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:07:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:07:39"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:07:49"}
{"ip":"::ffff:127.0.0.1","level":"error","message":"Application Error Route /api/v1/analytics/categories/undefined not found","method":"GET","service":"mock-test-api","stack":"Error: Route /api/v1/analytics/categories/undefined not found\n    at notFoundHandler (/home/ahmadi/Desktop/mock/src/middleware/notFoundHandler.js:2:17)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:328:13)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:346:12)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:280:10)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:646:15\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:265:14)\n    at Function.handle (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:175:3)","timestamp":"2025-08-04 01:07:56","url":"/api/v1/analytics/categories/undefined","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:56 +0000] \"GET /api/v1/analytics/categories/undefined HTTP/1.1\" 404 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"125ms","service":"mock-test-api","statusCode":404,"timestamp":"2025-08-04 01:07:56","url":"/api/v1/analytics/categories/undefined","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:56 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"187ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:07:56","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:57 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:07:57","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:07:57 +0000] \"GET /api/v1/analytics/dashboard?includeCategories=true HTTP/1.1\" 200 520 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:07:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"69ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:07:57","url":"/dashboard?includeCategories=true","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:08:25 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:08:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:08:25","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:08:26 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:08:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:08:26","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:08:29 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:08:29"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:08:29","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:08:33 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:08:33"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:08:33","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:08:35 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:08:35"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:08:35","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:08:36 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:08:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:08:36","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:08:38 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:08:38"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:08:38","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:08:42 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:08:42"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:08:42","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: NNxc3aDHoL22dL0MAAAC","service":"mock-test-api","timestamp":"2025-08-04 01:09:11"}
{"level":"info","message":"🔌 WebSocket disconnected: E_TPqWy5KXikrZD4AAAF","service":"mock-test-api","timestamp":"2025-08-04 01:09:11"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:12 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:09:12","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:12 +0000] \"GET /api/v1/analytics/dashboard?includeCategories=true HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:09:12","url":"/dashboard?includeCategories=true","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:12 +0000] \"GET /api/v1/analytics/dashboard?period=month HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:12"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:09:12","url":"/dashboard?period=month","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: hddKOIsihxKbwaufAAAI","service":"mock-test-api","timestamp":"2025-08-04 01:09:12"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:13 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"202ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:09:13","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: RZQ6RcTEC-roETnKAAAJ","service":"mock-test-api","timestamp":"2025-08-04 01:09:13"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:09:13"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:09:13"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:13 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:09:13","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:15 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:15"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:09:15","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:20 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:20"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:09:20","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:09:33"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:09:33"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:09:33"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:09:33"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:09:33"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:09:33"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:09:33"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:09:33"}
{"level":"info","message":"🔌 WebSocket connected: eGRjqOElXj80wKOfAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:09:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:09:34"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:34 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"200ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:09:34","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: biPrLxQgJ_YUtei-AAAD","service":"mock-test-api","timestamp":"2025-08-04 01:09:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:09:34"}
{"level":"info","message":"🔌 WebSocket connected: MtLALiwC2hlQ5kIYAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:09:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:09:34"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:36 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:36"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:09:36","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:09:40 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:09:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:09:40","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:09:47"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:09:47"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:09:47"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:09:47"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:09:47"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:09:47"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:09:47"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:09:47"}
{"level":"info","message":"🔌 WebSocket connected: miFVCmwPq3aks9xMAAAC","service":"mock-test-api","timestamp":"2025-08-04 01:09:48"}
{"level":"info","message":"🔌 WebSocket connected: waOA0A6IJVxCBLNDAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:09:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:09:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:09:48"}
{"level":"info","message":"🔌 WebSocket connected: aIdjkOkTceBL9eiQAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:09:50"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:09:50"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:10:30"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:10:33 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:10:33"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"183ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:10:33","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:10:33 +0000] \"GET /api/v1/analytics/dashboard?includeCategories=true HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:10:33"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"203ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:10:33","url":"/dashboard?includeCategories=true","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:10:33 +0000] \"GET /api/v1/analytics/dashboard?period=month HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:10:33"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"214ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:10:33","url":"/dashboard?period=month","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:10:34"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:10:36"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:10:40 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 200 265 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:10:40"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:10:40","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: miFVCmwPq3aks9xMAAAC","service":"mock-test-api","timestamp":"2025-08-04 01:10:55"}
{"level":"info","message":"🔌 WebSocket disconnected: aIdjkOkTceBL9eiQAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:10:55"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:10:56 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:10:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:10:56","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:10:56 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:10:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:10:56","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:10:56 +0000] \"GET /api/v1/analytics/dashboard?period=month HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:10:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:10:56","url":"/dashboard?period=month","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:10:56 +0000] \"GET /api/v1/analytics/dashboard?includeCategories=true HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:10:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:10:56","url":"/dashboard?includeCategories=true","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: h6TQdiOyK3FnQjJbAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:10:56"}
{"level":"info","message":"🔌 WebSocket connected: qYLUs9dneuhvoaEqAAAJ","service":"mock-test-api","timestamp":"2025-08-04 01:10:56"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:10:56"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:10:56"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:11:56 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:11:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:11:56","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:11:56 +0000] \"GET /api/v1/analytics/dashboard?period=month HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:11:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:11:56","url":"/dashboard?period=month","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:11:56 +0000] \"GET /api/v1/analytics/dashboard?includeCategories=true HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:11:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:11:56","url":"/dashboard?includeCategories=true","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:11:56 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:11:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:11:56","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: qYLUs9dneuhvoaEqAAAJ","service":"mock-test-api","timestamp":"2025-08-04 01:12:08"}
{"email":"student1@example.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 01:12:16","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:16 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"639ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:12:16","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: lekcdsOCECPbw9YyAAAL","service":"mock-test-api","timestamp":"2025-08-04 01:12:16"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:12:16"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:16 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:16"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:12:16","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:17 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:17"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:12:17","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:18 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:18"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"36ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:12:18","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:20 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:20"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:12:20","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:24 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:24"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:12:24","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:51 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:51"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:12:51","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:52 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:12:52","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:54 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:54"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:12:54","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:12:58 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:12:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:12:58","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:13:48"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:13:48"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:13:48"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:13:48"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:13:48"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:13:48"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:13:48"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:13:48"}
{"level":"info","message":"🔌 WebSocket connected: cgaG52RhLrxUe7gVAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:13:50"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:13:50"}
{"level":"info","message":"🔌 WebSocket disconnected: cgaG52RhLrxUe7gVAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:13:51"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:14:00"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:14:00"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:14:00"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:14:00"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:14:00"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:14:00"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:14:00"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:14:15"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:14:15"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:14:15"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:14:15"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:14:15"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:14:15"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:14:15"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:14:29"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:14:29"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:14:29"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:14:29"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:14:29"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:14:29"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:14:29"}
{"level":"info","message":"🔌 WebSocket connected: olS59-0zJYMQxo54AAAC","service":"mock-test-api","timestamp":"2025-08-04 01:18:55"}
{"level":"info","message":"🔌 WebSocket connected: A7gbL8lN5dKwSkUqAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:18:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:18:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:18:55"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:18:56"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:18:56 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:18:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"102ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:18:56","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:18:56 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:18:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"142ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:18:56","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:18:56 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:18:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"180ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:18:56","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:18:56 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:18:56"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"303ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:18:56","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:18:57"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:18:57 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:18:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:18:57","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:18:57 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:18:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:18:57","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:18:59"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:18:59 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:18:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:18:59","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:18:59 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:18:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:18:59","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:03"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:03 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:03","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:03 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:03"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:03","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:05 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:05","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:05"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:05 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:05","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:06 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:06","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:06"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:06 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:06"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:06","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:09 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:09","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:09"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:09 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:09"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:09","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:13 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:13","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:13"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:13 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:13"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:13","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: A7gbL8lN5dKwSkUqAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:19:26"}
{"level":"info","message":"🔌 WebSocket disconnected: olS59-0zJYMQxo54AAAC","service":"mock-test-api","timestamp":"2025-08-04 01:19:26"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:27 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:19:27","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:27 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:27","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:27"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:27 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:27","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:27 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"37ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:19:27","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: lD4waDElvzCA45RvAAAG","service":"mock-test-api","timestamp":"2025-08-04 01:19:27"}
{"level":"info","message":"🔌 WebSocket connected: WrFOm2WmrrSkiax1AAAH","service":"mock-test-api","timestamp":"2025-08-04 01:19:27"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:19:27"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:19:27"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:28 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:28","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:28"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:28 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:28"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:28","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:30 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:30","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:30"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:30 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:30"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:30","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:34 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 999 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:34","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Get exam details failed examService.getExamDetails is not a function","service":"mock-test-api","stack":"TypeError: examService.getExamDetails is not a function\n    at getExamDetails (/home/ahmadi/Desktop/mock/src/controllers/examController.js:48:38)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:376:14)","timestamp":"2025-08-04 01:19:34"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:19:34 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 66 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:19:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:19:34","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:20:06"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:20:06"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:20:06"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:20:06"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:20:06"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:20:06"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:20:06"}
{"level":"info","message":"🔌 WebSocket connected: rq9yIli51rgt6n9-AAAB","service":"mock-test-api","timestamp":"2025-08-04 01:20:07"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:20:07"}
{"level":"info","message":"🔌 WebSocket connected: x6bKgsDocgliN2ijAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:20:07"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:20:07"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"🔌 WebSocket connected: l2LZ62rveHlVk2DmAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"🔌 WebSocket connected: zOzDBPCaW4OYIdb1AAAD","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:20:26"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:20:27 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:20:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"102ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:20:27","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:20:27 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:20:27"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"154ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:20:27","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:20:34 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 500 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:20:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"46ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:20:34","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:20:34 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 77 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:20:34"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"107ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:20:34","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:20:50"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:20:50"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:20:50"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:20:50"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:20:50"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:20:50"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:20:50"}
{"level":"info","message":"🔌 WebSocket connected: W9eSdbJdkn5h85-oAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:20:51"}
{"level":"info","message":"🔌 WebSocket connected: H6HcW3KHUpUjo4nsAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:20:53"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:20:53"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:20:53"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:16"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:16"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:21:16"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:21:16"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:16"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:21:16"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:16"}
{"level":"info","message":"🔌 WebSocket connected: w_S6OGXCJh28ADqkAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:21:17"}
{"level":"info","message":"🔌 WebSocket connected: FBvLpdgot5jZQqjSAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:21:17"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:17"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:17"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:26"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:26"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:21:26"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:21:26"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:26"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:21:26"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:26"}
{"level":"info","message":"🔌 WebSocket connected: hR01nu4rq4Fp7n35AAAB","service":"mock-test-api","timestamp":"2025-08-04 01:21:27"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:27"}
{"level":"info","message":"🔌 WebSocket connected: sPfUyn_0b41_DpwtAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:21:29"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:29"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"🔌 WebSocket connected: RAJVOCuy6ywyN5ctAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"🔌 WebSocket connected: ssdkN2si_mlU3z87AAAD","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:36"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"🔌 WebSocket connected: -Q8x7hNr17hD8lvzAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:49"}
{"level":"info","message":"🔌 WebSocket connected: v9PLcmUxGctqFryiAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:21:51"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:51"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:58"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:58"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:21:58"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:21:58"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:21:58"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:21:58"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:21:58"}
{"level":"info","message":"🔌 WebSocket connected: BkBV15eJTlA2yn3yAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:21:59"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:21:59"}
{"level":"info","message":"🔌 WebSocket connected: AnSHtHatDO_gNWDeAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:22:00"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:22:00"}
{"level":"info","message":"🔌 WebSocket disconnected: BkBV15eJTlA2yn3yAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:22:07"}
{"level":"info","message":"🔌 WebSocket disconnected: AnSHtHatDO_gNWDeAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:22:07"}
{"level":"info","message":"🔌 WebSocket connected: Bftrg4CUe2Hok9T_AAAG","service":"mock-test-api","timestamp":"2025-08-04 01:22:09"}
{"level":"info","message":"🔌 WebSocket connected: kdy5FatffK1vYHq9AAAH","service":"mock-test-api","timestamp":"2025-08-04 01:22:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:22:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:22:09"}
{"clientVersion":"6.13.0","level":"error","message":"Get upcoming exams failed \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:22:09.117Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:22:09.117Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async getUpcomingExams (/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:29)","timestamp":"2025-08-04 01:22:09"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:22:11"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:22:29"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:22:55"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:23:42"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:23:50"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:24:43"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:24:43"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:24:43"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:24:43"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:24:43"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:24:43"}
{"level":"info","message":"🔌 WebSocket connected: P5xlDEDzrWSf1oQ_AAAC","service":"mock-test-api","timestamp":"2025-08-04 01:24:52"}
{"level":"info","message":"🔌 WebSocket connected: 0VT4ES_99qd--EujAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:24:52"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:24:52"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:24:52"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:52 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"204ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:24:52","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Get upcoming exams failed \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:52.718Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:52.718Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async getUpcomingExams (/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:29)","timestamp":"2025-08-04 01:24:52"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:52 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 68 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"247ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:24:52","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:52 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"262ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:24:52","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:52 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:52"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"262ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:24:52","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Get upcoming exams failed \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:53.877Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:53.877Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async getUpcomingExams (/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:29)","timestamp":"2025-08-04 01:24:53"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:53 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 68 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:53"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"35ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:24:53","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Get upcoming exams failed \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:55.935Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:55.935Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async getUpcomingExams (/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:29)","timestamp":"2025-08-04 01:24:55"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:55 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 68 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:24:55","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: P5xlDEDzrWSf1oQ_AAAC","service":"mock-test-api","timestamp":"2025-08-04 01:24:57"}
{"level":"info","message":"🔌 WebSocket disconnected: 0VT4ES_99qd--EujAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:24:57"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:58 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:24:58","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:58 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:24:58","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:58 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:24:58","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Get upcoming exams failed \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:58.257Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:58.257Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async getUpcomingExams (/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:29)","timestamp":"2025-08-04 01:24:58"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:58 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 68 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:24:58","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: yb_9YCL19Mfn4VODAAAG","service":"mock-test-api","timestamp":"2025-08-04 01:24:58"}
{"level":"info","message":"🔌 WebSocket connected: E1DfoBe_nsKB8-P0AAAH","service":"mock-test-api","timestamp":"2025-08-04 01:24:58"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:24:58"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:24:58"}
{"clientVersion":"6.13.0","level":"error","message":"Get upcoming exams failed \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:59.501Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:24:59.501Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async getUpcomingExams (/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:29)","timestamp":"2025-08-04 01:24:59"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:24:59 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 68 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:24:59"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:24:59","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Get upcoming exams failed \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:25:01.521Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:25:01.521Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async getUpcomingExams (/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:29)","timestamp":"2025-08-04 01:25:01"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:01 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 68 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:25:01","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Get upcoming exams failed \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:25:05.602Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.exam.findMany()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:47\n\n  42  */\n  43 async getUpcomingExams(req, res) {\n  44   try {\n→ 45     const upcomingExams = await prisma.exam.findMany({\n           where: {\n             isActive: true,\n             isPublic: true,\n             startDate: {\n             ~~~~~~~~~\n               gte: new Date(\"2025-08-04T05:25:05.602Z\")\n             },\n         ?   AND?: ExamWhereInput | ExamWhereInput[],\n         ?   OR?: ExamWhereInput[],\n         ?   NOT?: ExamWhereInput | ExamWhereInput[],\n         ?   id?: StringFilter | String,\n         ?   title?: StringFilter | String,\n         ?   description?: StringNullableFilter | String | Null,\n         ?   examCategoryId?: StringFilter | String,\n         ?   duration?: IntFilter | Int,\n         ?   totalMarks?: IntFilter | Int,\n         ?   passingMarks?: IntFilter | Int,\n         ?   price?: DecimalFilter | Decimal,\n         ?   currency?: StringFilter | String,\n         ?   allowRetakes?: BoolFilter | Boolean,\n         ?   maxRetakes?: IntFilter | Int,\n         ?   showResults?: BoolFilter | Boolean,\n         ?   showAnswers?: BoolFilter | Boolean,\n         ?   randomizeQuestions?: BoolFilter | Boolean,\n         ?   randomizeOptions?: BoolFilter | Boolean,\n         ?   questionOverlapPercentage?: FloatFilter | Float,\n         ?   createdBy?: StringFilter | String,\n         ?   approvedBy?: StringNullableFilter | String | Null,\n         ?   approvedAt?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledStart?: DateTimeNullableFilter | DateTime | Null,\n         ?   scheduledEnd?: DateTimeNullableFilter | DateTime | Null,\n         ?   createdAt?: DateTimeFilter | DateTime,\n         ?   updatedAt?: DateTimeFilter | DateTime,\n         ?   examCategory?: ExamCategoryScalarRelationFilter | ExamCategoryWhereInput,\n         ?   creator?: UserScalarRelationFilter | UserWhereInput,\n         ?   approver?: UserNullableScalarRelationFilter | UserWhereInput | Null,\n         ?   questions?: ExamQuestionListRelationFilter,\n         ?   bookings?: ExamBookingListRelationFilter,\n         ?   attempts?: ExamAttemptListRelationFilter,\n         ?   examScores?: ExamScoreListRelationFilter,\n         ?   certificates?: CertificateListRelationFilter\n           },\n           include: {\n             examCategory: {\n               select: {\n                 name: true,\n                 color: true\n               }\n             }\n           },\n           orderBy: {\n             startDate: \"asc\"\n           },\n           take: 10\n         })\n\nUnknown argument `startDate`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async getUpcomingExams (/home/ahmadi/Desktop/mock/src/controllers/examController.js:45:29)","timestamp":"2025-08-04 01:25:05"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:05 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 500 68 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:05"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 01:25:05","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"🔌 WebSocket connected: Do2nQ6_Qnlc0zVDGAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"🔌 WebSocket connected: YztuGIUKymClfHyEAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:25:31"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"🔌 WebSocket connected: qzfKT9fb87TCeReMAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:25:39"}
{"level":"info","message":"🔌 WebSocket connected: 5PPgQUou387zwvBXAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:25:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:25:40"}
{"level":"info","message":"🔌 WebSocket disconnected: 5PPgQUou387zwvBXAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:25:48"}
{"level":"info","message":"🔌 WebSocket disconnected: qzfKT9fb87TCeReMAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:25:48"}
{"level":"info","message":"🔌 WebSocket connected: OrZg_ZWY44R_At4_AAAG","service":"mock-test-api","timestamp":"2025-08-04 01:25:49"}
{"level":"info","message":"🔌 WebSocket connected: Vio_6O_FNM2kpGCuAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:25:49"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:25:50"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:25:50"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:50 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"154ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:25:50","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:50 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"219ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:25:50","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:50 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"240ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:25:50","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:50 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:50"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"248ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:25:50","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: OrZg_ZWY44R_At4_AAAG","service":"mock-test-api","timestamp":"2025-08-04 01:25:54"}
{"level":"info","message":"🔌 WebSocket disconnected: Vio_6O_FNM2kpGCuAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:25:54"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:55 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:25:55","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:55 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:25:55","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:55 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:25:55","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:25:55 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:25:55"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:25:55","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: b9NpYa5OaResr46EAAAK","service":"mock-test-api","timestamp":"2025-08-04 01:25:55"}
{"level":"info","message":"🔌 WebSocket connected: TToIGk2b4sl-jy_vAAAL","service":"mock-test-api","timestamp":"2025-08-04 01:25:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:25:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:25:55"}
{"level":"info","message":"🔌 WebSocket disconnected: b9NpYa5OaResr46EAAAK","service":"mock-test-api","timestamp":"2025-08-04 01:26:03"}
{"level":"info","message":"🔌 WebSocket disconnected: TToIGk2b4sl-jy_vAAAL","service":"mock-test-api","timestamp":"2025-08-04 01:26:03"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:26:04 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:26:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:26:04","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:26:04 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:26:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:26:04","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:26:04 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:26:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:26:04","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:26:04 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:26:04"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:26:04","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: XE66af0EOtpdfeBqAAAN","service":"mock-test-api","timestamp":"2025-08-04 01:26:04"}
{"level":"info","message":"🔌 WebSocket connected: 7PMwYZOcDwkf_YoDAAAP","service":"mock-test-api","timestamp":"2025-08-04 01:26:04"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:26:04"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:26:04"}
{"level":"info","message":"🔌 WebSocket disconnected: 7PMwYZOcDwkf_YoDAAAP","service":"mock-test-api","timestamp":"2025-08-04 01:26:55"}
{"level":"info","message":"🔌 WebSocket disconnected: XE66af0EOtpdfeBqAAAN","service":"mock-test-api","timestamp":"2025-08-04 01:26:55"}
{"level":"info","message":"🔌 WebSocket connected: UJf97E9uMNjWO_egAAAS","service":"mock-test-api","timestamp":"2025-08-04 01:26:56"}
{"level":"info","message":"🔌 WebSocket connected: dKtzIxm1uxVPBOmuAAAT","service":"mock-test-api","timestamp":"2025-08-04 01:26:56"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:26:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:26:57"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:26:57 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:26:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:26:57","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:26:57 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:26:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:26:57","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:26:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:26:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:26:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:26:57 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:26:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:26:57","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:27:57 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:27:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:27:57","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:27:57 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:27:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:27:57","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:27:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:27:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:27:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:27:57 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:27:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:27:57","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:28:57 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:28:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:28:57","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:28:57 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:28:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:28:57","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:28:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:28:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:28:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:28:57 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:28:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:28:57","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:29:57 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:29:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:29:57","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:29:57 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:29:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:29:57","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:29:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:29:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:29:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:29:57 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:29:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:29:57","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:30:57 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:30:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"103ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:30:57","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:30:57 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:30:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"135ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:30:57","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:30:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:30:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"106ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:30:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:30:57 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:30:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"67ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:30:57","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:35:12"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:35:12"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:35:12"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:35:12"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:35:12"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:35:12"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:35:12"}
{"level":"info","message":"🔌 WebSocket connected: HVpw0kngIU0ywzopAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:35:13"}
{"level":"info","message":"🔌 WebSocket connected: 0R-26Wwvv1Ua0DSNAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:35:15"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:35:15"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:35:15"}
{"level":"info","message":"🔌 WebSocket disconnected: HVpw0kngIU0ywzopAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:35:41"}
{"level":"info","message":"🔌 WebSocket disconnected: 0R-26Wwvv1Ua0DSNAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:35:41"}
{"level":"info","message":"🔌 WebSocket connected: jVFfeCxZz8C1sWG5AAAG","service":"mock-test-api","timestamp":"2025-08-04 01:35:42"}
{"level":"info","message":"🔌 WebSocket connected: cj_YY_n1FSMIxZNaAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:35:42"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:35:42"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:35:42"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:36:43"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:36:43"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:36:43"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:36:43"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:36:43"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:36:43"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:36:43"}
{"level":"info","message":"🔌 WebSocket connected: YSwfdK9VstjIRsY7AAAB","service":"mock-test-api","timestamp":"2025-08-04 01:36:44"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:36:44"}
{"level":"info","message":"🔌 WebSocket connected: WNW9tl6K0-yIY6LGAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:36:46"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:36:46"}
{"level":"info","message":"🔌 WebSocket disconnected: WNW9tl6K0-yIY6LGAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:37:13"}
{"level":"info","message":"🔌 WebSocket disconnected: YSwfdK9VstjIRsY7AAAB","service":"mock-test-api","timestamp":"2025-08-04 01:37:13"}
{"level":"info","message":"🔌 WebSocket connected: gkJS__RpDI0E6wobAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:37:14"}
{"level":"info","message":"🔌 WebSocket connected: iZjzOS4sB41a4vyZAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:37:14"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:37:14"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:37:14"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:37:21"}
{"level":"info","message":"SIGINT received, shutting down gracefully","service":"mock-test-api","timestamp":"2025-08-04 01:37:26"}
{"level":"info","message":"Database connection closed","service":"mock-test-api","timestamp":"2025-08-04 01:37:26"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:37:29"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:37:29"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:37:29"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:37:29"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:37:29"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:37:29"}
{"level":"info","message":"🔌 WebSocket connected: ryNuzI1AJKmYUEe_AAAB","service":"mock-test-api","timestamp":"2025-08-04 01:37:29"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:37:29"}
{"level":"info","message":"🔌 WebSocket connected: 7RpRORwzT_k3O74kAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:37:30"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:37:30"}
{"level":"info","message":"🔌 WebSocket disconnected: 7RpRORwzT_k3O74kAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:37:34"}
{"level":"info","message":"🔌 WebSocket disconnected: ryNuzI1AJKmYUEe_AAAB","service":"mock-test-api","timestamp":"2025-08-04 01:37:34"}
{"level":"info","message":"🔌 WebSocket connected: rBDIADVpCqMHpRvJAAAG","service":"mock-test-api","timestamp":"2025-08-04 01:37:35"}
{"level":"info","message":"🔌 WebSocket connected: UNj6IwvIYAwTbKRpAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:37:35"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:37:35"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:37:35"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:37:42"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:37:42"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:37:42"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:37:42"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:37:42"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:37:42"}
{"level":"info","message":"🔌 WebSocket connected: AoM9KqReSSPkOEv6AAAC","service":"mock-test-api","timestamp":"2025-08-04 01:37:44"}
{"level":"info","message":"🔌 WebSocket connected: sXYHSCt1dEeHXMwTAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:37:44"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:37:44"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:37:44"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:38:33 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 401 73 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:38:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-04 01:38:33","url":"/available","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket disconnected: sXYHSCt1dEeHXMwTAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:39:23"}
{"level":"info","message":"🔌 WebSocket disconnected: AoM9KqReSSPkOEv6AAAC","service":"mock-test-api","timestamp":"2025-08-04 01:39:23"}
{"level":"info","message":"🔌 WebSocket connected: E6yO-RN7YxEKayQwAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:39:25"}
{"level":"info","message":"🔌 WebSocket connected: xdwjC4FUc81viQN6AAAH","service":"mock-test-api","timestamp":"2025-08-04 01:39:25"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:39:25"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:39:25"}
{"level":"info","message":"🔌 WebSocket disconnected: E6yO-RN7YxEKayQwAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:39:42"}
{"level":"info","message":"🔌 WebSocket disconnected: xdwjC4FUc81viQN6AAAH","service":"mock-test-api","timestamp":"2025-08-04 01:39:42"}
{"level":"info","message":"🔌 WebSocket connected: 8uvumXFWp7KAHj15AAAJ","service":"mock-test-api","timestamp":"2025-08-04 01:39:42"}
{"level":"info","message":"🔌 WebSocket connected: 01n_gLRwKOX04_kNAAAL","service":"mock-test-api","timestamp":"2025-08-04 01:39:43"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:39:43"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:39:43"}
{"email":"student1@example.com","ip":"::ffff:127.0.0.1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 01:39:58","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:39:58 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:39:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"POST","responseTime":"545ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:39:58","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: v-E5L0faZSZUfCfKAAAN","service":"mock-test-api","timestamp":"2025-08-04 01:39:58"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:39:58"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:39:58 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:39:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"97ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:39:58","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:39:58 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:39:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"129ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:39:58","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:39:58 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:39:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"186ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:39:58","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:39:58 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:39:58"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"190ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:39:58","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: v-E5L0faZSZUfCfKAAAN","service":"mock-test-api","timestamp":"2025-08-04 01:40:12"}
{"level":"info","message":"🔌 WebSocket connected: wqX0ibVScqLIvVzUAAAP","service":"mock-test-api","timestamp":"2025-08-04 01:40:13"}
{"level":"info","message":"🔌 WebSocket connected: FBrM70y3KU0tgW_mAAAR","service":"mock-test-api","timestamp":"2025-08-04 01:40:13"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:40:13"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:40:13"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:41:01 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:41:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:41:01","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:41:01 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:41:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:41:01","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:41:01 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:41:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:41:01","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:41:01 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:41:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:41:01","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:43:01 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 401 73 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:43:01"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"1ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-04 01:43:01","url":"/available","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"student1@example.com","ip":"::1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 01:43:08","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:43:08 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:43:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"418ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:43:08","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"student1@example.com","ip":"::1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 01:43:16","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:43:16 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:43:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"411ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:43:16","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket disconnected: 01n_gLRwKOX04_kNAAAL","service":"mock-test-api","timestamp":"2025-08-04 01:43:53"}
{"level":"info","message":"🔌 WebSocket disconnected: 8uvumXFWp7KAHj15AAAJ","service":"mock-test-api","timestamp":"2025-08-04 01:43:53"}
{"level":"info","message":"🔌 WebSocket connected: iUHHrL9SmY-e9bkiAAAT","service":"mock-test-api","timestamp":"2025-08-04 01:43:54"}
{"level":"info","message":"🔌 WebSocket connected: DyRR5pujxU_KuV0iAAAV","service":"mock-test-api","timestamp":"2025-08-04 01:43:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:43:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:43:55"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:44:00 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:44:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:44:00","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:44:00 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:44:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:44:00","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:44:00 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:44:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:44:00","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:44:00 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:44:00"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:44:00","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:44:10 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:44:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"82ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:44:10","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:44:10 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:44:10"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"108ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:44:10","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:44:11 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:44:11"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:44:11","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:44:11 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:44:11"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:44:11","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:45:10 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 3021 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:45:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:45:10","url":"/available","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: DyRR5pujxU_KuV0iAAAV","service":"mock-test-api","timestamp":"2025-08-04 01:45:42"}
{"level":"info","message":"🔌 WebSocket disconnected: iUHHrL9SmY-e9bkiAAAT","service":"mock-test-api","timestamp":"2025-08-04 01:45:42"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:45:44 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:45:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:45:44","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:45:44 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:45:44"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:45:44","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: mfPFGCVe0X5MnWKuAAAY","service":"mock-test-api","timestamp":"2025-08-04 01:45:44"}
{"level":"info","message":"🔌 WebSocket connected: zN9HQQHg9JFbFnu-AAAZ","service":"mock-test-api","timestamp":"2025-08-04 01:45:44"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:45:44"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:45:44"}
{"level":"info","message":"🔌 WebSocket disconnected: zN9HQQHg9JFbFnu-AAAZ","service":"mock-test-api","timestamp":"2025-08-04 01:46:22"}
{"level":"info","message":"🔌 WebSocket disconnected: mfPFGCVe0X5MnWKuAAAY","service":"mock-test-api","timestamp":"2025-08-04 01:46:22"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:46:23 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:46:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:46:23","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:46:23 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:46:23"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:46:23","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: GFLbp_w6OHabmMIbAAAb","service":"mock-test-api","timestamp":"2025-08-04 01:46:23"}
{"level":"info","message":"🔌 WebSocket connected: MykLerwX8oMC-d9tAAAd","service":"mock-test-api","timestamp":"2025-08-04 01:46:24"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:46:24"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:46:24"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:46:25 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:46:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:46:25","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:46:25 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:46:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"64ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:46:25","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:46:25 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:46:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"83ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:46:25","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:46:25 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:46:25"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"122ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:46:25","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:47:26 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:47:26"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:47:26","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:47:39 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:47:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:47:39","url":"/upcoming","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: GFLbp_w6OHabmMIbAAAb","service":"mock-test-api","timestamp":"2025-08-04 01:47:55"}
{"level":"info","message":"🔌 WebSocket disconnected: MykLerwX8oMC-d9tAAAd","service":"mock-test-api","timestamp":"2025-08-04 01:47:55"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:47:57 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:47:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:47:57","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:47:57 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:47:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:47:57","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:47:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:47:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:47:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:47:57 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:47:57"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:47:57","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: huv6NKBXv8wZaiGkAAAg","service":"mock-test-api","timestamp":"2025-08-04 01:47:57"}
{"level":"info","message":"🔌 WebSocket connected: yTslpfaMJJDnQlFnAAAh","service":"mock-test-api","timestamp":"2025-08-04 01:47:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:47:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:47:57"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:48:01 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:48:01","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::ffff:127.0.0.1 - - [04/Aug/2025:05:48:01 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:01"}
{"ip":"::ffff:127.0.0.1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:48:01","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:48:08"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:48:08"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:48:08"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:48:08"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:48:08"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:48:08"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:10 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"85ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:10","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:10 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"145ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:10","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: onntJ4wKdIGm4tUpAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:48:10"}
{"level":"info","message":"🔌 WebSocket connected: sS-mlouJrbuOQyudAAAE","service":"mock-test-api","timestamp":"2025-08-04 01:48:10"}
{"level":"info","message":"🔌 WebSocket connected: 04ukLnjdCMb67aJMAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:48:10"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:48:10"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:48:10"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:48:10"}
{"level":"info","message":"🔌 WebSocket disconnected: sS-mlouJrbuOQyudAAAE","service":"mock-test-api","timestamp":"2025-08-04 01:48:11"}
{"level":"info","message":"🔌 WebSocket connected: SKL40KVgbmIROs_qAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:48:12"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:12 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:12","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:12 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:12","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:48:12"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 01:48:19"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 01:48:19"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 01:48:19"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 01:48:19"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 01:48:19"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 01:48:19"}
{"level":"info","message":"🔌 WebSocket connected: LHTrn1ftTD19whpJAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:48:20"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:20 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"95ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:48:20","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:20 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"230ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:48:20","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: NvwNAUOJX6g41NWbAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:48:21"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:48:21"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:48:21"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:22 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:22","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:22 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:22","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: cuX2-XBERJIzfwtdAAAF","service":"mock-test-api","timestamp":"2025-08-04 01:48:22"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 01:48:22"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:28 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"93ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:28","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:28 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"91ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:28","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:28 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"155ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:28","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:28 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"147ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:28","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: NvwNAUOJX6g41NWbAAAD","service":"mock-test-api","timestamp":"2025-08-04 01:48:44"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-04 01:48:47","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:47 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"434ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:47","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: 7zKKL0AFXOrJ9y7DAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:48:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:48:48"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:48 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 106 \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:48","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:48 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"126ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:48","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:48 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 123 \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"141ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:48","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:48 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 200 127 \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"145ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:48:48","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:48:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:48:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:48:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:49:03 +0000] \"POST /api/v1/admin/exam-categories HTTP/1.1\" 201 297 \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:49:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"15ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 01:49:03","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:49:03 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:49:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:49:03","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: LHTrn1ftTD19whpJAAAB","service":"mock-test-api","timestamp":"2025-08-04 01:49:09"}
{"level":"info","message":"🔌 WebSocket disconnected: 7zKKL0AFXOrJ9y7DAAAH","service":"mock-test-api","timestamp":"2025-08-04 01:49:09"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:49:10 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:49:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:49:10","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: sQSA39ADgUn--09kAAAK","service":"mock-test-api","timestamp":"2025-08-04 01:49:10"}
{"level":"info","message":"🔌 WebSocket connected: f4MwQ5Ge69-t0EgyAAAL","service":"mock-test-api","timestamp":"2025-08-04 01:49:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:49:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:49:10"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:49:18 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:49:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:49:18","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:49:18 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:49:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:49:18","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:49:18 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:49:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:49:18","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:49:18 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:49:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:49:18","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:49:53 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:49:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:49:53","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:50:23 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:50:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:50:23","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/exam-categories","requiredRoles":["ADMIN","SUPER_ADMIN"],"service":"mock-test-api","timestamp":"2025-08-04 01:50:50","userId":"cmdw3a9w30003i2jiq5yeaei0","userRole":"STUDENT"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:50:50 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 403 80 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:50:50"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 01:50:50","url":"/exam-categories","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:50:53 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:50:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:50:53","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-04 01:50:57","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:50:57 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:50:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"525ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:50:57","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:51:05 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 1654 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 01:51:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:51:05","url":"/exam-categories","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:51:23 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:51:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:51:23","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: f4MwQ5Ge69-t0EgyAAAL","service":"mock-test-api","timestamp":"2025-08-04 01:51:51"}
{"level":"info","message":"🔌 WebSocket disconnected: sQSA39ADgUn--09kAAAK","service":"mock-test-api","timestamp":"2025-08-04 01:51:51"}
{"level":"info","message":"🔌 WebSocket connected: xLQkhGCFOaf6I1oUAAAO","service":"mock-test-api","timestamp":"2025-08-04 01:51:53"}
{"level":"info","message":"🔌 WebSocket connected: aRBtaOy3Js3iGfHrAAAP","service":"mock-test-api","timestamp":"2025-08-04 01:51:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:51:53 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:51:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:51:53","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:51:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:51:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:51:54 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:51:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:51:54","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:51:54 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:51:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:51:54","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:51:54 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:51:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:51:54","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:51:54 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:51:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:51:54","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: aRBtaOy3Js3iGfHrAAAP","service":"mock-test-api","timestamp":"2025-08-04 01:52:32"}
{"level":"info","message":"🔌 WebSocket disconnected: xLQkhGCFOaf6I1oUAAAO","service":"mock-test-api","timestamp":"2025-08-04 01:52:32"}
{"level":"info","message":"🔌 WebSocket connected: HN32p-BRTt4IUwD7AAAS","service":"mock-test-api","timestamp":"2025-08-04 01:52:34"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:34 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:34","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: pKG_f8jFdfcvxKKXAAAT","service":"mock-test-api","timestamp":"2025-08-04 01:52:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:52:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:52:34"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:35 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:35","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:35 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:35","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:35 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:35","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:35 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:35","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: pKG_f8jFdfcvxKKXAAAT","service":"mock-test-api","timestamp":"2025-08-04 01:52:53"}
{"level":"info","message":"🔌 WebSocket disconnected: HN32p-BRTt4IUwD7AAAS","service":"mock-test-api","timestamp":"2025-08-04 01:52:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:54 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:54","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:54 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:54","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: KruZE9EELtXFRBmdAAAW","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"level":"info","message":"🔌 WebSocket connected: QFKZt2Ow8Xg6nZrfAAAX","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:54 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:54","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:54 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:54","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"level":"info","message":"🔌 WebSocket disconnected: QFKZt2Ow8Xg6nZrfAAAX","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"level":"info","message":"🔌 WebSocket disconnected: KruZE9EELtXFRBmdAAAW","service":"mock-test-api","timestamp":"2025-08-04 01:52:54"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:55 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:55","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:55 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:55","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:55 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:55","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: u209e2BGfLxz4UyCAAAa","service":"mock-test-api","timestamp":"2025-08-04 01:52:55"}
{"level":"info","message":"🔌 WebSocket connected: Lc3Ixlre4dmfPgcDAAAb","service":"mock-test-api","timestamp":"2025-08-04 01:52:55"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:52:56"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:52:56"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:52:57 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:52:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:52:57","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:53:27 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:53:27"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"36ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:53:27","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: u209e2BGfLxz4UyCAAAa","service":"mock-test-api","timestamp":"2025-08-04 01:54:37"}
{"level":"info","message":"🔌 WebSocket disconnected: Lc3Ixlre4dmfPgcDAAAb","service":"mock-test-api","timestamp":"2025-08-04 01:54:37"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:38 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"42ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:38","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: _RlFXJ791SFBc3GyAAAe","service":"mock-test-api","timestamp":"2025-08-04 01:54:38"}
{"level":"info","message":"🔌 WebSocket connected: bYn0fRzBiE8dPidUAAAf","service":"mock-test-api","timestamp":"2025-08-04 01:54:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:54:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:54:39"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:50 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:50"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:50","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:51 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"117ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:51","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:51 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"132ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:51","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:51 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"131ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:51","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: _RlFXJ791SFBc3GyAAAe","service":"mock-test-api","timestamp":"2025-08-04 01:54:53"}
{"level":"info","message":"🔌 WebSocket disconnected: bYn0fRzBiE8dPidUAAAf","service":"mock-test-api","timestamp":"2025-08-04 01:54:53"}
{"level":"info","message":"🔌 WebSocket connected: SdWhvKXlBl2UVlITAAAh","service":"mock-test-api","timestamp":"2025-08-04 01:54:55"}
{"level":"info","message":"🔌 WebSocket connected: o4NDoI_Np4SqQqa4AAAj","service":"mock-test-api","timestamp":"2025-08-04 01:54:55"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:54:55"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:54:55"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:55 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:55","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: SdWhvKXlBl2UVlITAAAh","service":"mock-test-api","timestamp":"2025-08-04 01:54:57"}
{"level":"info","message":"🔌 WebSocket disconnected: o4NDoI_Np4SqQqa4AAAj","service":"mock-test-api","timestamp":"2025-08-04 01:54:57"}
{"level":"info","message":"🔌 WebSocket connected: 8mp9A3weNc52CZAzAAAm","service":"mock-test-api","timestamp":"2025-08-04 01:54:58"}
{"level":"info","message":"🔌 WebSocket connected: va3iF3VHPuuQjkJWAAAn","service":"mock-test-api","timestamp":"2025-08-04 01:54:58"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:54:58"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:54:58"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:58 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:58","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:58 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:58","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:58 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:58","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:54:58 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:54:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:54:58","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:55:00 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:55:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:55:00","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:55:31 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:55:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:55:31","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:55:40 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:55:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:55:40","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:55:48 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:55:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:55:48","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:55:57 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:55:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:55:57","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:05 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:05","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: va3iF3VHPuuQjkJWAAAn","service":"mock-test-api","timestamp":"2025-08-04 01:56:09"}
{"level":"info","message":"🔌 WebSocket disconnected: 8mp9A3weNc52CZAzAAAm","service":"mock-test-api","timestamp":"2025-08-04 01:56:09"}
{"level":"info","message":"🔌 WebSocket connected: ofKDnbI5oMdfYuA3AAAq","service":"mock-test-api","timestamp":"2025-08-04 01:56:11"}
{"level":"info","message":"🔌 WebSocket connected: cRRB1YRqRc5ObFcEAAAr","service":"mock-test-api","timestamp":"2025-08-04 01:56:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:56:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:56:11"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:11 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:11","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: cRRB1YRqRc5ObFcEAAAr","service":"mock-test-api","timestamp":"2025-08-04 01:56:14"}
{"level":"info","message":"🔌 WebSocket disconnected: ofKDnbI5oMdfYuA3AAAq","service":"mock-test-api","timestamp":"2025-08-04 01:56:14"}
{"level":"info","message":"🔌 WebSocket connected: OvWsA7hYpAp3K8yUAAAu","service":"mock-test-api","timestamp":"2025-08-04 01:56:15"}
{"level":"info","message":"🔌 WebSocket connected: McB2ST3u_GCaYgRqAAAv","service":"mock-test-api","timestamp":"2025-08-04 01:56:15"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:56:15"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:56:15"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:15 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:15","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:15 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:15","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:15 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:15","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:15 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:15","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:17 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:17","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:19 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:19","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:56:49 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:56:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:56:49","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:57:19 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:57:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:57:19","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:57:34 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:57:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:57:34","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:57:42 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:57:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:57:42","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:57:46 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 200 106 \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:57:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 01:57:46","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: McB2ST3u_GCaYgRqAAAv","service":"mock-test-api","timestamp":"2025-08-04 01:58:16"}
{"level":"info","message":"🔌 WebSocket disconnected: OvWsA7hYpAp3K8yUAAAu","service":"mock-test-api","timestamp":"2025-08-04 01:58:16"}
{"level":"info","message":"🔌 WebSocket connected: ibMR9-nM3Pk5MzOiAAAy","service":"mock-test-api","timestamp":"2025-08-04 01:58:17"}
{"level":"info","message":"🔌 WebSocket connected: RlAYjLteWeHTqNHIAAAz","service":"mock-test-api","timestamp":"2025-08-04 01:58:17"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:58:17"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 01:58:17"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:58:18 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:58:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:58:18","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:58:18 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:58:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:58:18","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:58:18 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:58:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:58:18","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:58:18 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:58:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:58:18","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:58:22 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:58:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:58:22","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:58:53 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:58:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:58:53","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:59:23 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:59:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:59:23","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:05:59:54 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 01:59:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"42ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 01:59:54","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:00:10 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 106 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:00:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:00:10","url":"/exams","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:00:24 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:00:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:00:24","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:00:55 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:00:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:00:55","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:01:25 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:01:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:01:25","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: RlAYjLteWeHTqNHIAAAz","service":"mock-test-api","timestamp":"2025-08-04 02:05:38"}
{"level":"info","message":"🔌 WebSocket disconnected: ibMR9-nM3Pk5MzOiAAAy","service":"mock-test-api","timestamp":"2025-08-04 02:05:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:39 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"55ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:05:39","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: xnqenvMsgyZn8oESAAA2","service":"mock-test-api","timestamp":"2025-08-04 02:05:39"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:39 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"108ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:05:39","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: 7cWzReqxCrPKNwu7AAA3","service":"mock-test-api","timestamp":"2025-08-04 02:05:40"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:05:40"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:05:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:41 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 106 \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:05:41","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:41 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"72ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:05:41","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:41 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"75ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:05:41","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:47 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"55ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:05:47","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:50 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:50"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:05:50","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:05:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:05:59 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 200 127 \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:05:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:05:59","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:00 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 200 - \"http://localhost:3000/admin/users\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"120ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:00","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:02 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 126 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"126ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:02","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:03 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 200 265 \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"89ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:03","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:03 +0000] \"GET /api/v1/analytics/dashboard?includeCategories=true HTTP/1.1\" 200 774 \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"85ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:03","url":"/dashboard?includeCategories=true","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:03 +0000] \"GET /api/v1/analytics/dashboard?period=month HTTP/1.1\" 200 774 \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"111ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:03","url":"/dashboard?period=month","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:03 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 200 - \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"221ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:03","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:11 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:06:11","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:34 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:34","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:34 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"44ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:34","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:34 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"44ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:34","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:06:34 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:06:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"52ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:06:34","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:07:04 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:07:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:07:04","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:07:04 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:07:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:07:04","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:07:32","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:07:32 +0000] \"GET /api/v1/exams HTTP/1.1\" 403 80 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:07:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:07:32","url":"/","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"🔌 WebSocket connected: LKvpBdihTUPkmeEDAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"🔌 WebSocket connected: QiOT66Y7-U_vVc3fAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"🔌 WebSocket connected: 0mUanz72C3FunvxJAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:07:48"}
{"level":"info","message":"🔌 WebSocket disconnected: 0mUanz72C3FunvxJAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:08:02"}
{"level":"info","message":"🔌 WebSocket disconnected: QiOT66Y7-U_vVc3fAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:08:02"}
{"level":"info","message":"🔌 WebSocket connected: ICTmFeUdT0zRjSh6AAAH","service":"mock-test-api","timestamp":"2025-08-04 02:08:04"}
{"level":"info","message":"🔌 WebSocket connected: I7_NcE7VpN_OnkYpAAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:08:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:08:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:08:04"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:04 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"188ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:08:04","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:04 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"197ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:08:04","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:04 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"211ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:08:04","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:04 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"227ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:08:04","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:06 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:08:06","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:07 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:08:07","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:17 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 106 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:08:17","url":"/exams","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:37 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:08:37","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:08:56 +0000] \"GET /api/v1/admin/exams?isActive=true HTTP/1.1\" 200 106 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:08:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:08:56","url":"/exams?isActive=true","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:09:07 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:09:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:09:07","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"🔌 WebSocket connected: 57JUX4sGrInyTlfKAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"🔌 WebSocket connected: AW6LYqX5jyixKp3rAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:09:09"}
{"level":"info","message":"🔌 WebSocket connected: yft24tTk8XYMQ2EMAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:09:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:09:10"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:09:19 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 106 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:09:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"139ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:09:19","url":"/exams","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:09:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:09:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:09:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:09:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:09:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:09:35"}
{"level":"info","message":"🔌 WebSocket connected: hf-PJbUG_dWp7pN2AAAB","service":"mock-test-api","timestamp":"2025-08-04 02:09:36"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:09:36"}
{"level":"info","message":"🔌 WebSocket connected: KtsqmQ4lykBDEj-LAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:09:36"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:09:36"}
{"level":"info","message":"🔌 WebSocket connected: 7QDaYU8BSHQSrMHuAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:09:36"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:09:36"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:09:37 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:09:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"164ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:09:37","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:09:45 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 106 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:09:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:09:45","url":"/exams","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:10:08 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:10:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:10:08","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"🔌 WebSocket connected: kwj9agbmN6ZVwbT8AAAD","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"🔌 WebSocket connected: b-ABtNlHU-eBi8CmAAAE","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"🔌 WebSocket connected: pi_EzHiNM6JJ6al9AAAF","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:10:09"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"🔌 WebSocket connected: bju_p7NJv7s7TzP9AAAB","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"🔌 WebSocket connected: XTt41Sdgw195Q_GwAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"🔌 WebSocket connected: PfXpyksLg2q-mUobAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:23"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:10:35 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 3109 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:10:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"154ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:10:35","url":"/exams","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:10:38 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 200 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:10:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:10:38","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:10:41"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:10:41"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:10:41"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:10:41"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:10:41"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:10:41"}
{"level":"info","message":"🔌 WebSocket connected: Xg0zeAEbG22Z9S37AAAB","service":"mock-test-api","timestamp":"2025-08-04 02:10:42"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:42"}
{"level":"info","message":"🔌 WebSocket connected: GBM5yhUlDkHrzbUWAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:10:42"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:10:42"}
{"level":"info","message":"🔌 WebSocket connected: 6s9KiLEPCmsyXooIAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:10:44"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:44"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"🔌 WebSocket connected: dAipfxJJoD-9ZOjdAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"🔌 WebSocket connected: rfj_oqbNJ2UkTnepAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"🔌 WebSocket connected: zDcxNKZwTVXYTxA4AAAF","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:10:49"}
{"level":"info","message":"🔌 WebSocket disconnected: dAipfxJJoD-9ZOjdAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:10:54"}
{"level":"info","message":"🔌 WebSocket disconnected: rfj_oqbNJ2UkTnepAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:10:54"}
{"level":"info","message":"🔌 WebSocket connected: bQbWXuGFzOjpLZhaAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:10:55"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:10:55 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:10:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"96ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:10:55","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:10:55 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:10:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"292ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:10:55","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: vomqCEAyyZUrykcAAAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:10:55"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:55"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:10:55"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:11:01 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:11:01"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"82ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:11:01","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:11:31 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:11:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:11:31","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:12:01 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:12:01"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:12:01","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:12:46 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:12:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"158ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:12:46","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:13:16 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:13:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:13:16","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:13:46 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:13:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:13:46","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:14:16 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:14:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:14:16","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:14:46 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:14:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:14:46","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: vomqCEAyyZUrykcAAAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:14:56"}
{"level":"info","message":"🔌 WebSocket disconnected: bQbWXuGFzOjpLZhaAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:14:56"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:14:58 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:14:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:14:58","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: woEBEjuDBtP9uDhAAAAM","service":"mock-test-api","timestamp":"2025-08-04 02:14:58"}
{"level":"info","message":"🔌 WebSocket connected: 4LlkMScGlB8X-GA1AAAN","service":"mock-test-api","timestamp":"2025-08-04 02:14:59"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:14:59"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:14:59"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:15:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:15:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:15:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: woEBEjuDBtP9uDhAAAAM","service":"mock-test-api","timestamp":"2025-08-04 02:15:35"}
{"level":"info","message":"🔌 WebSocket disconnected: 4LlkMScGlB8X-GA1AAAN","service":"mock-test-api","timestamp":"2025-08-04 02:15:35"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:15:36 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:15:36"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:15:36","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: an53a0CsMrQd1eYSAAAQ","service":"mock-test-api","timestamp":"2025-08-04 02:15:37"}
{"level":"info","message":"🔌 WebSocket connected: PIjMO6dg2njGpkyrAAAR","service":"mock-test-api","timestamp":"2025-08-04 02:15:37"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:15:37"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:15:37"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"🔌 WebSocket connected: hJbrLM86KyF0-ZwcAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"🔌 WebSocket connected: ocHo8SyK7Q3FWc2wAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:15:49"}
{"level":"info","message":"🔌 WebSocket connected: wjvqvCZsJ3_OB6dYAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:15:50"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:15:50"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:15:50"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:16:06"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:16:06"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:16:06"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:16:06"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:16:06"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:16:06"}
{"level":"info","message":"🔌 WebSocket connected: ys_UWwB2OVVGzFHEAAAC","service":"mock-test-api","timestamp":"2025-08-04 02:16:07"}
{"level":"info","message":"🔌 WebSocket connected: TwvAdBxCNINnZzghAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:16:07"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:16:07"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:16:07"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:16:07 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:16:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"145ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:16:07","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: z4stltzk0eAZsRzJAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:16:08"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:16:08"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:16:21 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 3021 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:16:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"81ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:16:21","url":"/available","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"POST","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:16:30","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:16:30 +0000] \"POST /api/v1/bookings HTTP/1.1\" 403 80 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:16:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:16:30","url":"/","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:16:37 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:16:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:16:37","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:17:07 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:17:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"33ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:17:07","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:17:37 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:17:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:17:37","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:18:01 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:18:01"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:18:01","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:18:01 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:18:01"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"118ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:18:01","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket disconnected: ys_UWwB2OVVGzFHEAAAC","service":"mock-test-api","timestamp":"2025-08-04 02:18:13"}
{"level":"info","message":"🔌 WebSocket disconnected: TwvAdBxCNINnZzghAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:18:13"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:18:15 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:18:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:18:15","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:18:15 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:18:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"38ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:18:15","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: JBh-7X9m8zG0abxtAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:18:15"}
{"level":"info","message":"🔌 WebSocket connected: BPja7kpI30iJES7uAAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:18:15"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:18:15"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:18:15"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:18:44 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:18:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:18:44","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:19:14 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:19:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:19:14","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:06","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:06 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:06","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:06 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"95ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:20:06","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:07","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:07 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:07","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:09","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:09 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:09","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:13","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:13 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:13","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:16","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:16 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:16","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:17","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:17 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:17","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:19","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:19 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:19","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:23","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:23 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:23","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:25","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:25 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:25","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:26","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:26 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:26","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:29","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:29 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:29","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:20:33","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:33 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:20:33","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:20:56 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:20:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:20:56","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:21:04","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:04 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:21:04","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:21:05","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:05 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:21:05","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:21:07","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:07 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:21:07","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:21:11","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:11 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:21:11","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:12 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:21:12","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:12 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:21:12","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:19 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"83ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:21:19","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:19 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"94ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:21:19","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:20 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"146ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:21:20","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:20 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"138ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:21:20","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:21:34 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:21:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"52ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:21:34","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:21:48"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:21:48"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:21:48"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:21:48"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:21:48"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:21:48"}
{"level":"info","message":"🔌 WebSocket connected: EINp_rL5f-3AOw4KAAAC","service":"mock-test-api","timestamp":"2025-08-04 02:21:49"}
{"level":"info","message":"🔌 WebSocket connected: fUni9wWZPfOjqcVZAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:21:49"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:21:49"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:21:49"}
{"level":"info","message":"🔌 WebSocket connected: CEVBli1clMGtyqQaAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:21:50"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:21:50"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:22:05 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:22:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"210ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:22:05","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"🔌 WebSocket connected: tuR2F7c0fzDIAD6qAAAC","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"🔌 WebSocket connected: EgNj74g6E4pOJkxYAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:22:08"}
{"level":"info","message":"🔌 WebSocket connected: YPpKvKk6McJWrW8pAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:22:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:22:09"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:22:24 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:22:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"187ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:22:24","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:22:24 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:22:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"183ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:22:24","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:22:24 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:22:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"179ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:22:24","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:22:24 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:22:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"195ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:22:24","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:22:35 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:22:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"92ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:22:35","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:22:47 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 123 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:22:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"82ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:22:47","url":"/users","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:22:57 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 3109 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:22:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"101ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:22:57","url":"/exams","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:05 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:23:05","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:23 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 200 124 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:23:23","url":"/users?limit=100","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:24 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:23:24","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:24 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:23:24","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:24 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:23:24","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:24 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:23:24","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:35 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:23:35","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:43 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 123 \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"46ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:23:43","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:43 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"56ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:23:43","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:43 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"174ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:23:43","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:23:43 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:23:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"185ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:23:43","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:24 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:24:24","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:24 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"41ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:24:24","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:24 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:24:24","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:24 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:24:24","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:24:30"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:24:30"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:24:30"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:24:30"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:24:30"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:24:30"}
{"level":"info","message":"🔌 WebSocket connected: Xq4vY8pUA-dQOLZ7AAAE","service":"mock-test-api","timestamp":"2025-08-04 02:24:32"}
{"level":"info","message":"🔌 WebSocket connected: K2GtnGeaV5uV5MC6AAAF","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:33 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"296ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:24:33","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:33 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"296ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:24:33","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:33 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"294ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:24:33","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:33 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"327ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:24:33","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:33 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"293ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:24:33","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:33 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"308ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:24:33","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:33 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"303ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:24:33","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:24:33 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"313ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:24:33","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: _bGO92__WKbjiDHwAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"level":"info","message":"🔌 WebSocket connected: mgxywcbVEEvMcREmAAAI","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:24:33"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"🔌 WebSocket connected: 7nu92aqMwwCxuDpkAAAC","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"🔌 WebSocket connected: OABx-ZQBCLEHBfowAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"🔌 WebSocket connected: OznSNluLQdynfNSwAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:25:05"}
{"level":"info","message":"🔌 WebSocket connected: Vvxv3XiTLhBj3ja6AAAH","service":"mock-test-api","timestamp":"2025-08-04 02:25:06"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:25:06"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:25:06"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:17 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 1228 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"164ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:25:17","url":"/users","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:28 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 200 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"126ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:25:28","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:25:29","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:29 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:25:29","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"139ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:25:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:29 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"147ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:25:29","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:25:30","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:30 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:25:30","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:25:32","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:32 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:25:32","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:33 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"79ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:25:33","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:33 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"114ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:25:33","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:33 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"114ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:25:33","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:33 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"91ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:25:33","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:25:36","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:36 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:36"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:25:36","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:47 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 400 248 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"50ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 02:25:47","url":"/admin/create","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:25:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:25:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"43ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:25:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:26:02"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:26:02"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:26:02"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:26:02"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:26:02"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:26:02"}
{"level":"info","message":"🔌 WebSocket connected: p3ab8_yVX4JVrr5_AAAC","service":"mock-test-api","timestamp":"2025-08-04 02:26:03"}
{"level":"info","message":"🔌 WebSocket connected: _IsZK0dj06baSeMeAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:26:03"}
{"level":"info","message":"🔌 WebSocket connected: cm6xepET5qxIbWRqAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:26:03"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:26:03"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:26:03"}
{"level":"info","message":"🔌 WebSocket connected: LhyyzdrcF3m0fQwRAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:26:03"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:26:03"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:26:03"}
{"clientVersion":"6.13.0","level":"error","message":"Admin create booking failed \nInvalid `tx.examBooking.create()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:622:49\n\n  619 // Create booking with transaction\n  620 const booking = await prisma.$transaction(async (tx) => {\n  621   // Create the booking\n→ 622   const newBooking = await tx.examBooking.create({\n          data: {\n            userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n            examId: \"exam_001\",\n            scheduledAt: new Date(\"2025-08-05T10:00:00.000Z\"),\n            status: \"CONFIRMED\",\n            totalAmount: new Prisma.Decimal(\"9.99\"),\n            currency: \"USD\",\n            notes: \"Admin scheduled test\",\n            createdBy: \"cmdw3a9vs0000i2jijo7g0t4t\",\n            ~~~~~~~~~\n        ?   id?: String,\n        ?   bookingDate?: DateTime,\n        ?   paymentId?: String | Null,\n        ?   createdAt?: DateTime,\n        ?   updatedAt?: DateTime,\n        ?   payment?: PaymentUncheckedCreateNestedOneWithoutBookingInput,\n        ?   attempts?: ExamAttemptUncheckedCreateNestedManyWithoutBookingInput\n          },\n          include: {\n            exam: {\n              include: {\n                examCategory: true\n              }\n            },\n            user: {\n              select: {\n                id: true,\n                email: true,\n                firstName: true,\n                lastName: true\n              }\n            }\n          }\n        })\n\nUnknown argument `createdBy`. Did you mean `createdAt`? Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `tx.examBooking.create()` invocation in\n/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:622:49\n\n  619 // Create booking with transaction\n  620 const booking = await prisma.$transaction(async (tx) => {\n  621   // Create the booking\n→ 622   const newBooking = await tx.examBooking.create({\n          data: {\n            userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n            examId: \"exam_001\",\n            scheduledAt: new Date(\"2025-08-05T10:00:00.000Z\"),\n            status: \"CONFIRMED\",\n            totalAmount: new Prisma.Decimal(\"9.99\"),\n            currency: \"USD\",\n            notes: \"Admin scheduled test\",\n            createdBy: \"cmdw3a9vs0000i2jijo7g0t4t\",\n            ~~~~~~~~~\n        ?   id?: String,\n        ?   bookingDate?: DateTime,\n        ?   paymentId?: String | Null,\n        ?   createdAt?: DateTime,\n        ?   updatedAt?: DateTime,\n        ?   payment?: PaymentUncheckedCreateNestedOneWithoutBookingInput,\n        ?   attempts?: ExamAttemptUncheckedCreateNestedManyWithoutBookingInput\n          },\n          include: {\n            exam: {\n              include: {\n                examCategory: true\n              }\n            },\n            user: {\n              select: {\n                id: true,\n                email: true,\n                firstName: true,\n                lastName: true\n              }\n            }\n          }\n        })\n\nUnknown argument `createdBy`. Did you mean `createdAt`? Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async /home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:622:28\n    at async Proxy._transactionWithCallback (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:8173)\n    at async createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:620:23)","timestamp":"2025-08-04 02:26:16"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:26:16 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 500 64 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:26:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"234ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 02:26:16","url":"/admin/create","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:26:30 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:26:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"60ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:26:30","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:26:33 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:26:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"66ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:26:33","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:26:33 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:26:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"83ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:26:33","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:26:33 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:26:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"106ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:26:33","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:26:33 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:26:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"110ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:26:33","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"🔌 WebSocket connected: p_ZUUMXgQrBXxCnLAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"🔌 WebSocket connected: MSOhEj4CdacEeW_LAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:26:35"}
{"level":"info","message":"🔌 WebSocket connected: WseEcoaewoHBdE9BAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:26:36"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:26:36"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:26:36"}
{"level":"info","message":"🔌 WebSocket connected: DIIexZomWFrN4Xb6AAAH","service":"mock-test-api","timestamp":"2025-08-04 02:26:36"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:26:36"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"🔌 WebSocket connected: MOIMF6Tfy9iBp8-6AAAB","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"🔌 WebSocket connected: QXLdSQd3Ti-vFRUVAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"🔌 WebSocket connected: IDTLKslG_of0vI-vAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:26:53"}
{"level":"info","message":"🔌 WebSocket connected: dMDZVgiTjNkUXp0HAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:26:54"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:26:54"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:27:00 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:27:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"179ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:27:00","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"questionCount":0,"service":"mock-test-api","timestamp":"2025-08-04 02:27:06","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 02:27:06","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:27:06 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 201 1503 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:27:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"221ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 02:27:06","url":"/admin/create","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:27:14 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:27:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"64ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:27:14","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:27:14 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:27:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"99ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:27:14","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: MOIMF6Tfy9iBp8-6AAAB","service":"mock-test-api","timestamp":"2025-08-04 02:27:15"}
{"level":"info","message":"🔌 WebSocket disconnected: dMDZVgiTjNkUXp0HAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:27:15"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:27:16 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:27:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:27:16","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:27:16 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:27:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:27:16","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: VC0DxZs877FuKJmfAAAK","service":"mock-test-api","timestamp":"2025-08-04 02:27:16"}
{"level":"info","message":"🔌 WebSocket connected: HkBJ-9q-ubtLf13LAAAL","service":"mock-test-api","timestamp":"2025-08-04 02:27:16"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:27:16"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:27:16"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:27:54","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:27:54 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:27:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:27:54","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:28:07"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:28:07"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:28:07"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:28:07"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:28:07"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:28:07"}
{"level":"info","message":"🔌 WebSocket connected: 6eMAykoNQwmLwEcYAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:28:07"}
{"level":"info","message":"🔌 WebSocket connected: wq-D0fzp8eqMmzQUAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:28:08"}
{"level":"info","message":"🔌 WebSocket connected: QeHtw8nwcvmZubi6AAAF","service":"mock-test-api","timestamp":"2025-08-04 02:28:08"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:28:08"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:28:08"}
{"level":"info","message":"🔌 WebSocket connected: BNq4hKG5DzoVRh-vAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:28:08"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:28:08"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:28:08"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:28:09","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:09 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"119ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:28:09","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:28:12","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:12 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:28:12","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: wq-D0fzp8eqMmzQUAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:28:12"}
{"level":"info","message":"🔌 WebSocket disconnected: QeHtw8nwcvmZubi6AAAF","service":"mock-test-api","timestamp":"2025-08-04 02:28:12"}
{"level":"info","message":"🔌 WebSocket connected: MULdRsz5VaJZxJnpAAAK","service":"mock-test-api","timestamp":"2025-08-04 02:28:13"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:28:14","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:14 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:28:14","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: 8Qn9H4_BjYWcnEejAAAL","service":"mock-test-api","timestamp":"2025-08-04 02:28:14"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:14 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"148ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:14","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:14 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"161ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:14","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:28:14"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:28:14"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:28:15","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:15 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:28:15","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:16 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"92ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:28:16","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:28:17","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:17 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:28:17","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:28:21","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:21 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:28:21","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: BNq4hKG5DzoVRh-vAAAH","service":"mock-test-api","timestamp":"2025-08-04 02:28:32"}
{"level":"info","message":"🔌 WebSocket disconnected: 6eMAykoNQwmLwEcYAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:28:32"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:33 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:33","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: DvwmA0XShzfz-P_nAAAO","service":"mock-test-api","timestamp":"2025-08-04 02:28:33"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:33 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"84ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:33","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: AtIMZrAO5jOJqtrzAAAP","service":"mock-test-api","timestamp":"2025-08-04 02:28:33"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:28:33"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:28:33"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:34 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"108ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:34","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:34 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"150ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:34","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:34 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"146ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:34","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:34 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"143ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:34","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:28:44 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:28:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"52ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:28:44","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:29:14 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:29:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:29:14","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:29:36 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:29:36"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:29:36","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:29:44 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:29:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:29:44","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:30:07"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:30:07"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:30:07"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:30:07"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:30:07"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:30:07"}
{"level":"info","message":"🔌 WebSocket connected: rgcpiik2Q0ingdv-AAAC","service":"mock-test-api","timestamp":"2025-08-04 02:30:09"}
{"level":"info","message":"🔌 WebSocket connected: njJ_FisBtHinHRZAAAAD","service":"mock-test-api","timestamp":"2025-08-04 02:30:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:30:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:30:09"}
{"level":"info","message":"🔌 WebSocket connected: r0ojRRjZNOlGoZVIAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:30:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:30:09"}
{"level":"info","message":"🔌 WebSocket connected: ULrsXCm3E1mTnRa-AAAH","service":"mock-test-api","timestamp":"2025-08-04 02:30:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:30:10"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:30:13"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:30:13"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:30:13"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:30:13"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:30:13"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:30:13"}
{"level":"info","message":"🔌 WebSocket connected: R5dz6mtObyZnMOeqAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:30:16"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:16 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"121ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:30:16","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:30:16","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:16 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"129ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:30:16","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:16 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"232ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:30:16","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:16 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"285ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:30:16","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:16 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"267ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:30:16","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: 5n644k2yAfoNWkAoAAAG","service":"mock-test-api","timestamp":"2025-08-04 02:30:17"}
{"level":"info","message":"🔌 WebSocket connected: 45z5ZpbnpnzJ34u3AAAH","service":"mock-test-api","timestamp":"2025-08-04 02:30:17"}
{"level":"info","message":"🔌 WebSocket connected: 3MxJ1WcqtnjFcXYVAAAI","service":"mock-test-api","timestamp":"2025-08-04 02:30:17"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:30:17"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:30:17"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:30:17"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:30:17"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:30:17","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:17 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:30:17","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:30:20","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:20 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:30:20","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:30:24","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:24 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:30:24","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:28 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 3021 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:30:28","url":"/available","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:30:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:30:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:30:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:31:17 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:31:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:31:17","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:31:17 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:31:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:31:17","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:31:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:31:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:31:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:31:51","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:31:51 +0000] \"GET /api/v1/bookings HTTP/1.1\" 403 80 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:31:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:31:51","url":"/","userAgent":"curl/8.14.1","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:32:17 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:32:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:32:17","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:32:17 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:32:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:32:17","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"attemptCount":1,"event":"FAILED_LOGIN_ATTEMPT","ipAddress":"system","level":"warn","lockedUntil":null,"message":"Security Event","service":"mock-test-api","timestamp":"2025-08-04 02:32:19","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:32:19 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 401 59 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:32:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"614ms","service":"mock-test-api","statusCode":401,"timestamp":"2025-08-04 02:32:19","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"email":"student1@example.com","ip":"::1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 02:32:32","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:32:32 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:32:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"387ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:32:32","url":"/login","userAgent":"curl/8.14.1","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:32:42 +0000] \"GET /api/v1/bookings HTTP/1.1\" 200 1468 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:32:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:32:42","url":"/","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:32:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:32:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:32:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:32:58 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 3021 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:32:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:32:58","url":"/available","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:17 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:33:17","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:17 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:33:17","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 5n644k2yAfoNWkAoAAAG","service":"mock-test-api","timestamp":"2025-08-04 02:33:40"}
{"level":"info","message":"🔌 WebSocket disconnected: 45z5ZpbnpnzJ34u3AAAH","service":"mock-test-api","timestamp":"2025-08-04 02:33:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:41 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:33:41","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:41 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:33:41","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: QT_Ihuj7s_z0dVLmAAAL","service":"mock-test-api","timestamp":"2025-08-04 02:33:41"}
{"level":"info","message":"🔌 WebSocket connected: dn5QEGPjbkBuuxw-AAAM","service":"mock-test-api","timestamp":"2025-08-04 02:33:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:33:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:33:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:43 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:33:43","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:43 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"165ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:33:43","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:43 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"233ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:33:43","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:43 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"235ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:33:43","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:33:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:33:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:33:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:34:17 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:34:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:34:17","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: QT_Ihuj7s_z0dVLmAAAL","service":"mock-test-api","timestamp":"2025-08-04 02:34:31"}
{"level":"info","message":"🔌 WebSocket disconnected: dn5QEGPjbkBuuxw-AAAM","service":"mock-test-api","timestamp":"2025-08-04 02:34:31"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:34:32 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:34:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:34:32","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:34:32 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:34:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:34:32","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: YGlP_kdC10NYe3V2AAAP","service":"mock-test-api","timestamp":"2025-08-04 02:34:32"}
{"level":"info","message":"🔌 WebSocket connected: Ti-cS7Y-wiMBdSr7AAAQ","service":"mock-test-api","timestamp":"2025-08-04 02:34:32"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:34:32"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:34:32"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:34:38 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:34:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:34:38","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:34:38 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:34:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:34:38","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:34:38 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:34:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"44ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:34:38","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:34:38 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:34:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"27ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:34:38","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:34:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:34:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:34:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:35:17 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:35:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"97ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:35:17","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:35:41 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:35:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"50ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:35:41","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:35:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:35:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:35:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:36:17 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:36:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:36:17","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:36:41 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:36:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:36:41","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:36:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:36:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:36:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:37:17 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:37:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:37:17","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: Ti-cS7Y-wiMBdSr7AAAQ","service":"mock-test-api","timestamp":"2025-08-04 02:37:27"}
{"level":"info","message":"🔌 WebSocket disconnected: YGlP_kdC10NYe3V2AAAP","service":"mock-test-api","timestamp":"2025-08-04 02:37:27"}
{"level":"info","message":"🔌 WebSocket connected: 0-tLjCr74o7_JMu5AAAS","service":"mock-test-api","timestamp":"2025-08-04 02:37:28"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:37:28 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:37:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:37:28","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:37:28 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:37:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"37ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:37:28","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: bv3LYdGq5XAAnnqDAAAU","service":"mock-test-api","timestamp":"2025-08-04 02:37:28"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:37:28"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:37:28"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:37:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:37:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:37:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: bv3LYdGq5XAAnnqDAAAU","service":"mock-test-api","timestamp":"2025-08-04 02:37:56"}
{"level":"info","message":"🔌 WebSocket disconnected: 0-tLjCr74o7_JMu5AAAS","service":"mock-test-api","timestamp":"2025-08-04 02:37:56"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:37:58 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:37:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:37:58","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:37:58 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:37:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:37:58","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: aEg26bQHcGKiH3ZiAAAX","service":"mock-test-api","timestamp":"2025-08-04 02:37:58"}
{"level":"info","message":"🔌 WebSocket connected: 7or9KjzUH6dhuEg-AAAY","service":"mock-test-api","timestamp":"2025-08-04 02:37:58"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:37:58"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:37:58"}
{"level":"info","message":"🔌 WebSocket disconnected: aEg26bQHcGKiH3ZiAAAX","service":"mock-test-api","timestamp":"2025-08-04 02:37:58"}
{"level":"info","message":"🔌 WebSocket disconnected: 7or9KjzUH6dhuEg-AAAY","service":"mock-test-api","timestamp":"2025-08-04 02:37:58"}
{"level":"info","message":"🔌 WebSocket connected: oRanbCGvhSXgut9IAAAb","service":"mock-test-api","timestamp":"2025-08-04 02:37:59"}
{"level":"info","message":"🔌 WebSocket connected: gC7oFD_2N3q5u91dAAAc","service":"mock-test-api","timestamp":"2025-08-04 02:38:00"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:38:00"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:38:00"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:00 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:38:00","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:00 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:38:00","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:18 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"33ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:38:18","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: gC7oFD_2N3q5u91dAAAc","service":"mock-test-api","timestamp":"2025-08-04 02:38:20"}
{"level":"info","message":"🔌 WebSocket disconnected: oRanbCGvhSXgut9IAAAb","service":"mock-test-api","timestamp":"2025-08-04 02:38:20"}
{"level":"info","message":"🔌 WebSocket connected: Qhp7WKmocxCeACXxAAAe","service":"mock-test-api","timestamp":"2025-08-04 02:38:21"}
{"level":"info","message":"🔌 WebSocket connected: d2Mj3fugPEGZPFeWAAAg","service":"mock-test-api","timestamp":"2025-08-04 02:38:21"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:38:21"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:38:21"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:22 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"3ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:38:22","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:22 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:38:22","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:23 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"32ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:38:23","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:23 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:38:23","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:23 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"35ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:38:23","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:23 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"57ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:38:23","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:38:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:38:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:38:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:39:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:39:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:39:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:39:25 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:39:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:39:25","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:40:22"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:40:22"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:40:22"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:40:22"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:40:22"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:40:22"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:23 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"83ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:40:23","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:23 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"166ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:40:23","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: 1iGc6QUQhnhiOKr5AAAC","service":"mock-test-api","timestamp":"2025-08-04 02:40:23"}
{"level":"info","message":"🔌 WebSocket connected: TaR6R1R-KYecFah7AAAD","service":"mock-test-api","timestamp":"2025-08-04 02:40:23"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:40:23"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:40:23"}
{"level":"info","message":"🔌 WebSocket connected: AXaYwfmS8fDTxb4lAAAG","service":"mock-test-api","timestamp":"2025-08-04 02:40:25"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:40:25"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:40:25","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:25 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:40:25","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:25 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"157ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:40:25","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:25 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"168ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:40:25","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:35 +0000] \"GET /api/v1/bookings HTTP/1.1\" 200 1468 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:40:35","url":"/","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: 1iGc6QUQhnhiOKr5AAAC","service":"mock-test-api","timestamp":"2025-08-04 02:40:39"}
{"level":"info","message":"🔌 WebSocket disconnected: TaR6R1R-KYecFah7AAAD","service":"mock-test-api","timestamp":"2025-08-04 02:40:39"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:41 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:40:41","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:41 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:40:41","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: nM-8zbrNZeXqXJX9AAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:40:41"}
{"level":"info","message":"🔌 WebSocket connected: FUgz60zObuVU1C8PAAAK","service":"mock-test-api","timestamp":"2025-08-04 02:40:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:40:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:40:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:42 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"152ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:40:42","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:42 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"150ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:40:42","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:42 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"167ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:40:42","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:40:42 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:40:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"205ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:40:42","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:41:42 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:41:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:41:42","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: FUgz60zObuVU1C8PAAAK","service":"mock-test-api","timestamp":"2025-08-04 02:42:06"}
{"email":"student1@example.com","ip":"::1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 02:42:09","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:42:09 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:42:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"654ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:42:09","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: mNlP8O6WCPS1Q075AAAM","service":"mock-test-api","timestamp":"2025-08-04 02:42:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:42:10"}
{"level":"info","message":"🔌 WebSocket disconnected: mNlP8O6WCPS1Q075AAAM","service":"mock-test-api","timestamp":"2025-08-04 02:43:23"}
{"level":"info","message":"🔌 WebSocket disconnected: nM-8zbrNZeXqXJX9AAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:43:23"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:24 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:43:24","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:24 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:43:24","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:24 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:43:24","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:24 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:43:24","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:26 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:43:26","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:26 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:43:26","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:26 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:43:26","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:26 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"38ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:43:26","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: _QmEBozHsotE6ySjAAAR","service":"mock-test-api","timestamp":"2025-08-04 02:43:26"}
{"level":"info","message":"🔌 WebSocket connected: nlCSrcg1z7Byr88EAAAS","service":"mock-test-api","timestamp":"2025-08-04 02:43:26"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:43:26"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:43:26"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:28 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:43:28","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:28 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:43:28","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: nlCSrcg1z7Byr88EAAAS","service":"mock-test-api","timestamp":"2025-08-04 02:43:40"}
{"level":"info","message":"🔌 WebSocket disconnected: _QmEBozHsotE6ySjAAAR","service":"mock-test-api","timestamp":"2025-08-04 02:43:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:41 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:43:41","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:43:41 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:43:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:43:41","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: VfTgx5B_13jNavDUAAAV","service":"mock-test-api","timestamp":"2025-08-04 02:43:41"}
{"level":"info","message":"🔌 WebSocket connected: 3c0iv0wNq69i2OiOAAAW","service":"mock-test-api","timestamp":"2025-08-04 02:43:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:43:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:43:41"}
{"level":"info","message":"🔌 WebSocket disconnected: VfTgx5B_13jNavDUAAAV","service":"mock-test-api","timestamp":"2025-08-04 02:44:22"}
{"level":"info","message":"🔌 WebSocket disconnected: 3c0iv0wNq69i2OiOAAAW","service":"mock-test-api","timestamp":"2025-08-04 02:44:22"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:44:24 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:44:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:44:24","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:44:24 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:44:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:44:24","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: KLMQJ00AytJfOyG4AAAZ","service":"mock-test-api","timestamp":"2025-08-04 02:44:24"}
{"level":"info","message":"🔌 WebSocket connected: nGnutSyVEFXM89YfAAAa","service":"mock-test-api","timestamp":"2025-08-04 02:44:24"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:44:24"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:44:24"}
{"level":"info","message":"🔌 WebSocket disconnected: KLMQJ00AytJfOyG4AAAZ","service":"mock-test-api","timestamp":"2025-08-04 02:44:52"}
{"level":"info","message":"🔌 WebSocket disconnected: nGnutSyVEFXM89YfAAAa","service":"mock-test-api","timestamp":"2025-08-04 02:44:52"}
{"level":"info","message":"🔌 WebSocket connected: BazHO20avh0BWQbeAAAd","service":"mock-test-api","timestamp":"2025-08-04 02:44:53"}
{"level":"info","message":"🔌 WebSocket connected: In8cSqsP4MGedrxeAAAe","service":"mock-test-api","timestamp":"2025-08-04 02:44:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:44:53 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:44:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:44:53","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:44:53 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:44:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:44:53","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:44:53"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:44:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:44:53 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:44:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:44:53","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:44:53 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:44:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:44:53","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:44:56 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:44:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:44:56","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:44:56 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:44:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:44:56","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: BazHO20avh0BWQbeAAAd","service":"mock-test-api","timestamp":"2025-08-04 02:45:10"}
{"level":"info","message":"🔌 WebSocket disconnected: In8cSqsP4MGedrxeAAAe","service":"mock-test-api","timestamp":"2025-08-04 02:45:10"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:45:10 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:45:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:45:10","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:45:10 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:45:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:45:10","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: 68zIJufPSI3gTXBjAAAh","service":"mock-test-api","timestamp":"2025-08-04 02:45:11"}
{"level":"info","message":"🔌 WebSocket connected: 4ANYpSsF7X2tW1DZAAAi","service":"mock-test-api","timestamp":"2025-08-04 02:45:11"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:45:11"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:45:11"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:45:13 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:45:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:45:13","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:45:13 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:45:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:45:13","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:45:13 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:45:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:45:13","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:45:13 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:45:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:45:13","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: 68zIJufPSI3gTXBjAAAh","service":"mock-test-api","timestamp":"2025-08-04 02:45:58"}
{"level":"info","message":"🔌 WebSocket disconnected: 4ANYpSsF7X2tW1DZAAAi","service":"mock-test-api","timestamp":"2025-08-04 02:45:58"}
{"level":"info","message":"🔌 WebSocket connected: W-ydkj3sT2quLi_uAAAl","service":"mock-test-api","timestamp":"2025-08-04 02:46:00"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:46:00 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:46:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"173ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:46:00","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:46:00 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:46:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"181ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:46:00","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:46:00 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:46:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"177ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:46:00","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:46:00 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:46:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"175ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:46:00","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: k55DFUO9TWqcSaXvAAAm","service":"mock-test-api","timestamp":"2025-08-04 02:46:00"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:46:00"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:46:00"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:46:02 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:46:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:46:02","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:46:02 +0000] \"GET /api/v1/exams/available HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:46:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"66ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:46:02","url":"/available","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: k55DFUO9TWqcSaXvAAAm","service":"mock-test-api","timestamp":"2025-08-04 02:46:25"}
{"level":"info","message":"🔌 WebSocket disconnected: W-ydkj3sT2quLi_uAAAl","service":"mock-test-api","timestamp":"2025-08-04 02:46:25"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:47:48"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:47:48"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:47:48"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:47:48"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:47:48"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:47:48"}
{"level":"info","message":"🔌 WebSocket connected: lURAEVUNSrkL3U0xAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:47:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:47:48"}
{"level":"info","message":"🔌 WebSocket connected: -Ho3KGImRjUZl6zIAAAE","service":"mock-test-api","timestamp":"2025-08-04 02:48:38"}
{"level":"info","message":"🔌 WebSocket connected: NUQDBINBM3sDjzstAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:48:38"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:48:38"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:48:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:48:38 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:48:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"169ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:48:38","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:48:38 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:48:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"196ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:48:38","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:48:38 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:48:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"219ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:48:38","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:48:38 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:48:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"226ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:48:38","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:48:40 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:48:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"88ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:48:40","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:48:40 +0000] \"GET /api/v1/bookings HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:48:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"129ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:48:40","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:49:40 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:49:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:49:40","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: -Ho3KGImRjUZl6zIAAAE","service":"mock-test-api","timestamp":"2025-08-04 02:50:23"}
{"level":"info","message":"🔌 WebSocket disconnected: NUQDBINBM3sDjzstAAAF","service":"mock-test-api","timestamp":"2025-08-04 02:50:23"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:50:24 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:50:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:50:24","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: VAqEHa2Y22GGfkxAAAAI","service":"mock-test-api","timestamp":"2025-08-04 02:50:24"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:50:24 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:50:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:50:24","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: ultal6GsE9fENd6BAAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:50:24"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:50:24"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:50:24"}
{"level":"info","message":"🔌 WebSocket disconnected: VAqEHa2Y22GGfkxAAAAI","service":"mock-test-api","timestamp":"2025-08-04 02:50:37"}
{"level":"info","message":"🔌 WebSocket disconnected: ultal6GsE9fENd6BAAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:50:37"}
{"level":"info","message":"🔌 WebSocket connected: IyK9ApC8vuMl3dpsAAAL","service":"mock-test-api","timestamp":"2025-08-04 02:50:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:50:38 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:50:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:50:38","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:50:38 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:50:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:50:38","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: 0bXFsvdbhD558ObrAAAN","service":"mock-test-api","timestamp":"2025-08-04 02:50:39"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:50:39"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:50:39"}
{"level":"info","message":"🔌 WebSocket disconnected: 0bXFsvdbhD558ObrAAAN","service":"mock-test-api","timestamp":"2025-08-04 02:50:46"}
{"level":"info","message":"🔌 WebSocket disconnected: IyK9ApC8vuMl3dpsAAAL","service":"mock-test-api","timestamp":"2025-08-04 02:50:46"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:50:47 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:50:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:50:47","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:50:47 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:50:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:50:47","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: vl_emuFhCHjpe5u0AAAQ","service":"mock-test-api","timestamp":"2025-08-04 02:50:47"}
{"level":"info","message":"🔌 WebSocket connected: n4OXvYwoSAaK-henAAAR","service":"mock-test-api","timestamp":"2025-08-04 02:50:47"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:50:47"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:50:47"}
{"level":"info","message":"🔌 WebSocket disconnected: vl_emuFhCHjpe5u0AAAQ","service":"mock-test-api","timestamp":"2025-08-04 02:51:26"}
{"level":"info","message":"🔌 WebSocket disconnected: n4OXvYwoSAaK-henAAAR","service":"mock-test-api","timestamp":"2025-08-04 02:51:26"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:51:27 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:51:27"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:51:27","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:51:27 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:51:27"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"33ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:51:27","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: c5fRRD-jI7fi4WIPAAAU","service":"mock-test-api","timestamp":"2025-08-04 02:51:27"}
{"level":"info","message":"🔌 WebSocket connected: oC-pecWgxSWcPSNQAAAV","service":"mock-test-api","timestamp":"2025-08-04 02:51:27"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:51:27"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:51:27"}
{"level":"info","message":"🔌 WebSocket disconnected: oC-pecWgxSWcPSNQAAAV","service":"mock-test-api","timestamp":"2025-08-04 02:51:30"}
{"level":"info","message":"🔌 WebSocket disconnected: c5fRRD-jI7fi4WIPAAAU","service":"mock-test-api","timestamp":"2025-08-04 02:51:30"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:51:31 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:51:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:51:31","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:51:31 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:51:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:51:31","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: 1hIoa1otmoSZxZUyAAAY","service":"mock-test-api","timestamp":"2025-08-04 02:51:31"}
{"level":"info","message":"🔌 WebSocket connected: GkmG0qBd91xOWvOiAAAZ","service":"mock-test-api","timestamp":"2025-08-04 02:51:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:51:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:51:31"}
{"level":"info","message":"🔌 WebSocket disconnected: GkmG0qBd91xOWvOiAAAZ","service":"mock-test-api","timestamp":"2025-08-04 02:51:35"}
{"level":"info","message":"🔌 WebSocket disconnected: 1hIoa1otmoSZxZUyAAAY","service":"mock-test-api","timestamp":"2025-08-04 02:51:35"}
{"level":"info","message":"🔌 WebSocket connected: apz3ilvm3LTAbsYqAAAb","service":"mock-test-api","timestamp":"2025-08-04 02:51:37"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:51:37 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:51:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:51:37","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:51:37 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:51:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:51:37","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: CFn349hdXGUl4yR-AAAd","service":"mock-test-api","timestamp":"2025-08-04 02:51:37"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:51:37"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:51:37"}
{"level":"info","message":"🔌 WebSocket disconnected: CFn349hdXGUl4yR-AAAd","service":"mock-test-api","timestamp":"2025-08-04 02:51:38"}
{"level":"info","message":"🔌 WebSocket disconnected: apz3ilvm3LTAbsYqAAAb","service":"mock-test-api","timestamp":"2025-08-04 02:51:38"}
{"level":"info","message":"🔌 WebSocket connected: 1eqvqpiFcuTJM7noAAAf","service":"mock-test-api","timestamp":"2025-08-04 02:51:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:51:40 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:51:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:51:40","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:51:40 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:51:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:51:40","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: nauIRAHwPZBeuESjAAAh","service":"mock-test-api","timestamp":"2025-08-04 02:51:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:51:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:51:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:52:40 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:52:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"49ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:52:40","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: 1eqvqpiFcuTJM7noAAAf","service":"mock-test-api","timestamp":"2025-08-04 02:53:16"}
{"level":"info","message":"🔌 WebSocket disconnected: nauIRAHwPZBeuESjAAAh","service":"mock-test-api","timestamp":"2025-08-04 02:53:16"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:53:17 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:53:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:53:17","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:53:17 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:53:17"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:53:17","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: ZPoX1PRpaDTrxwp8AAAk","service":"mock-test-api","timestamp":"2025-08-04 02:53:17"}
{"level":"info","message":"🔌 WebSocket connected: ivsiy1KSwpt1FQ1RAAAl","service":"mock-test-api","timestamp":"2025-08-04 02:53:18"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:53:18"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:53:18"}
{"level":"info","message":"🔌 WebSocket disconnected: ivsiy1KSwpt1FQ1RAAAl","service":"mock-test-api","timestamp":"2025-08-04 02:53:20"}
{"level":"info","message":"🔌 WebSocket disconnected: ZPoX1PRpaDTrxwp8AAAk","service":"mock-test-api","timestamp":"2025-08-04 02:53:20"}
{"level":"info","message":"🔌 WebSocket connected: lboMxyc8fTWMWStSAAAn","service":"mock-test-api","timestamp":"2025-08-04 02:53:21"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:53:21 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:53:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:53:21","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:53:21 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:53:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:53:21","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: BZqc08Aj2eDMWgSwAAAp","service":"mock-test-api","timestamp":"2025-08-04 02:53:21"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:53:21"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:53:21"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:57:13 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 898 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 02:57:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"104ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:57:13","url":"/exam_001","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:57:52"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:57:52"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:57:52"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:57:52"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:57:52"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:57:52"}
{"level":"info","message":"🔌 WebSocket connected: R1wrhD9kBp-PzTNrAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:57:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:57:53"}
{"level":"info","message":"🔌 WebSocket connected: O0c8ApgjMPyZPy6GAAAE","service":"mock-test-api","timestamp":"2025-08-04 02:57:54"}
{"level":"info","message":"🔌 WebSocket connected: ws2apuOV41t8i7p8AAAF","service":"mock-test-api","timestamp":"2025-08-04 02:57:54"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:57:54"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:57:54"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 02:58:02"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 02:58:02"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 02:58:02"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 02:58:02"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 02:58:02"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 02:58:02"}
{"level":"info","message":"🔌 WebSocket connected: vxBLApOXBtFWZ4FwAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:58:03"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:58:03"}
{"level":"info","message":"🔌 WebSocket connected: erXhuBP7xyzkG7x1AAAE","service":"mock-test-api","timestamp":"2025-08-04 02:58:03"}
{"level":"info","message":"🔌 WebSocket connected: EdEsC3k5suML7XM0AAAF","service":"mock-test-api","timestamp":"2025-08-04 02:58:03"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:58:03"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:58:03"}
{"level":"info","message":"🔌 WebSocket disconnected: vxBLApOXBtFWZ4FwAAAB","service":"mock-test-api","timestamp":"2025-08-04 02:58:09"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:58:09","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:09 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"128ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:58:09","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:58:10","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:10 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:58:10","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:10 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"131ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:58:10","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:10 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"145ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 02:58:10","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: w6hFNHXQ7LEMw8jVAAAI","service":"mock-test-api","timestamp":"2025-08-04 02:58:10"}
{"level":"info","message":"🔌 WebSocket connected: 0hPlY9f6Ta1TP43JAAAJ","service":"mock-test-api","timestamp":"2025-08-04 02:58:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:58:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 02:58:11"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:58:11","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:11 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:58:11","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:58:13","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:13 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:58:13","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 02:58:18","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:18 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 02:58:18","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: EdEsC3k5suML7XM0AAAF","service":"mock-test-api","timestamp":"2025-08-04 02:58:18"}
{"level":"info","message":"🔌 WebSocket disconnected: erXhuBP7xyzkG7x1AAAE","service":"mock-test-api","timestamp":"2025-08-04 02:58:18"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:19 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"96ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:58:19","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:19 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"79ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:58:19","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:19 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"144ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:58:19","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:19 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"145ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:58:19","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: YhElsur54hbYgmUMAAAL","service":"mock-test-api","timestamp":"2025-08-04 02:58:20"}
{"level":"info","message":"🔌 WebSocket connected: 5ghEtIOpWHaRB_-DAAAN","service":"mock-test-api","timestamp":"2025-08-04 02:58:20"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:58:20"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 02:58:20"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:20 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:58:20","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:20 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"94ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:58:20","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:58:41 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:58:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:58:41","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:59:11 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:59:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:59:11","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:59:20 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:59:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:59:20","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:06:59:41 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 02:59:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 02:59:41","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:00:11 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:00:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:00:11","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:00:12 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 898 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 03:00:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"68ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:00:12","url":"/exam_001","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:00:21 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:00:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:00:21","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:00:23 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 898 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 03:00:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:00:23","url":"/exam_001","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:00:36 +0000] \"GET /api/v1/questions?categoryId=cat_001 HTTP/1.1\" 500 2374 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 03:00:36"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"72ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 03:00:36","url":"/?categoryId=cat_001","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:00:41 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:00:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:00:41","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:01:06"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:06"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:01:06"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:01:06"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:06"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:01:06"}
{"level":"info","message":"🔌 WebSocket connected: F4gcrX5qdIXQ6Nn6AAAC","service":"mock-test-api","timestamp":"2025-08-04 03:01:07"}
{"level":"info","message":"🔌 WebSocket connected: VW9Ffe6r5nZ-XaRvAAAE","service":"mock-test-api","timestamp":"2025-08-04 03:01:07"}
{"level":"info","message":"🔌 WebSocket connected: J_MlVwPZDho_C5r6AAAF","service":"mock-test-api","timestamp":"2025-08-04 03:01:07"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:07"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:07"}
{"level":"info","message":"🔌 WebSocket connected: E7tOcOs2DTNqn_8YAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:01:07"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:07"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:07"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"🔌 WebSocket connected: dpLQkZAM3y6QojInAAAC","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"🔌 WebSocket connected: 7mdi70s9OeWWfH-2AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:10"}
{"level":"info","message":"🔌 WebSocket connected: yIfikIcuw3n5s6TbAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:01:11"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:11"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:11"}
{"level":"info","message":"🔌 WebSocket connected: JbpZtlET7IugSxnZAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:01:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:11"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:01:11 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:01:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"139ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:01:11","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:01:21 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:01:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:01:21","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"🔌 WebSocket connected: ldFF6xNaFRrLcsX9AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"🔌 WebSocket connected: 9c1j4a5eDetiEo4eAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:01:39"}
{"level":"info","message":"🔌 WebSocket connected: 3AJFg89cZhhAKoMuAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:01:40"}
{"level":"info","message":"🔌 WebSocket connected: _QVBjf22C1sKoOy8AAAH","service":"mock-test-api","timestamp":"2025-08-04 03:01:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:40"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:01:41 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:01:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"132ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:01:41","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"🔌 WebSocket connected: MraBXgntbV5wYEF2AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"🔌 WebSocket connected: Kxz_oVkIrT8lOs7iAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"🔌 WebSocket connected: R07hFl8VWB8P66rfAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:48"}
{"level":"info","message":"🔌 WebSocket connected: QLw6buwizAzN9W_cAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:01:49"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:49"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:01:56"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:56"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:01:56"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:01:56"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:01:56"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:01:56"}
{"level":"info","message":"🔌 WebSocket connected: dFY3qmV_5V9nU093AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:01:57"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:57"}
{"level":"info","message":"🔌 WebSocket connected: mNpfcRD1vWRqFFB2AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:01:57"}
{"level":"info","message":"🔌 WebSocket connected: cXfMiqonJyilpZsOAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:01:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:01:57"}
{"level":"info","message":"🔌 WebSocket connected: eoWMw--LwgHfoABAAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:01:57"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:01:57"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:02:04"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:02:04"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:02:04"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:02:04"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:02:04"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:02:04"}
{"level":"info","message":"🔌 WebSocket connected: n46aRdAYJLvQTNGjAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:02:04"}
{"level":"info","message":"🔌 WebSocket connected: ieEIEw-Xlv6zCtd-AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:02:05"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:02:05"}
{"level":"info","message":"🔌 WebSocket connected: CVAptu8S3fU40drnAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:02:05"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:02:05"}
{"level":"info","message":"🔌 WebSocket connected: mRLOIX24S88pjfIvAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:02:05"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:02:05"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:02:05"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:02:11 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:02:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"183ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:02:11","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:02:21 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:02:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:02:21","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:02:41"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:02:41"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:02:41"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:02:41"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:02:41"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:02:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:02:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:02:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"207ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:02:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: 21WxIHQBkjK6-0z1AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:02:42"}
{"level":"info","message":"🔌 WebSocket connected: TqqYJ82jaVJJq4IlAAAE","service":"mock-test-api","timestamp":"2025-08-04 03:02:42"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:02:42"}
{"level":"info","message":"🔌 WebSocket connected: hq5J7Mv40cA3DsUPAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:02:42"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:02:42"}
{"level":"info","message":"🔌 WebSocket connected: rQZRlnhs7d6hLAIIAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:02:44"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:02:44"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:02:44"}
{"level":"info","message":"🔌 WebSocket disconnected: rQZRlnhs7d6hLAIIAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:02:54"}
{"level":"info","message":"🔌 WebSocket disconnected: TqqYJ82jaVJJq4IlAAAE","service":"mock-test-api","timestamp":"2025-08-04 03:02:54"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:02:55 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:02:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:02:55","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: dlE5ZCL7jFUY48dbAAAJ","service":"mock-test-api","timestamp":"2025-08-04 03:02:55"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:02:55 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:02:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"87ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:02:55","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: 3zh4CMSHSmk7joHFAAAL","service":"mock-test-api","timestamp":"2025-08-04 03:02:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:02:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:02:55"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:03:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:03:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:03:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:03:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:03:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:03:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:03:55 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:03:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:03:55","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Exam booking update validation error next is not a function","service":"mock-test-api","stack":"TypeError: next is not a function\n    at validateBookingUpdate (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:70:5)\n    at updateBooking (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:287:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)","timestamp":"2025-08-04 03:04:01"}
{"level":"error","message":"Update booking failed Cannot read properties of undefined (reading 'status')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'status')\n    at validateBookingUpdate (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:73:9)\n    at updateBooking (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:287:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at /home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:284:15\n    at param (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/index.js:365:14)","timestamp":"2025-08-04 03:04:01"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:04:01 +0000] \"PUT /api/v1/bookings/cmdwq9to90001i2d90yqbnju4 HTTP/1.1\" 500 64 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 03:04:01"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"PUT","responseTime":"49ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 03:04:01","url":"/cmdwq9to90001i2d90yqbnju4","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:04:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:04:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:04:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 3zh4CMSHSmk7joHFAAAL","service":"mock-test-api","timestamp":"2025-08-04 03:04:37"}
{"level":"info","message":"🔌 WebSocket disconnected: dlE5ZCL7jFUY48dbAAAJ","service":"mock-test-api","timestamp":"2025-08-04 03:04:37"}
{"level":"info","message":"🔌 WebSocket connected: 83EpWIjJQqLc0SIiAAAO","service":"mock-test-api","timestamp":"2025-08-04 03:04:38"}
{"level":"info","message":"🔌 WebSocket connected: FSgLTMZpbYSKVlMtAAAP","service":"mock-test-api","timestamp":"2025-08-04 03:04:38"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:04:38"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:04:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:04:38 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:04:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:04:38","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:04:38 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:04:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:04:38","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:04:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:04:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:04:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:05:09 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 898 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 03:05:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"70ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:05:09","url":"/exam_001","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:05:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:05:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"33ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:05:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:05:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:05:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:05:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:06:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:06:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:06:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 83EpWIjJQqLc0SIiAAAO","service":"mock-test-api","timestamp":"2025-08-04 03:06:29"}
{"level":"info","message":"🔌 WebSocket disconnected: FSgLTMZpbYSKVlMtAAAP","service":"mock-test-api","timestamp":"2025-08-04 03:06:29"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:06:31 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:06:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"124ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:06:31","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:06:31 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:06:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"114ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:06:31","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:06:31 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:06:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"145ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:06:31","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:06:31 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:06:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"163ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:06:31","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: WgVqlHC39LKAGEzKAAAS","service":"mock-test-api","timestamp":"2025-08-04 03:06:31"}
{"level":"info","message":"🔌 WebSocket connected: gGhSNTGgZ9eYoNYXAAAT","service":"mock-test-api","timestamp":"2025-08-04 03:06:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:06:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:06:31"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:06:32 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:06:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:06:32","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:06:32 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:06:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:06:32","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:06:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:06:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:06:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"🔌 WebSocket connected: hkIGdHvvV4pQA_o0AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"🔌 WebSocket connected: oDaCEn0VV1EnZPV8AAAE","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"🔌 WebSocket connected: 1DxSgWS7nHAQNZ7lAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"🔌 WebSocket connected: MmStVXupnugv-Fk6AAAH","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:07:07"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:07:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:07:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"131ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:07:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:07:32"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:07:32"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:07:32"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:07:32"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:07:32"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:07:32"}
{"level":"info","message":"🔌 WebSocket connected: i-GiOf6ynSpU-8TJAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:07:33"}
{"level":"info","message":"🔌 WebSocket connected: -rFyaYUhxFJK2MoSAAAE","service":"mock-test-api","timestamp":"2025-08-04 03:07:33"}
{"level":"info","message":"🔌 WebSocket connected: r0g_-IfUfPmStUuIAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:07:33"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:07:33"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:07:33"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:07:33"}
{"level":"info","message":"🔌 WebSocket connected: qd-LB7AwKDaRryDqAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:07:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:07:34"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:07:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:07:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"133ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:07:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:08:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: i-GiOf6ynSpU-8TJAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:08:17"}
{"level":"info","message":"🔌 WebSocket disconnected: r0g_-IfUfPmStUuIAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:08:17"}
{"level":"info","message":"🔌 WebSocket connected: q6CUTgCJM5RvhUl3AAAJ","service":"mock-test-api","timestamp":"2025-08-04 03:08:18"}
{"level":"info","message":"🔌 WebSocket connected: ZudnxJgGQl5JfIvnAAAL","service":"mock-test-api","timestamp":"2025-08-04 03:08:18"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:08:18"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:08:18"}
{"level":"info","message":"🔌 WebSocket disconnected: ZudnxJgGQl5JfIvnAAAL","service":"mock-test-api","timestamp":"2025-08-04 03:08:22"}
{"level":"info","message":"🔌 WebSocket disconnected: q6CUTgCJM5RvhUl3AAAJ","service":"mock-test-api","timestamp":"2025-08-04 03:08:22"}
{"level":"info","message":"🔌 WebSocket connected: RXnIK-k28uZb0Bo7AAAN","service":"mock-test-api","timestamp":"2025-08-04 03:08:23"}
{"level":"info","message":"🔌 WebSocket connected: oq325frkLh0GZTw8AAAP","service":"mock-test-api","timestamp":"2025-08-04 03:08:23"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:23 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"103ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:08:23","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:08:23"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:08:23"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:23 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"107ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:08:23","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:23 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"203ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:08:23","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:24 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"228ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:08:24","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:25 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:08:25","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:25 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"94ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:08:25","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:41 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 3766 \"-\" \"curl/8.14.1\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"88ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:08:41","url":"/exam_001","userAgent":"curl/8.14.1","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:08:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:08:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:08:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:09:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:09:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:09:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:09:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:09:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:09:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: RXnIK-k28uZb0Bo7AAAN","service":"mock-test-api","timestamp":"2025-08-04 03:09:44"}
{"level":"info","message":"🔌 WebSocket disconnected: oq325frkLh0GZTw8AAAP","service":"mock-test-api","timestamp":"2025-08-04 03:09:44"}
{"level":"info","message":"🔌 WebSocket connected: S_59q4kAIm9CKnFFAAAS","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"level":"info","message":"🔌 WebSocket connected: 1ipp07bienOAdX-JAAAT","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:09:46 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:09:46","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:09:46 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:09:46","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:09:46 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:09:46","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:09:46 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:09:46","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:09:46 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:09:46","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:09:46 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:09:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:09:46","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:10:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:10:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:10:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:10:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:10:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:10:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:11:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:11:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:11:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:11:17"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:11:17"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:11:17"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:11:17"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:11:17"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:11:17"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:11:19","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:11:19 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"102ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:11:19","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:11:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"207ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:11:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:11:19 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"219ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:11:19","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: FUcZAihvDaVKESemAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"level":"info","message":"🔌 WebSocket connected: aJNsJ_Q3qeolUQLiAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"level":"info","message":"🔌 WebSocket connected: pPjhEnbXPlkIxh-MAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"level":"info","message":"🔌 WebSocket connected: dRsbtZ6AcxZ46FVCAAAI","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:11:19"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:11:20","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:11:20 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:11:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:11:20","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:11:22","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:11:22 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:11:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:11:22","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: FUcZAihvDaVKESemAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:11:25"}
{"level":"info","message":"🔌 WebSocket disconnected: aJNsJ_Q3qeolUQLiAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:11:25"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:11:26","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:11:26 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:11:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:11:26","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: vs3U-3f36swHiO2-AAAL","service":"mock-test-api","timestamp":"2025-08-04 03:11:28"}
{"level":"info","message":"🔌 WebSocket connected: KRarVA0rCW-fwSUEAAAM","service":"mock-test-api","timestamp":"2025-08-04 03:11:28"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:11:28"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:11:28"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:11:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:11:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"41ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:11:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:12:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:12:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:12:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: vs3U-3f36swHiO2-AAAL","service":"mock-test-api","timestamp":"2025-08-04 03:12:23"}
{"level":"info","message":"🔌 WebSocket disconnected: KRarVA0rCW-fwSUEAAAM","service":"mock-test-api","timestamp":"2025-08-04 03:12:23"}
{"level":"info","message":"🔌 WebSocket connected: M8JwINDuOnbNZiGcAAAP","service":"mock-test-api","timestamp":"2025-08-04 03:12:25"}
{"level":"info","message":"🔌 WebSocket connected: EBtp5xOeHcuuP--fAAAQ","service":"mock-test-api","timestamp":"2025-08-04 03:12:25"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:12:25"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:12:25"}
{"level":"info","message":"🔌 WebSocket disconnected: EBtp5xOeHcuuP--fAAAQ","service":"mock-test-api","timestamp":"2025-08-04 03:12:39"}
{"level":"info","message":"🔌 WebSocket disconnected: M8JwINDuOnbNZiGcAAAP","service":"mock-test-api","timestamp":"2025-08-04 03:12:39"}
{"level":"info","message":"🔌 WebSocket connected: nK386VCCYVQPYUhxAAAT","service":"mock-test-api","timestamp":"2025-08-04 03:12:41"}
{"level":"info","message":"🔌 WebSocket connected: s3Q_sj2ITHV4FhCnAAAU","service":"mock-test-api","timestamp":"2025-08-04 03:12:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:12:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:12:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:12:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:12:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:12:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:13:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:13:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:13:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:13:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:13:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:13:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: nK386VCCYVQPYUhxAAAT","service":"mock-test-api","timestamp":"2025-08-04 03:13:51"}
{"level":"info","message":"🔌 WebSocket disconnected: s3Q_sj2ITHV4FhCnAAAU","service":"mock-test-api","timestamp":"2025-08-04 03:13:51"}
{"level":"info","message":"🔌 WebSocket connected: K-FMMiLiruOlCj-sAAAW","service":"mock-test-api","timestamp":"2025-08-04 03:13:51"}
{"level":"info","message":"🔌 WebSocket connected: YBzWNiFZQTet1xh6AAAY","service":"mock-test-api","timestamp":"2025-08-04 03:13:52"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:13:52"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:13:52"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:14:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:14:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:14:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: K-FMMiLiruOlCj-sAAAW","service":"mock-test-api","timestamp":"2025-08-04 03:14:39"}
{"level":"info","message":"🔌 WebSocket disconnected: YBzWNiFZQTet1xh6AAAY","service":"mock-test-api","timestamp":"2025-08-04 03:14:39"}
{"level":"info","message":"🔌 WebSocket connected: xuGpjInHH_CsCwL5AAAb","service":"mock-test-api","timestamp":"2025-08-04 03:14:41"}
{"level":"info","message":"🔌 WebSocket connected: V8Ua9pGl5WTDBJSWAAAc","service":"mock-test-api","timestamp":"2025-08-04 03:14:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:14:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:14:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:14:49 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:14:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"46ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:14:49","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:19 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:15:19","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:15:25"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:15:25"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:15:25"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:15:25"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:15:25"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:15:25"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:28 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"183ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:15:28","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:28 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"217ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:15:28","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:15:28","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:28 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:15:28","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"132ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:15:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:28 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"106ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:15:28","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: 7Fl_Tw0WH1Xlo8lZAAAE","service":"mock-test-api","timestamp":"2025-08-04 03:15:28"}
{"level":"info","message":"🔌 WebSocket connected: zoFVfoIhpx9Jr1yFAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:15:28"}
{"level":"info","message":"🔌 WebSocket connected: fh_ZYsCpib6Q8ofdAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:15:29"}
{"level":"info","message":"🔌 WebSocket connected: QizhYmAT3n3_9YdTAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:15:29"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:15:29"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:15:29"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:15:29"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:15:29"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:15:29","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:29 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:15:29","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:15:31","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:31 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:15:31","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:15:35","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:35 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:15:35","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:15:58 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:15:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:15:58","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 7Fl_Tw0WH1Xlo8lZAAAE","service":"mock-test-api","timestamp":"2025-08-04 03:16:17"}
{"level":"info","message":"🔌 WebSocket disconnected: fh_ZYsCpib6Q8ofdAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:16:17"}
{"level":"info","message":"🔌 WebSocket connected: x8tiqHrUQ_tvXGlYAAAJ","service":"mock-test-api","timestamp":"2025-08-04 03:16:19"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:16:19 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:16:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:16:19","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:16:19 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:16:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:16:19","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: pxicONDOON2W4nvVAAAL","service":"mock-test-api","timestamp":"2025-08-04 03:16:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:16:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:16:19"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:16:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:16:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"32ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:16:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:16:58 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:16:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:16:58","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: x8tiqHrUQ_tvXGlYAAAJ","service":"mock-test-api","timestamp":"2025-08-04 03:17:25"}
{"level":"info","message":"🔌 WebSocket disconnected: pxicONDOON2W4nvVAAAL","service":"mock-test-api","timestamp":"2025-08-04 03:17:25"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:17:27 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:17:27"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:17:27","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: o2NCbgLjBWaL-2zXAAAN","service":"mock-test-api","timestamp":"2025-08-04 03:17:27"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:17:27 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:17:27"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:17:27","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: wsHsbou_vwwukMzwAAAP","service":"mock-test-api","timestamp":"2025-08-04 03:17:27"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:17:27"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:17:27"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:17:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:17:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"35ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:17:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:17:58 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:17:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:17:58","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:18:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:18:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:18:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: wsHsbou_vwwukMzwAAAP","service":"mock-test-api","timestamp":"2025-08-04 03:18:53"}
{"level":"info","message":"🔌 WebSocket disconnected: o2NCbgLjBWaL-2zXAAAN","service":"mock-test-api","timestamp":"2025-08-04 03:18:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:18:54 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:18:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:18:54","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:18:54 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:18:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:18:54","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: 8gTkW_gJmH_5Dh0IAAAS","service":"mock-test-api","timestamp":"2025-08-04 03:18:55"}
{"level":"info","message":"🔌 WebSocket connected: V_Z0sGeqfb3FPP3PAAAT","service":"mock-test-api","timestamp":"2025-08-04 03:18:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:18:55"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:18:55"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:18:58 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:18:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:18:58","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 8gTkW_gJmH_5Dh0IAAAS","service":"mock-test-api","timestamp":"2025-08-04 03:19:28"}
{"level":"info","message":"🔌 WebSocket disconnected: V_Z0sGeqfb3FPP3PAAAT","service":"mock-test-api","timestamp":"2025-08-04 03:19:28"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:19:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:19:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:19:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:19:30 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:19:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:19:30","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:19:30 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:19:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:19:30","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: UFhlI12cWOffUdl0AAAW","service":"mock-test-api","timestamp":"2025-08-04 03:19:30"}
{"level":"info","message":"🔌 WebSocket connected: 5g4PugAAlWx7SYq7AAAX","service":"mock-test-api","timestamp":"2025-08-04 03:19:30"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:19:30"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:19:30"}
{"level":"info","message":"🔌 WebSocket disconnected: UFhlI12cWOffUdl0AAAW","service":"mock-test-api","timestamp":"2025-08-04 03:19:39"}
{"level":"info","message":"🔌 WebSocket disconnected: 5g4PugAAlWx7SYq7AAAX","service":"mock-test-api","timestamp":"2025-08-04 03:19:39"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:19:40 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:19:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:19:40","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:19:40 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:19:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:19:40","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: 9ovTD8RJf1MHhOvHAAAa","service":"mock-test-api","timestamp":"2025-08-04 03:19:40"}
{"level":"info","message":"🔌 WebSocket connected: kfnTwbyJdyUPAtuuAAAb","service":"mock-test-api","timestamp":"2025-08-04 03:19:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:19:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:19:40"}
{"level":"info","message":"🔌 WebSocket disconnected: 9ovTD8RJf1MHhOvHAAAa","service":"mock-test-api","timestamp":"2025-08-04 03:19:53"}
{"level":"info","message":"🔌 WebSocket disconnected: kfnTwbyJdyUPAtuuAAAb","service":"mock-test-api","timestamp":"2025-08-04 03:19:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:19:54 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:19:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:19:54","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:19:54 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:19:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:19:54","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: QYBCeGZoiNPAHmrAAAAe","service":"mock-test-api","timestamp":"2025-08-04 03:19:54"}
{"level":"info","message":"🔌 WebSocket connected: 9hNTVExFAThPiKMZAAAf","service":"mock-test-api","timestamp":"2025-08-04 03:19:54"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:19:54"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:19:54"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:19:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:19:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:19:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:20:08 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:20:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:20:08","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: 9hNTVExFAThPiKMZAAAf","service":"mock-test-api","timestamp":"2025-08-04 03:20:14"}
{"level":"info","message":"🔌 WebSocket disconnected: QYBCeGZoiNPAHmrAAAAe","service":"mock-test-api","timestamp":"2025-08-04 03:20:14"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:20:15 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:20:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:20:15","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:20:15 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:20:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:20:15","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: DzaRPS4RAo7THh4VAAAi","service":"mock-test-api","timestamp":"2025-08-04 03:20:15"}
{"level":"info","message":"🔌 WebSocket connected: T6GhX8V9mmPLTN3gAAAj","service":"mock-test-api","timestamp":"2025-08-04 03:20:15"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:20:15"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:20:15"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:20:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:20:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"61ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:20:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:20:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:20:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"50ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:20:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"clientVersion":"6.13.0","errorCode":"P1001","level":"error","message":"Database connection failed: Can't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","name":"PrismaClientInitializationError","service":"mock-test-api","stack":"PrismaClientInitializationError: Can't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.\n    at r (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:112:2770)\n    at async Database.connect (/home/ahmadi/Desktop/mock/src/config/database.js:34:7)\n    at async startServer (/home/ahmadi/Desktop/mock/src/server.js:226:5)","timestamp":"2025-08-04 03:24:54"}
{"clientVersion":"6.13.0","errorCode":"P1001","level":"error","message":"Database connection failed: Can't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","name":"PrismaClientInitializationError","service":"mock-test-api","stack":"PrismaClientInitializationError: Can't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.\n    at r (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:112:2770)\n    at async Database.connect (/home/ahmadi/Desktop/mock/src/config/database.js:34:7)\n    at async startServer (/home/ahmadi/Desktop/mock/src/server.js:226:5)","timestamp":"2025-08-04 03:25:03"}
{"clientVersion":"6.13.0","errorCode":"P1001","level":"error","message":"Database connection failed: Can't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","name":"PrismaClientInitializationError","service":"mock-test-api","stack":"PrismaClientInitializationError: Can't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.\n    at r (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:112:2770)\n    at async Database.connect (/home/ahmadi/Desktop/mock/src/config/database.js:34:7)\n    at async startServer (/home/ahmadi/Desktop/mock/src/server.js:226:5)","timestamp":"2025-08-04 03:25:44"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:27:00"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:27:00"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:27:00"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:27:00"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:27:00"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:27:00"}
{"email":"student1@example.com","ip":"::1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 03:27:10","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:10 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"531ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:27:10","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: URRFBJ5MT-WizU6CAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:27:10"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:27:10"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:10 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"89ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:27:10","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:10 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"184ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:27:10","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:10 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 482 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"240ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:27:10","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:10 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 774 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"251ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:27:10","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:12 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"70ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:27:12","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:12 +0000] \"GET /api/v1/bookings HTTP/1.1\" 200 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"108ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:27:12","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:15 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"70ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:27:15","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:27:15 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:27:15"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"85ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:27:15","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:29:03 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:29:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:29:03","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:29:11 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:29:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:29:11","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:29:31"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:29:31"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:29:31"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:29:31"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:29:31"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:29:31"}
{"level":"info","message":"🔌 WebSocket connected: BfgAqQAGldUvx4qBAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:29:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:29:31"}
{"level":"info","message":"🔌 WebSocket disconnected: BfgAqQAGldUvx4qBAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:29:37"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:29:39 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:29:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"154ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:29:39","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:29:39 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:29:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"157ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:29:39","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: DfBqlGP9xrkJ0O-_AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:29:39"}
{"level":"info","message":"🔌 WebSocket connected: S0ymNt0J20hHeKPwAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:29:39"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:29:39"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:29:39"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:30:37 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:30:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:30:37","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:30:37","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:30:37","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:30:37.522Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:30:37.522Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:30:37.522Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:30:37.522Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:21","timestamp":"2025-08-04 03:30:37"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:30:37 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 128 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:30:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"144ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:30:37","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:30:37","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:30:37","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:30:37.834Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:30:37.834Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:30:37.834Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:30:37.834Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:21","timestamp":"2025-08-04 03:30:37"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:30:37 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 128 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:30:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"33ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:30:37","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:31:08"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:31:08"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:31:08"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:31:08"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:31:08"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:31:08"}
{"level":"info","message":"🔌 WebSocket connected: AdLiPXyI67zwx5woAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:31:08"}
{"level":"info","message":"🔌 WebSocket connected: P751JcfIcwwewFVKAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:31:10"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:31:10"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:31:10"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:31:31"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:31:31"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:31:31"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:31:31"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:31:31"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:31:31"}
{"level":"info","message":"🔌 WebSocket connected: rBGF_8vUNPu_LmL3AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:31:32"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:31:32"}
{"level":"info","message":"🔌 WebSocket connected: mIc-lqec0Ef3UZSQAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:31:33"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:31:33"}
{"level":"info","message":"🔌 WebSocket disconnected: mIc-lqec0Ef3UZSQAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:31:38"}
{"level":"info","message":"🔌 WebSocket disconnected: rBGF_8vUNPu_LmL3AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:31:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:40 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"208ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:31:40","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:40 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"224ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:31:40","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: NzCJaztUiJeT_wqXAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:31:40"}
{"level":"info","message":"🔌 WebSocket connected: EQCLeLMF0F5LKck_AAAH","service":"mock-test-api","timestamp":"2025-08-04 03:31:40"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:31:40","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:31:40","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:40.760Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:40.760Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:40.760Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:40.760Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:20","timestamp":"2025-08-04 03:31:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:40 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 400 58 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"136ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 03:31:40","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:31:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:31:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:41 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:31:41","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:31:41","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:31:41","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:41.546Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:41.546Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:41.546Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:41.546Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:20","timestamp":"2025-08-04 03:31:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:41 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 400 58 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"46ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 03:31:41","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:31:41","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:31:41","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:41.847Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:41.847Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:41.847Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:41.847Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:20","timestamp":"2025-08-04 03:31:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:41 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 400 58 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"32ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 03:31:41","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:31:42","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:31:42","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:42.612Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:42.612Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:42.612Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:42.612Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:20","timestamp":"2025-08-04 03:31:42"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:42 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 400 58 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"38ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 03:31:42","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:49 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:31:49","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:31:49","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:31:49","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:49.412Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:49.412Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:49.412Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:49.412Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:20","timestamp":"2025-08-04 03:31:49"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:49 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 400 58 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"38ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 03:31:49","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:31:50","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:31:50","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:50.519Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:50.519Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:31:50.519Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:31:50.519Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:20","timestamp":"2025-08-04 03:31:50"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:31:50 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 400 58 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:31:50"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"27ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 03:31:50","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:32:09"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:32:09"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:32:09"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:32:09"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:32:09"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:32:09"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:32:09","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:32:09","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Start exam attempt failed \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:32:09.799Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:32:09.799Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:348:48\n\n  345 });\n  346 \n  347 // Create exam attempt\n→ 348 const attempt = await prisma.examAttempt.create({\n        data: {\n          examId: \"exam_001\",\n          userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n          startTime: new Date(\"2025-08-04T07:32:09.799Z\"),\n          ~~~~~~~~~\n          endTime: new Date(\"2025-08-04T08:32:09.799Z\"),\n          status: \"IN_PROGRESS\",\n          totalQuestions: 0,\n          currentQuestionIndex: 0,\n      ?   id?: String,\n      ?   bookingId?: String | Null,\n      ?   startedAt?: DateTime,\n      ?   completedAt?: DateTime | Null,\n      ?   totalMarks?: Int,\n      ?   obtainedMarks?: Int,\n      ?   percentage?: Float,\n      ?   isPassed?: Boolean,\n      ?   timeSpent?: Int | Null,\n      ?   ipAddress?: String | Null,\n      ?   userAgent?: String | Null,\n      ?   isCheating?: Boolean,\n      ?   cheatingReason?: String | Null,\n      ?   createdAt?: DateTime,\n      ?   updatedAt?: DateTime,\n      ?   responses?: QuestionResponseUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   questionScores?: QuestionScoreUncheckedCreateNestedManyWithoutAttemptInput,\n      ?   examScore?: ExamScoreUncheckedCreateNestedOneWithoutAttemptInput,\n      ?   certificate?: CertificateUncheckedCreateNestedOneWithoutAttemptInput\n        }\n      })\n\nUnknown argument `startTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.startExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:348:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:13:20","timestamp":"2025-08-04 03:32:09"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:32:09 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 400 58 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:32:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"234ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 03:32:09","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: dob6CQsDxPJAQ64LAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:32:10"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:32:10"}
{"level":"info","message":"🔌 WebSocket connected: wZpqEpWVb9pCFAq7AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:32:10"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:32:10"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:32:47"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:32:47"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:32:47"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:32:47"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:32:47"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:32:47"}
{"level":"info","message":"🔌 WebSocket connected: Kk-dSU7x-h3gzc84AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:32:47"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:32:47"}
{"level":"info","message":"🔌 WebSocket connected: FD4E2Kxxg7zrCJnQAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:32:49"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:32:49"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:32:56"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:32:56"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:32:56"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:32:56"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:32:56"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:32:56"}
{"level":"info","message":"🔌 WebSocket connected: PIz6dWjCgWZvqmjaAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:32:57"}
{"level":"info","message":"🔌 WebSocket connected: B_1ijsS0QeGQt-GVAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:32:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:32:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:32:57"}
{"level":"info","message":"🔌 WebSocket disconnected: B_1ijsS0QeGQt-GVAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:33:20"}
{"level":"info","message":"🔌 WebSocket disconnected: PIz6dWjCgWZvqmjaAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:33:20"}
{"level":"info","message":"🔌 WebSocket connected: MOMkBNswTQ2mUmryAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:33:21"}
{"level":"info","message":"🔌 WebSocket connected: ohN_mjhZE7cOKHSQAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:33:21"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:33:21"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:33:21"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:33:21 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:33:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"210ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:33:21","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:33:22 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:33:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"248ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:33:22","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:33:22","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:33:22","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:33:22 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 270 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:33:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"115ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:33:22","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:33:22","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:33:22","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:33:22 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 270 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:33:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"32ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:33:22","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: MOMkBNswTQ2mUmryAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:33:29"}
{"level":"info","message":"🔌 WebSocket disconnected: ohN_mjhZE7cOKHSQAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:33:29"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:33:31 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:33:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:33:31","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:33:31 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:33:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:33:31","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: ssOwNEs9sEnGtkyoAAAK","service":"mock-test-api","timestamp":"2025-08-04 03:33:31"}
{"level":"info","message":"🔌 WebSocket connected: qWRexLg62LoCysWSAAAL","service":"mock-test-api","timestamp":"2025-08-04 03:33:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:33:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:33:31"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:33:31","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:33:31","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:33:31 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 270 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:33:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"38ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:33:31","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"algorithm":"weighted_random","examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Generating random questions","overlapPercentage":10,"service":"mock-test-api","timestamp":"2025-08-04 03:33:31","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 03:33:31","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:33:31 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 270 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:33:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"41ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:33:31","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:33:56"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:33:56"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:33:56"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:33:56"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:33:56"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:33:56"}
{"level":"info","message":"🔌 WebSocket connected: S8IEIsaMeaZlyPTYAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:33:57"}
{"level":"info","message":"🔌 WebSocket connected: 2xEn5Kz_6zDGyaOLAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:33:59"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:33:59"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:33:59"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:34:10"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:34:10"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:34:10"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:34:10"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:34:10"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:34:10"}
{"level":"info","message":"🔌 WebSocket connected: Cf59Som5Q2ABUm5_AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:34:10"}
{"level":"info","message":"🔌 WebSocket connected: ZUTFwersONxZyg-xAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:34:11"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:34:11"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:34:11"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"🔌 WebSocket connected: 6dE_QIouMTzm-qwrAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"🔌 WebSocket connected: cuEKnWnRwDnyj_zqAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:34:19"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:35:15"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:35:15"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:35:15"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:35:15"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:35:15"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:35:15"}
{"level":"info","message":"🔌 WebSocket connected: cPKoLin908sIQbvFAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:35:15"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:35:17"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:35:17"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:35:17"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:35:17"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:35:17"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:35:17"}
{"level":"info","message":"🔌 WebSocket connected: YwHG3R5DcR98iBs7AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:35:17"}
{"level":"info","message":"🔌 WebSocket connected: Nb5UyUVOwyGjjTSwAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:35:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:35:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:35:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:35:19"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"🔌 WebSocket connected: QbnI28PZCv01agEWAAAC","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"🔌 WebSocket connected: qq_aSsD7WqA1onnAAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:35:57"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:36:04"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:04"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:36:04"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:36:04"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:04"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:36:04"}
{"level":"info","message":"🔌 WebSocket connected: IFFbt2Hq_jrHaABJAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:36:05"}
{"level":"info","message":"🔌 WebSocket connected: H3Qb5yz_O0ObpaTjAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:36:05"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:05"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:05"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:36:06"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:06"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:36:06"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:36:06"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:06"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:36:06"}
{"level":"info","message":"🔌 WebSocket connected: LqW9ALzD7qSi2BGLAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:36:06"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:06"}
{"level":"info","message":"🔌 WebSocket connected: r6VdxKCBM5Vyq7jGAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:36:07"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:07"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:36:27"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:27"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:36:27"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:36:27"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:27"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:36:27"}
{"level":"info","message":"🔌 WebSocket connected: 1QGyHYXCKZqzOO1GAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:36:27"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:27"}
{"level":"info","message":"🔌 WebSocket connected: 16nZpCyQEo_WWRR5AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:36:28"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:28"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:36:33"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:33"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:36:33"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:36:33"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:33"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:36:33"}
{"level":"info","message":"🔌 WebSocket connected: Zm9mALBH5d6fZQOTAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:36:33"}
{"level":"info","message":"🔌 WebSocket connected: kqbAkVX5RLfrJrQXAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:36:34"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:34"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:34"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:36:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:36:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:36:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:36:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:36:35"}
{"level":"info","message":"🔌 WebSocket connected: JFZkHahL5PX4rREgAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:36:35"}
{"level":"info","message":"🔌 WebSocket connected: eOR_orfQnzW_VqVhAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:36:36"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:36"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:36:36"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:36:49 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:36:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"111ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:36:49","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:36:49","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:36:49"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:36:49 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:36:49"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"126ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:36:49","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:36:57 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:36:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:36:57","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:06 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:37:06","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:37:21"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:37:21"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:37:21"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:37:21"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:37:21"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:37:21"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:22 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"131ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:37:22","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: CtuhuD-m_dOGfkmJAAAC","service":"mock-test-api","timestamp":"2025-08-04 03:37:23"}
{"level":"info","message":"🔌 WebSocket connected: 8u5dUMk-KIikDiOAAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:37:23"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:37:23"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:37:23"}
{"level":"info","message":"🔌 WebSocket disconnected: CtuhuD-m_dOGfkmJAAAC","service":"mock-test-api","timestamp":"2025-08-04 03:37:29"}
{"level":"info","message":"🔌 WebSocket disconnected: 8u5dUMk-KIikDiOAAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:37:29"}
{"level":"info","message":"🔌 WebSocket connected: LWyqwZGmFcDAg6fIAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:37:30"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:30 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 304 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:37:30","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:30 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"59ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:37:30","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: QAHntTBzyi__wyclAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:37:30"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:37:30"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:37:30"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:37:30","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:37:30"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:30 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"35ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:37:30","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Complete exam attempt failed \nInvalid `prisma.examAttempt.update()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:504:55\n\n  501 const isPassed = percentage >= attempt.exam.passingMarks;\n  502 \n  503 // Update attempt\n→ 504 const updatedAttempt = await prisma.examAttempt.update({\n        where: {\n          id: \"cmdwssd4n0001i27odi4jos3q\"\n        },\n        data: {\n          status: \"COMPLETED\",\n          endTime: new Date(\"2025-08-04T07:37:38.690Z\"),\n          ~~~~~~~\n          score: 0,\n          percentage: NaN,\n          correctAnswers: 0,\n          isPassed: false,\n          completedAt: new Date(\"2025-08-04T07:37:38.690Z\"),\n      ?   id?: String | StringFieldUpdateOperationsInput,\n      ?   startedAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   totalMarks?: Int | IntFieldUpdateOperationsInput,\n      ?   obtainedMarks?: Int | IntFieldUpdateOperationsInput,\n      ?   timeSpent?: Int | NullableIntFieldUpdateOperationsInput | Null,\n      ?   ipAddress?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   userAgent?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   isCheating?: Boolean | BoolFieldUpdateOperationsInput,\n      ?   cheatingReason?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   user?: UserUpdateOneRequiredWithoutExamAttemptsNestedInput,\n      ?   exam?: ExamUpdateOneRequiredWithoutAttemptsNestedInput,\n      ?   booking?: ExamBookingUpdateOneWithoutAttemptsNestedInput,\n      ?   responses?: QuestionResponseUpdateManyWithoutAttemptNestedInput,\n      ?   questionScores?: QuestionScoreUpdateManyWithoutAttemptNestedInput,\n      ?   examScore?: ExamScoreUpdateOneWithoutAttemptNestedInput,\n      ?   certificate?: CertificateUpdateOneWithoutAttemptNestedInput\n        }\n      })\n\nUnknown argument `endTime`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.examAttempt.update()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:504:55\n\n  501 const isPassed = percentage >= attempt.exam.passingMarks;\n  502 \n  503 // Update attempt\n→ 504 const updatedAttempt = await prisma.examAttempt.update({\n        where: {\n          id: \"cmdwssd4n0001i27odi4jos3q\"\n        },\n        data: {\n          status: \"COMPLETED\",\n          endTime: new Date(\"2025-08-04T07:37:38.690Z\"),\n          ~~~~~~~\n          score: 0,\n          percentage: NaN,\n          correctAnswers: 0,\n          isPassed: false,\n          completedAt: new Date(\"2025-08-04T07:37:38.690Z\"),\n      ?   id?: String | StringFieldUpdateOperationsInput,\n      ?   startedAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   totalMarks?: Int | IntFieldUpdateOperationsInput,\n      ?   obtainedMarks?: Int | IntFieldUpdateOperationsInput,\n      ?   timeSpent?: Int | NullableIntFieldUpdateOperationsInput | Null,\n      ?   ipAddress?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   userAgent?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   isCheating?: Boolean | BoolFieldUpdateOperationsInput,\n      ?   cheatingReason?: String | NullableStringFieldUpdateOperationsInput | Null,\n      ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,\n      ?   user?: UserUpdateOneRequiredWithoutExamAttemptsNestedInput,\n      ?   exam?: ExamUpdateOneRequiredWithoutAttemptsNestedInput,\n      ?   booking?: ExamBookingUpdateOneWithoutAttemptsNestedInput,\n      ?   responses?: QuestionResponseUpdateManyWithoutAttemptNestedInput,\n      ?   questionScores?: QuestionScoreUpdateManyWithoutAttemptNestedInput,\n      ?   examScore?: ExamScoreUpdateOneWithoutAttemptNestedInput,\n      ?   certificate?: CertificateUpdateOneWithoutAttemptNestedInput\n        }\n      })\n\nUnknown argument `endTime`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:504:30)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:63:20","timestamp":"2025-08-04 03:37:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:38 +0000] \"POST /api/v1/attempts/cmdwssd4n0001i27odi4jos3q/submit HTTP/1.1\" 200 120 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"25ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:37:38","url":"/cmdwssd4n0001i27odi4jos3q/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:40 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"110ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:37:40","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:40 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"96ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:37:40","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:40 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"124ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:37:40","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:37:40 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:37:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"121ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:37:40","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"🔌 WebSocket connected: iw902DFElsP3_lKgAAAC","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"🔌 WebSocket connected: xOaetY2Rfnl2-w3LAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:38:37"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:38:41 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:38:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"140ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:38:41","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:38:41 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:38:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"151ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:38:41","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:38:41 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:38:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"138ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:38:41","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:38:41 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:38:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"167ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:38:41","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: xOaetY2Rfnl2-w3LAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:38:53"}
{"level":"info","message":"🔌 WebSocket disconnected: iw902DFElsP3_lKgAAAC","service":"mock-test-api","timestamp":"2025-08-04 03:38:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:38:54 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:38:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:38:54","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:38:54 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:38:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"30ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:38:54","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: dinbqUrGDzKretrOAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:38:54"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:38:54 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:38:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:38:54","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:38:54 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:38:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"44ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:38:54","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: JGwhEjhWcyuhBnE1AAAH","service":"mock-test-api","timestamp":"2025-08-04 03:38:54"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:38:54"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:38:54"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:38:55"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:38:55"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:38:55"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:38:55"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:38:55"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:38:55"}
{"level":"info","message":"🔌 WebSocket connected: RK7Ie0jt9B-MFty5AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:38:56"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:38:56"}
{"level":"info","message":"🔌 WebSocket connected: fIkE9Hu_AQ9nVO1fAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:38:58"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:38:58"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:39:19"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:39:19"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:39:19"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:39:19"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:39:19"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:39:19"}
{"level":"info","message":"🔌 WebSocket connected: MN0V1zjzi-V_tCaGAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:39:19"}
{"level":"info","message":"🔌 WebSocket connected: i0orJkvSwLNQyCcVAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:39:20"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:39:20"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:39:20"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"🔌 WebSocket connected: upJ_P3EInlDZDgo4AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"🔌 WebSocket connected: 1o1l_nlx5a5MZZpuAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:39:31"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:39:39"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:39:39"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:39:39"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:39:39"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:39:39"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:39:39"}
{"level":"info","message":"🔌 WebSocket connected: kRFQKXfUTSN5Mu9bAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:39:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:39:40"}
{"level":"info","message":"🔌 WebSocket connected: _uO0ULkwG9JMy7_AAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:39:40"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:39:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:39:43 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:39:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"80ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:39:43","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:39:43 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:39:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"193ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:39:43","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:39:45 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:39:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"118ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:39:45","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:39:45 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:39:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"156ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:39:45","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:39:45","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:39:45"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:39:45 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:39:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"25ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:39:45","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Error checking answer: Cannot read properties of undefined (reading 'filter')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'filter')\n    at ExamService.checkAnswer (/home/ahmadi/Desktop/mock/src/services/examService.js:558:10)\n    at ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:493:32)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:39:53"}
{"level":"error","message":"Error checking answer: Cannot read properties of undefined (reading 'filter')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'filter')\n    at ExamService.checkAnswer (/home/ahmadi/Desktop/mock/src/services/examService.js:558:10)\n    at ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:493:32)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:39:53"}
{"level":"error","message":"Error checking answer: Cannot read properties of undefined (reading 'filter')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'filter')\n    at ExamService.checkAnswer (/home/ahmadi/Desktop/mock/src/services/examService.js:558:10)\n    at ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:493:32)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:39:53"}
{"level":"error","message":"Error checking answer: Cannot read properties of undefined (reading 'filter')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'filter')\n    at ExamService.checkAnswer (/home/ahmadi/Desktop/mock/src/services/examService.js:558:10)\n    at ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:493:32)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:39:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:39:53 +0000] \"POST /api/v1/attempts/cmdwsv9fd0001i2btr8gewm79/submit HTTP/1.1\" 200 646 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:39:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"107ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:39:53","url":"/cmdwsv9fd0001i2btr8gewm79/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:40:16"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:40:16"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:40:16"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:40:16"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:40:16"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:40:16"}
{"level":"info","message":"🔌 WebSocket connected: iGB2F48cukEAYweVAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:40:16"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:40:16"}
{"level":"info","message":"🔌 WebSocket connected: nFJ4ph5LiZZAui7lAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:40:17"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:40:17"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:40:18"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:40:18"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:40:18"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:40:18"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:40:18"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:40:18"}
{"level":"info","message":"🔌 WebSocket connected: j6DuHd8ARJq2Y5ToAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:40:18"}
{"level":"info","message":"🔌 WebSocket connected: wJGdLK6yU8eL9kjhAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:40:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:40:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:40:19"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:40:49"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:40:49"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:40:49"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:40:49"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:40:49"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:40:49"}
{"level":"info","message":"🔌 WebSocket connected: JrDxEBJIBuOkZGo0AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:40:49"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:40:49"}
{"level":"info","message":"🔌 WebSocket connected: srtFX4qpCFU1WD2CAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:40:51"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:40:51"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:40:56"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:40:56"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:40:56"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:40:56"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:40:56"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:40:56"}
{"level":"info","message":"🔌 WebSocket connected: MAZQpWPdPhSANGY5AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:40:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:40:57"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:40:58 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:40:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"154ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:40:58","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:40:58 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:40:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"286ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:40:58","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:40:58 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:40:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"256ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:40:58","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:40:58 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:40:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"277ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:40:58","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: Rohjmm5qxoWZNL3lAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:40:59"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:40:59"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:41:01"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:41:01"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:41:01"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:41:01"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:41:01"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:41:01"}
{"level":"info","message":"🔌 WebSocket connected: jFkx7xdFqD7H4mzzAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:41:01"}
{"level":"info","message":"🔌 WebSocket connected: erOShFK4gqb3NQH5AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:41:03"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:41:03"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:41:03"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:41:11 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:41:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"121ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:41:11","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:41:11 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:41:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"118ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:41:11","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:41:12","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:41:12"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:41:12 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:41:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"29ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:41:12","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"error","message":"Error checking answer: Cannot read properties of undefined (reading 'filter')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'filter')\n    at ExamService.checkAnswer (/home/ahmadi/Desktop/mock/src/services/examService.js:568:10)\n    at ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:503:32)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:41:23"}
{"level":"error","message":"Error checking answer: Cannot read properties of undefined (reading 'filter')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'filter')\n    at ExamService.checkAnswer (/home/ahmadi/Desktop/mock/src/services/examService.js:568:10)\n    at ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:503:32)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:41:23"}
{"level":"error","message":"Error checking answer: Cannot read properties of undefined (reading 'filter')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'filter')\n    at ExamService.checkAnswer (/home/ahmadi/Desktop/mock/src/services/examService.js:568:10)\n    at ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:503:32)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:41:23"}
{"level":"error","message":"Error checking answer: Cannot read properties of undefined (reading 'filter')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'filter')\n    at ExamService.checkAnswer (/home/ahmadi/Desktop/mock/src/services/examService.js:568:10)\n    at ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:503:32)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:41:23"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:41:23 +0000] \"POST /api/v1/attempts/cmdwsx3w60001i2qa3zoplfct/submit HTTP/1.1\" 200 646 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:41:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"170ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:41:23","url":"/cmdwsx3w60001i2qa3zoplfct/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:41:49"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:41:49"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:41:49"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:41:49"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:41:49"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:41:49"}
{"level":"info","message":"🔌 WebSocket connected: smeR4MXFBZFFSC0LAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:41:50"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:41:50"}
{"level":"info","message":"🔌 WebSocket connected: Vt14qgpXgvQtT9FhAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:41:50"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:41:50"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"🔌 WebSocket connected: Uw3U8LFV3z0BFn1mAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"🔌 WebSocket connected: mZTuBetm6srmXzNnAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:41:51"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:42:12"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:42:12"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:42:12"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:42:12"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:42:12"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:42:12"}
{"level":"info","message":"🔌 WebSocket connected: kLby5TlFnbB6thXKAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:42:13"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:42:13"}
{"level":"info","message":"🔌 WebSocket connected: MteE7jt5ZhHoVictAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:42:14"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:42:14"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"🔌 WebSocket connected: y4J0sf6jej9oPQw4AAAC","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"🔌 WebSocket connected: OUjK8b6Ec0oxurF1AAAD","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:42:19"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:42:25"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:42:25"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:42:25"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:42:25"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:42:25"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:42:25"}
{"level":"info","message":"🔌 WebSocket connected: kQ-wYkEHFMWXWS6YAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:42:26"}
{"level":"info","message":"🔌 WebSocket connected: 7UiMtr341cFiIlOEAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:42:26"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:42:26"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:42:26"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:42:26 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 200 36 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:42:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"159ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:42:26","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:42:26 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:42:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"179ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:42:26","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:42:26 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:42:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"175ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:42:26","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:42:26 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:42:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"172ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:42:26","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:43:02 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:43:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"64ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:43:02","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:43:02 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:43:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"76ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:43:02","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:43:02","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:43:02"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:43:02 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:43:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"26ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:43:02","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"clientVersion":"6.13.0","level":"error","message":"Complete exam attempt failed \nInvalid `prisma.certificate.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:528:48\n\n  525 // Create certificate if passed\n  526 let certificate = null;\n  527 if (isPassed) {\n→ 528   certificate = await prisma.certificate.create({\n          data: {\n            userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n            examId: \"exam_001\",\n            attemptId: \"cmdwszh4r0001i2lv0eckdnij\",\n            certificateNumber: \"CERT-1754293392162-w0xv5shag\",\n            issuedAt: new Date(\"2025-08-04T07:43:12.162Z\"),\n            expiresAt: new Date(\"2026-08-04T07:43:12.162Z\"),\n            isActive: true,\n            ~~~~~~~~\n        ?   id?: String,\n        ?   isRevoked?: Boolean,\n        ?   revokedAt?: DateTime | Null,\n        ?   revokedBy?: String | Null,\n        ?   revokedReason?: String | Null,\n        ?   pdfUrl?: String | Null,\n        ?   createdAt?: DateTime,\n        ?   updatedAt?: DateTime\n          }\n        })\n\nUnknown argument `isActive`. Available options are marked with ?.","name":"PrismaClientValidationError","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.certificate.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:528:48\n\n  525 // Create certificate if passed\n  526 let certificate = null;\n  527 if (isPassed) {\n→ 528   certificate = await prisma.certificate.create({\n          data: {\n            userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n            examId: \"exam_001\",\n            attemptId: \"cmdwszh4r0001i2lv0eckdnij\",\n            certificateNumber: \"CERT-1754293392162-w0xv5shag\",\n            issuedAt: new Date(\"2025-08-04T07:43:12.162Z\"),\n            expiresAt: new Date(\"2026-08-04T07:43:12.162Z\"),\n            isActive: true,\n            ~~~~~~~~\n        ?   id?: String,\n        ?   isRevoked?: Boolean,\n        ?   revokedAt?: DateTime | Null,\n        ?   revokedBy?: String | Null,\n        ?   revokedReason?: String | Null,\n        ?   pdfUrl?: String | Null,\n        ?   createdAt?: DateTime,\n        ?   updatedAt?: DateTime\n          }\n        })\n\nUnknown argument `isActive`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:528:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:43:12"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:43:12 +0000] \"POST /api/v1/attempts/cmdwszh4r0001i2lv0eckdnij/submit HTTP/1.1\" 200 120 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:43:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"107ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:43:12","url":"/cmdwszh4r0001i2lv0eckdnij/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:43:40"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:43:40"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:43:40"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:43:40"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:43:40"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:43:40"}
{"level":"info","message":"🔌 WebSocket connected: yC2PNW6y0tIRgF6WAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:43:40"}
{"level":"info","message":"🔌 WebSocket connected: Qv3_e2P4wcDe_rTXAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:43:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:43:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:43:41"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"🔌 WebSocket connected: VGmJ9SyD6EZP2keBAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"🔌 WebSocket connected: 0Z2P3ghqyq3G8PffAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:43:56"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:44:07"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:44:07"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:44:07"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:44:07"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:44:07"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:44:07"}
{"level":"info","message":"🔌 WebSocket connected: 43jmQtC1N3HTe3qeAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:44:08"}
{"level":"info","message":"🔌 WebSocket connected: PPh0sWY3oVfsC0fkAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:44:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:44:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:44:09"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:14 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"186ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:44:14","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:14 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"205ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:44:14","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:14 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"220ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:44:14","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:14 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"209ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:44:14","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:44:22"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:44:22"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:44:22"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:44:22"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:44:22"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:44:22"}
{"level":"info","message":"🔌 WebSocket connected: wE09NM46Z0HzNkDBAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:44:22"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:44:22"}
{"level":"info","message":"🔌 WebSocket connected: I4xT3boYxflI1gyTAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:44:23"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:44:23"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"🔌 WebSocket connected: wT2DMiokaS2YKDmsAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"🔌 WebSocket connected: 1OnIPHdpk2wX2sOBAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:44:34"}
{"level":"info","message":"🔌 WebSocket disconnected: wT2DMiokaS2YKDmsAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:44:47"}
{"level":"info","message":"🔌 WebSocket disconnected: 1OnIPHdpk2wX2sOBAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:44:47"}
{"level":"info","message":"🔌 WebSocket connected: lpfUpyi0JCpDuvQDAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:44:48"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:48 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"159ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:44:48","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:48 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"190ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:44:48","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:48 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"256ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:44:48","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:48 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"263ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:44:48","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: Guehsuix5wVirKkeAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:44:48"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:44:48"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:44:48"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:50 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:50"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"64ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:44:50","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:50 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:50"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"118ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:44:50","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:52 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:52"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"72ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:44:52","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:52 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:52"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"72ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:44:52","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:44:52","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:44:52"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:52 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:52"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"24ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:44:52","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"attemptId":"cmdwt1tok0001i2knojxwe10f","level":"info","message":"Starting completeExamAttempt","service":"mock-test-api","timestamp":"2025-08-04 03:44:59","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Calculating score","responsesCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:44:59","totalQuestions":4}
{"isCorrect":true,"level":"info","message":"Processing response","questionId":"cmdwrj8ve000ji2o88kb25pfs","selectedOptions":["cmdwrj8ve000li2o8tz2fk1k0"],"service":"mock-test-api","timestamp":"2025-08-04 03:44:59"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8va000di2o8hiyxw5p6","selectedOptions":["cmdwrj8va000gi2o8obeo4bo0"],"service":"mock-test-api","timestamp":"2025-08-04 03:44:59"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8v60007i2o8rapx4r7o","selectedOptions":["cmdwrj8v60008i2o86t6e94jf"],"service":"mock-test-api","timestamp":"2025-08-04 03:44:59"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8uy0001i2o8rvl30xhh","selectedOptions":["cmdwrj8uy0004i2o8ako0j080"],"service":"mock-test-api","timestamp":"2025-08-04 03:44:59"}
{"correctAnswers":1,"isPassed":true,"level":"info","message":"Score calculation completed","percentage":25,"service":"mock-test-api","timestamp":"2025-08-04 03:44:59","totalScore":1}
{"attemptId":"cmdwt1tok0001i2knojxwe10f","isPassed":true,"level":"info","message":"Updating attempt","obtainedMarks":1,"percentage":25,"service":"mock-test-api","timestamp":"2025-08-04 03:44:59","totalMarks":4}
{"attemptId":"cmdwt1tok0001i2knojxwe10f","level":"info","message":"Attempt updated successfully","service":"mock-test-api","timestamp":"2025-08-04 03:44:59"}
{"attemptId":"cmdwt1tok0001i2knojxwe10f","level":"info","message":"Creating certificate for passed attempt","service":"mock-test-api","timestamp":"2025-08-04 03:44:59"}
{"attemptId":"cmdwt1tok0001i2knojxwe10f","error":"\nInvalid `prisma.certificate.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:562:48\n\n  559 let certificate = null;\n  560 if (isPassed) {\n  561   logger.info('Creating certificate for passed attempt', { attemptId });\n→ 562   certificate = await prisma.certificate.create({\n          data: {\n            userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n            examId: \"exam_001\",\n            attemptId: \"cmdwt1tok0001i2knojxwe10f\",\n            certificateNumber: \"CERT-1754293499700-x627z4t8b\",\n            issuedAt: new Date(\"2025-08-04T07:44:59.700Z\"),\n            expiresAt: new Date(\"2026-08-04T07:44:59.700Z\"),\n            isActive: true,\n            ~~~~~~~~\n        ?   id?: String,\n        ?   isRevoked?: Boolean,\n        ?   revokedAt?: DateTime | Null,\n        ?   revokedBy?: String | Null,\n        ?   revokedReason?: String | Null,\n        ?   pdfUrl?: String | Null,\n        ?   createdAt?: DateTime,\n        ?   updatedAt?: DateTime\n          }\n        })\n\nUnknown argument `isActive`. Available options are marked with ?.","level":"error","message":"Complete exam attempt failed","service":"mock-test-api","stack":"PrismaClientValidationError: \nInvalid `prisma.certificate.create()` invocation in\n/home/ahmadi/Desktop/mock/src/services/examService.js:562:48\n\n  559 let certificate = null;\n  560 if (isPassed) {\n  561   logger.info('Creating certificate for passed attempt', { attemptId });\n→ 562   certificate = await prisma.certificate.create({\n          data: {\n            userId: \"cmdw3a9w30003i2jiq5yeaei0\",\n            examId: \"exam_001\",\n            attemptId: \"cmdwt1tok0001i2knojxwe10f\",\n            certificateNumber: \"CERT-1754293499700-x627z4t8b\",\n            issuedAt: new Date(\"2025-08-04T07:44:59.700Z\"),\n            expiresAt: new Date(\"2026-08-04T07:44:59.700Z\"),\n            isActive: true,\n            ~~~~~~~~\n        ?   id?: String,\n        ?   isRevoked?: Boolean,\n        ?   revokedAt?: DateTime | Null,\n        ?   revokedBy?: String | Null,\n        ?   revokedReason?: String | Null,\n        ?   pdfUrl?: String | Null,\n        ?   createdAt?: DateTime,\n        ?   updatedAt?: DateTime\n          }\n        })\n\nUnknown argument `isActive`. Available options are marked with ?.\n    at _n (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at ri.handleRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at ri.handleAndLogRequestError (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at ri.request (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/home/ahmadi/Desktop/mock/node_modules/@prisma/client/runtime/library.js:130:9812)\n    at async ExamService.completeExamAttempt (/home/ahmadi/Desktop/mock/src/services/examService.js:562:23)\n    at async /home/ahmadi/Desktop/mock/src/routes/attempts.js:84:20","timestamp":"2025-08-04 03:44:59","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:44:59 +0000] \"POST /api/v1/attempts/cmdwt1tok0001i2knojxwe10f/submit HTTP/1.1\" 200 120 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:44:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"150ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:44:59","url":"/cmdwt1tok0001i2knojxwe10f/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: lpfUpyi0JCpDuvQDAAAF","service":"mock-test-api","timestamp":"2025-08-04 03:45:18"}
{"level":"info","message":"🔌 WebSocket disconnected: Guehsuix5wVirKkeAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:45:18"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:45:19 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:45:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:45:19","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:45:19 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:45:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:45:19","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:45:19 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:45:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"41ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:45:19","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:45:19 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:45:19"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"42ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:45:19","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: eU_FDzbsopxmMXjWAAAK","service":"mock-test-api","timestamp":"2025-08-04 03:45:19"}
{"level":"info","message":"🔌 WebSocket connected: ONZePRH_PG5nBMIpAAAL","service":"mock-test-api","timestamp":"2025-08-04 03:45:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:45:19"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:45:19"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:46:12"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:46:12"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:46:12"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:46:12"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:46:12"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:46:12"}
{"level":"info","message":"🔌 WebSocket connected: 3LlkB1wHoZDmUVkHAAAB","service":"mock-test-api","timestamp":"2025-08-04 03:46:12"}
{"level":"info","message":"🔌 WebSocket connected: FMIufFtItzXb703oAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:46:13"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:46:13"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:46:13"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:28 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"146ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:46:28","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:28 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"133ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:46:28","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:28 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"204ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:46:28","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:28 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"214ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:46:28","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"SIGINT received, shutting down gracefully","service":"mock-test-api","timestamp":"2025-08-04 03:46:34"}
{"level":"info","message":"Database connection closed","service":"mock-test-api","timestamp":"2025-08-04 03:46:34"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 03:46:37"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 03:46:37"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 03:46:37"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 03:46:37"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 03:46:37"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 03:46:37"}
{"level":"info","message":"🔌 WebSocket connected: 8J7vwr34s8W-CA37AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:46:38"}
{"level":"info","message":"🔌 WebSocket connected: POluTYj3392KDObeAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:46:38"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:46:38"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:46:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:44 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"58ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:46:44","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:44 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"185ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:46:44","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:48 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"62ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:46:48","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:48 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"81ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:46:48","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:46:48","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:46:48"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:48 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:48"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"32ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:46:48","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"attemptId":"cmdwt4b630001i2jdvcch703r","level":"info","message":"Starting completeExamAttempt","service":"mock-test-api","timestamp":"2025-08-04 03:46:55","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Calculating score","responsesCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:46:55","totalQuestions":4}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8ve000ji2o88kb25pfs","selectedOptions":["cmdwrj8ve000ki2o8nqunl4y4"],"service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8va000di2o8hiyxw5p6","selectedOptions":["cmdwrj8va000hi2o8u0v1cug9"],"service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8v60007i2o8rapx4r7o","selectedOptions":["cmdwrj8v6000ai2o86fzhz3os"],"service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"isCorrect":true,"level":"info","message":"Processing response","questionId":"cmdwrj8uy0001i2o8rvl30xhh","selectedOptions":["cmdwrj8uy0003i2o86uk1nviy"],"service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"correctAnswers":1,"isPassed":true,"level":"info","message":"Score calculation completed","percentage":25,"service":"mock-test-api","timestamp":"2025-08-04 03:46:55","totalScore":1}
{"attemptId":"cmdwt4b630001i2jdvcch703r","isPassed":true,"level":"info","message":"Updating attempt","obtainedMarks":1,"percentage":25,"service":"mock-test-api","timestamp":"2025-08-04 03:46:55","totalMarks":4}
{"attemptId":"cmdwt4b630001i2jdvcch703r","level":"info","message":"Attempt updated successfully","service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"attemptId":"cmdwt4b630001i2jdvcch703r","level":"info","message":"Creating certificate for passed attempt","service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"certificateId":"cmdwt4h7e000bi2jdsbvhkak0","level":"info","message":"Certificate created","service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"attemptId":"cmdwt4b630001i2jdvcch703r","level":"info","message":"completeExamAttempt completed successfully","service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:46:55 +0000] \"POST /api/v1/attempts/cmdwt4b630001i2jdvcch703r/submit HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:46:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"153ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:46:55","url":"/cmdwt4b630001i2jdvcch703r/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:47:58 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:47:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"113ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:47:58","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:47:58 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:47:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"107ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:47:58","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:47:58 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:47:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"145ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:47:58","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:47:58 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:47:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"142ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:47:58","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:48:58 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:48:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:48:58","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:48:58 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:48:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:48:58","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:48:58 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:48:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:48:58","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:48:58 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:48:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:48:58","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: POluTYj3392KDObeAAAD","service":"mock-test-api","timestamp":"2025-08-04 03:49:40"}
{"level":"info","message":"🔌 WebSocket disconnected: 8J7vwr34s8W-CA37AAAB","service":"mock-test-api","timestamp":"2025-08-04 03:49:40"}
{"level":"info","message":"🔌 WebSocket connected: LEIea6X2utkcZKlGAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:49:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:41 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:49:41","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:41 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:49:41","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:41 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:49:41","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: onWqqAUaRDe250wzAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:49:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:41 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:49:41","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:49:41"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:49:41"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:44 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:49:44","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:44 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:49:44","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:45 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:49:45","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:45 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:49:45","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:49:45","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:49:45"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:45 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"25ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:49:45","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"attemptId":"cmdwt84bs000di2jdc80p1ho0","level":"info","message":"Starting completeExamAttempt","service":"mock-test-api","timestamp":"2025-08-04 03:49:54","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Calculating score","responsesCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:49:54","totalQuestions":4}
{"isCorrect":true,"level":"info","message":"Processing response","questionId":"cmdwrj8ve000ji2o88kb25pfs","selectedOptions":["cmdwrj8ve000li2o8tz2fk1k0"],"service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"isCorrect":true,"level":"info","message":"Processing response","questionId":"cmdwrj8va000di2o8hiyxw5p6","selectedOptions":["cmdwrj8va000fi2o8ivtfdx9y"],"service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8v60007i2o8rapx4r7o","selectedOptions":["cmdwrj8v6000ai2o86fzhz3os"],"service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"isCorrect":true,"level":"info","message":"Processing response","questionId":"cmdwrj8uy0001i2o8rvl30xhh","selectedOptions":["cmdwrj8uy0003i2o86uk1nviy"],"service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"correctAnswers":3,"isPassed":true,"level":"info","message":"Score calculation completed","percentage":75,"service":"mock-test-api","timestamp":"2025-08-04 03:49:54","totalScore":3}
{"attemptId":"cmdwt84bs000di2jdc80p1ho0","isPassed":true,"level":"info","message":"Updating attempt","obtainedMarks":3,"percentage":75,"service":"mock-test-api","timestamp":"2025-08-04 03:49:54","totalMarks":4}
{"attemptId":"cmdwt84bs000di2jdc80p1ho0","level":"info","message":"Attempt updated successfully","service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"attemptId":"cmdwt84bs000di2jdc80p1ho0","level":"info","message":"Creating certificate for passed attempt","service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"certificateId":"cmdwt8axq000ni2jdthkdtu92","level":"info","message":"Certificate created","service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"attemptId":"cmdwt84bs000di2jdc80p1ho0","level":"info","message":"completeExamAttempt completed successfully","service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:49:54 +0000] \"POST /api/v1/attempts/cmdwt84bs000di2jdc80p1ho0/submit HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:49:54"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"68ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:49:54","url":"/cmdwt84bs000di2jdc80p1ho0/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: onWqqAUaRDe250wzAAAH","service":"mock-test-api","timestamp":"2025-08-04 03:50:35"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-04 03:50:38","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:38 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"759ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:38","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:38 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"48ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:38","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: GIzf6kPgysmURz5CAAAJ","service":"mock-test-api","timestamp":"2025-08-04 03:50:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:38 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"128ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:38","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:39 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"165ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:50:39","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:39 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"242ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:39","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:50:39"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:40 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 200 127 \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:40","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: LEIea6X2utkcZKlGAAAG","service":"mock-test-api","timestamp":"2025-08-04 03:50:51"}
{"level":"info","message":"🔌 WebSocket disconnected: GIzf6kPgysmURz5CAAAJ","service":"mock-test-api","timestamp":"2025-08-04 03:50:51"}
{"level":"info","message":"🔌 WebSocket connected: xDPv3C97C-2qd_EcAAAM","service":"mock-test-api","timestamp":"2025-08-04 03:50:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:53 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:50:53","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: iE9A8wsM0rVf5FZuAAAN","service":"mock-test-api","timestamp":"2025-08-04 03:50:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:53 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"33ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:50:53","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:50:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:50:53"}
{"level":"info","message":"🔌 WebSocket disconnected: iE9A8wsM0rVf5FZuAAAN","service":"mock-test-api","timestamp":"2025-08-04 03:50:54"}
{"email":"student1@example.com","ip":"::1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 03:50:58","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:58 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"484ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:58","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:58 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:58","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket connected: 0vGAiVgcl3_y6gucAAAP","service":"mock-test-api","timestamp":"2025-08-04 03:50:58"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:58 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:50:58","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:58 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"38ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:58","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:50:58 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:50:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"38ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:50:58","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:50:58"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:51:58 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:51:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:51:58","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:51:58 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:51:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:51:58","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:51:58 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:51:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:51:58","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:51:58 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:51:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:51:58","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:52:23 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:52:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"56ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:52:23","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:52:23 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:52:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"75ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:52:23","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:52:25 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:52:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"46ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:52:25","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:52:25 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:52:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"52ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:52:25","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:52:25","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:52:25"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:52:25 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:52:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"20ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:52:25","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"attemptId":"cmdwtbjbk000xi2jdu5pvkru2","level":"info","message":"Starting completeExamAttempt","service":"mock-test-api","timestamp":"2025-08-04 03:52:31","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Calculating score","responsesCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:52:31","totalQuestions":4}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8ve000ji2o88kb25pfs","selectedOptions":["cmdwrj8ve000ki2o8nqunl4y4"],"service":"mock-test-api","timestamp":"2025-08-04 03:52:31"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8va000di2o8hiyxw5p6","selectedOptions":["cmdwrj8va000gi2o8obeo4bo0"],"service":"mock-test-api","timestamp":"2025-08-04 03:52:31"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8v60007i2o8rapx4r7o","selectedOptions":["cmdwrj8v60009i2o8y0zvurh2"],"service":"mock-test-api","timestamp":"2025-08-04 03:52:31"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8uy0001i2o8rvl30xhh","selectedOptions":["cmdwrj8uy0004i2o8ako0j080"],"service":"mock-test-api","timestamp":"2025-08-04 03:52:31"}
{"correctAnswers":0,"isPassed":false,"level":"info","message":"Score calculation completed","percentage":0,"service":"mock-test-api","timestamp":"2025-08-04 03:52:31","totalScore":0}
{"attemptId":"cmdwtbjbk000xi2jdu5pvkru2","isPassed":false,"level":"info","message":"Updating attempt","obtainedMarks":0,"percentage":0,"service":"mock-test-api","timestamp":"2025-08-04 03:52:31","totalMarks":4}
{"attemptId":"cmdwtbjbk000xi2jdu5pvkru2","level":"info","message":"Attempt updated successfully","service":"mock-test-api","timestamp":"2025-08-04 03:52:31"}
{"attemptId":"cmdwtbjbk000xi2jdu5pvkru2","level":"info","message":"completeExamAttempt completed successfully","service":"mock-test-api","timestamp":"2025-08-04 03:52:31"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:52:31 +0000] \"POST /api/v1/attempts/cmdwtbjbk000xi2jdu5pvkru2/submit HTTP/1.1\" 200 646 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:52:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"72ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:52:31","url":"/cmdwtbjbk000xi2jdu5pvkru2/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:52:33 +0000] \"GET /api/v1/attempts/cmdwtbjbk000xi2jdu5pvkru2 HTTP/1.1\" 200 - \"http://localhost:3000/exam/results/cmdwtbjbk000xi2jdu5pvkru2\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:52:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:52:33","url":"/cmdwtbjbk000xi2jdu5pvkru2","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:52:33 +0000] \"GET /api/v1/attempts/cmdwtbjbk000xi2jdu5pvkru2 HTTP/1.1\" 200 - \"http://localhost:3000/exam/results/cmdwtbjbk000xi2jdu5pvkru2\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:52:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:52:33","url":"/cmdwtbjbk000xi2jdu5pvkru2","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: 0vGAiVgcl3_y6gucAAAP","service":"mock-test-api","timestamp":"2025-08-04 03:54:04"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-04 03:54:08","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:54:08 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:54:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"391ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:54:08","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: LRmYHCDHGyU5RCQYAAAR","service":"mock-test-api","timestamp":"2025-08-04 03:54:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 03:54:09"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:54:09 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:54:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:54:09","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:54:09 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:54:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:54:09","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:54:09 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:54:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:54:09","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:54:56 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:54:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:54:56","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:55:26 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 200 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:55:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:55:26","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:56:05 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 200 127 \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:56:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"54ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:56:05","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:56:35 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:56:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:56:35","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:56:43 +0000] \"GET /api/v1/users?search= HTTP/1.1\" 200 - \"http://localhost:3000/admin/users\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:56:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"81ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:56:43","url":"/?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:56:56 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:56:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:56:56","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:56:56 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:56:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:56:56","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:56:56","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:56:56 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:56:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:56:56","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:56:58","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:56:58 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:56:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"6ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:56:58","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:57:00","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:57:00 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:57:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"5ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:57:00","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 03:57:05","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:57:05 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:57:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 03:57:05","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:57:18 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 200 447 \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:57:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"72ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:57:18","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:57:18 +0000] \"GET /api/v1/analytics/dashboard?includeCategories=true HTTP/1.1\" 200 - \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:57:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"77ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:57:18","url":"/dashboard?includeCategories=true","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:57:18 +0000] \"GET /api/v1/analytics/dashboard?period=month HTTP/1.1\" 200 - \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:57:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"90ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:57:18","url":"/dashboard?period=month","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:57:18 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 200 - \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:57:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"184ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:57:18","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: LRmYHCDHGyU5RCQYAAAR","service":"mock-test-api","timestamp":"2025-08-04 03:57:59"}
{"email":"student1@example.com","ip":"::1","level":"info","message":"User logged in successfully","role":"STUDENT","service":"mock-test-api","timestamp":"2025-08-04 03:58:03","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:58:03 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 418 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:58:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"399ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:58:03","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: VQUKhEWXhW0PirtDAAAT","service":"mock-test-api","timestamp":"2025-08-04 03:58:03"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 03:58:03"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:58:04 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:58:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:58:04","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:58:04 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:58:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"40ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:58:04","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:58:04 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:58:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"57ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:58:04","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:58:04 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:58:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"53ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:58:04","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:59:04 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:59:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"45ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:59:04","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:59:04 +0000] \"GET /api/v1/bookings HTTP/1.1\" 304 - \"http://localhost:3000/student/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:59:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"69ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 03:59:04","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:59:25 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:59:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"61ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:59:25","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:59:25 +0000] \"GET /api/v1/exams/exam_001 HTTP/1.1\" 200 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:59:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"67ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:59:25","url":"/exam_001","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examCategoryId":"cat_001","examId":"exam_001","level":"info","message":"Getting questions for exam category","service":"mock-test-api","timestamp":"2025-08-04 03:59:26","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"examId":"exam_001","level":"info","message":"Questions found","questionsCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:59:26"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:59:26 +0000] \"POST /api/v1/attempts/start HTTP/1.1\" 201 - \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:59:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"24ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 03:59:26","url":"/start","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"attemptId":"cmdwtkkcf001fi2jd7yf6wcj5","level":"info","message":"Starting completeExamAttempt","service":"mock-test-api","timestamp":"2025-08-04 03:59:40","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Calculating score","responsesCount":4,"service":"mock-test-api","timestamp":"2025-08-04 03:59:40","totalQuestions":4}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8ve000ji2o88kb25pfs","selectedOptions":["cmdwrj8ve000ki2o8nqunl4y4"],"service":"mock-test-api","timestamp":"2025-08-04 03:59:40"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8va000di2o8hiyxw5p6","selectedOptions":["cmdwrj8va000gi2o8obeo4bo0"],"service":"mock-test-api","timestamp":"2025-08-04 03:59:40"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8v60007i2o8rapx4r7o","selectedOptions":["cmdwrj8v60009i2o8y0zvurh2"],"service":"mock-test-api","timestamp":"2025-08-04 03:59:40"}
{"isCorrect":false,"level":"info","message":"Processing response","questionId":"cmdwrj8uy0001i2o8rvl30xhh","selectedOptions":["cmdwrj8uy0004i2o8ako0j080"],"service":"mock-test-api","timestamp":"2025-08-04 03:59:40"}
{"correctAnswers":0,"isPassed":false,"level":"info","message":"Score calculation completed","percentage":0,"service":"mock-test-api","timestamp":"2025-08-04 03:59:40","totalScore":0}
{"attemptId":"cmdwtkkcf001fi2jd7yf6wcj5","isPassed":false,"level":"info","message":"Updating attempt","obtainedMarks":0,"percentage":0,"service":"mock-test-api","timestamp":"2025-08-04 03:59:40","totalMarks":4}
{"attemptId":"cmdwtkkcf001fi2jd7yf6wcj5","level":"info","message":"Attempt updated successfully","service":"mock-test-api","timestamp":"2025-08-04 03:59:40"}
{"attemptId":"cmdwtkkcf001fi2jd7yf6wcj5","level":"info","message":"completeExamAttempt completed successfully","service":"mock-test-api","timestamp":"2025-08-04 03:59:40"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:59:40 +0000] \"POST /api/v1/attempts/cmdwtkkcf001fi2jd7yf6wcj5/submit HTTP/1.1\" 200 646 \"http://localhost:3000/exam/exam_001\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:59:40"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"190ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:59:40","url":"/cmdwtkkcf001fi2jd7yf6wcj5/submit","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:59:42 +0000] \"GET /api/v1/attempts/cmdwtkkcf001fi2jd7yf6wcj5 HTTP/1.1\" 200 - \"http://localhost:3000/exam/results/cmdwtkkcf001fi2jd7yf6wcj5\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:59:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:59:42","url":"/cmdwtkkcf001fi2jd7yf6wcj5","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:07:59:42 +0000] \"GET /api/v1/attempts/cmdwtkkcf001fi2jd7yf6wcj5 HTTP/1.1\" 200 - \"http://localhost:3000/exam/results/cmdwtkkcf001fi2jd7yf6wcj5\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 03:59:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 03:59:42","url":"/cmdwtkkcf001fi2jd7yf6wcj5","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: VQUKhEWXhW0PirtDAAAT","service":"mock-test-api","timestamp":"2025-08-04 04:01:44"}
{"level":"info","message":"🔌 WebSocket disconnected: xDPv3C97C-2qd_EcAAAM","service":"mock-test-api","timestamp":"2025-08-04 04:01:44"}
{"level":"info","message":"🔌 WebSocket connected: ceMjVBG6f-h9kI_HAAAV","service":"mock-test-api","timestamp":"2025-08-04 04:01:45"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 04:01:45"}
{"level":"info","message":"🔌 WebSocket connected: ewvAiPH-BJgmK_xeAAAX","service":"mock-test-api","timestamp":"2025-08-04 04:01:46"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:01:46"}
{"level":"info","message":"🔌 WebSocket disconnected: ewvAiPH-BJgmK_xeAAAX","service":"mock-test-api","timestamp":"2025-08-04 04:01:46"}
{"level":"info","message":"🔌 WebSocket disconnected: ceMjVBG6f-h9kI_HAAAV","service":"mock-test-api","timestamp":"2025-08-04 04:01:46"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:36:37"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:36:37"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:36:37"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:36:37"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:36:37"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:36:37"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:36:39"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:36:39"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:36:39"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:36:39"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:36:39"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:36:39"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:36:55"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:36:55"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:36:55"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:36:55"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:36:55"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:36:55"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:36:58"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:36:58"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:36:58"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:36:58"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:36:58"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:36:58"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:37:13"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:37:13"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:37:13"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:37:13"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:37:13"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:37:13"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:44:42"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:44:42"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:44:42"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:44:42"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:44:42"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:44:42"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:44:46"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:44:46"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:44:46"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:44:46"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:44:46"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:44:46"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:45:17"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:45:17"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:45:17"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:45:17"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:45:17"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:45:17"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:45:21"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:45:21"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:45:21"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:45:21"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:45:21"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:45:21"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:45:32"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:45:32"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:45:32"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:45:32"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:45:32"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:45:32"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:45:34"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:45:34"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:45:34"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:45:34"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:45:34"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:45:34"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:46:13"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:46:13"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:46:13"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:46:13"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:46:13"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:46:13"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:46:29"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:46:29"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:46:29"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:46:29"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:46:29"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:46:29"}
{"level":"info","message":"🔌 WebSocket connected: SY28tErtOhwjkwGDAAAC","service":"mock-test-api","timestamp":"2025-08-04 04:46:57"}
{"level":"info","message":"🔌 WebSocket connected: BuqJZsWS1U808I-OAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:46:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 04:46:57"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 04:46:57"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:46:57 +0000] \"GET /api/v1/exams/upcoming HTTP/1.1\" 304 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:46:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"231ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:46:57","url":"/upcoming","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:46:57 +0000] \"GET /api/v1/auth/profile HTTP/1.1\" 200 363 \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:46:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"277ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:46:57","url":"/profile","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:46:57 +0000] \"GET /api/v1/analytics/dashboard HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:46:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"268ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:46:57","url":"/dashboard","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:46:57 +0000] \"GET /api/v1/analytics/users/cmdw3a9w30003i2jiq5yeaei0 HTTP/1.1\" 200 - \"http://localhost:3000/student\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:46:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"277ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:46:57","url":"/users/cmdw3a9w30003i2jiq5yeaei0","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"🔌 WebSocket disconnected: BuqJZsWS1U808I-OAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:47:00"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-04 04:47:04","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:04 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"550ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:47:04","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: _wdUj8tO-OWBz6hhAAAF","service":"mock-test-api","timestamp":"2025-08-04 04:47:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:47:04"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:04 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"123ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:47:04","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:04 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"170ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:47:04","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:04 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"189ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:47:04","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:04 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"178ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:47:04","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"🔌 WebSocket connected: FZDU4l1Q7qVNT2t9AAAB","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"🔌 WebSocket connected: cQW0jo0Fym_iUEadAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"👤 User joined: cmdw3a9w30003i2jiq5yeaei0","service":"mock-test-api","timestamp":"2025-08-04 04:47:09"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:10 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 200 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"151ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:47:10","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"🔌 WebSocket connected: pVDQgCFGVOkp3AMuAAAC","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"🔌 WebSocket connected: dg_qcj4rmr823L0MAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:28 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"74ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:47:28","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:28 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"172ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:47:28","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:47:58 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:47:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:47:58","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:48:29 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:48:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:48:29","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:50:07"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:50:07"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:50:07"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:50:07"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:50:07"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:50:07"}
{"level":"info","message":"🔌 WebSocket connected: _3GJ-_g7ze1D61RmAAAC","service":"mock-test-api","timestamp":"2025-08-04 04:50:09"}
{"level":"info","message":"🔌 WebSocket connected: NHGSzCEgEm8XBVTcAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:50:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:50:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:50:09"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:09 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"49ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:50:09","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:09 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"145ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:50:09","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:50:13","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:13 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:50:13","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:14 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"114ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:50:14","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:14 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"134ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:50:14","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:50:14","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:14 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:50:14","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:50:16","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:16 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"4ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:50:16","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:50:21","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:21 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:50:21","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: NHGSzCEgEm8XBVTcAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:50:25"}
{"level":"info","message":"🔌 WebSocket disconnected: _3GJ-_g7ze1D61RmAAAC","service":"mock-test-api","timestamp":"2025-08-04 04:50:25"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:26 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:50:26","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:50:26","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:26 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:50:26","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:26 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"33ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:50:26","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: 5KWcZj-KWakvU3lAAAAG","service":"mock-test-api","timestamp":"2025-08-04 04:50:26"}
{"level":"info","message":"🔌 WebSocket connected: nxDR4ESfOJwtt3AwAAAH","service":"mock-test-api","timestamp":"2025-08-04 04:50:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:50:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:50:26"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:50:27","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:27 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:27"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:50:27","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:50:29","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:29 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:50:29","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:50:33","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:33 +0000] \"GET /api/v1/exams?limit=100 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:50:33","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:50:56 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:50:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:50:56","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:51:26 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:51:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:51:26","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"PUT","path":"/cmdwq9to90001i2d90yqbnju4","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 04:51:43","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:51:43 +0000] \"PUT /api/v1/bookings/cmdwq9to90001i2d90yqbnju4 HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:51:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"PUT","responseTime":"20ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 04:51:43","url":"/cmdwq9to90001i2d90yqbnju4","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:51:56 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:51:56"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:51:56","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:52:24"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:52:24"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:52:24"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:52:24"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:52:24"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:52:24"}
{"level":"info","message":"🔌 WebSocket connected: JrHiLbRNy0tuJZSaAAAB","service":"mock-test-api","timestamp":"2025-08-04 04:52:25"}
{"level":"info","message":"🔌 WebSocket connected: KXxecYJ3ZCqq2F2kAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:52:25"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:52:26 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:52:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"169ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:52:26","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:52:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:52:26"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:52:26 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:52:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"203ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:52:26","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:52:26 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:52:26"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"196ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:52:26","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: KXxecYJ3ZCqq2F2kAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:52:42"}
{"level":"info","message":"🔌 WebSocket disconnected: JrHiLbRNy0tuJZSaAAAB","service":"mock-test-api","timestamp":"2025-08-04 04:52:42"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:52:44 +0000] \"GET /api/v1/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:52:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:52:44","url":"/?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:52:44 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:52:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"46ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:52:44","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:52:44 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:52:44"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"35ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:52:44","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: GjxsrUe50XC8zWRwAAAG","service":"mock-test-api","timestamp":"2025-08-04 04:52:44"}
{"level":"info","message":"🔌 WebSocket connected: Fps1KTQEZUn2V3vcAAAH","service":"mock-test-api","timestamp":"2025-08-04 04:52:44"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:52:44"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:52:44"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:53:11"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:53:11"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:53:11"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:53:11"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:53:11"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:53:11"}
{"level":"info","message":"🔌 WebSocket connected: 8gklsX7cN5RSHieaAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:53:12"}
{"level":"info","message":"🔌 WebSocket connected: Gd8yY9JToUhP4KCUAAAE","service":"mock-test-api","timestamp":"2025-08-04 04:53:12"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:53:12"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:53:12"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:53:12 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:53:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"194ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:53:12","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:53:12 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:53:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"204ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 04:53:12","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:53:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:53:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"215ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:53:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: Gd8yY9JToUhP4KCUAAAE","service":"mock-test-api","timestamp":"2025-08-04 04:53:20"}
{"level":"info","message":"🔌 WebSocket disconnected: 8gklsX7cN5RSHieaAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:53:20"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:53:21 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:53:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:53:21","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:53:21 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:53:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:53:21","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:53:21 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:53:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:53:21","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: nW0H2dNUc28lzXdoAAAH","service":"mock-test-api","timestamp":"2025-08-04 04:53:21"}
{"level":"info","message":"🔌 WebSocket connected: uw6sNp1rUXBIySkSAAAI","service":"mock-test-api","timestamp":"2025-08-04 04:53:21"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:53:21"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:53:21"}
{"level":"info","message":"::1 - - [04/Aug/2025:08:53:51 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 04:53:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 04:53:51","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:57:50"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:57:50"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:57:50"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:57:50"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:57:50"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:57:50"}
{"level":"info","message":"🔌 WebSocket connected: lZ3iQl_l8NeA7j5NAAAB","service":"mock-test-api","timestamp":"2025-08-04 04:57:51"}
{"level":"info","message":"🔌 WebSocket connected: iYJN8Z78qPAIrarRAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:57:52"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:57:52"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:57:52"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 04:57:54"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 04:57:54"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 04:57:54"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 04:57:54"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 04:57:54"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 04:57:54"}
{"level":"info","message":"🔌 WebSocket connected: MqPrQUgJOA18TjrXAAAB","service":"mock-test-api","timestamp":"2025-08-04 04:57:54"}
{"level":"info","message":"🔌 WebSocket connected: IxGF9lXKNsJRU79MAAAD","service":"mock-test-api","timestamp":"2025-08-04 04:57:55"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:57:55"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 04:57:55"}
{"level":"info","message":"🔌 WebSocket disconnected: MqPrQUgJOA18TjrXAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:00:27"}
{"level":"info","message":"🔌 WebSocket disconnected: IxGF9lXKNsJRU79MAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:00:27"}
{"level":"info","message":"🔌 WebSocket connected: -_gNzn2kwIJQl9KXAAAF","service":"mock-test-api","timestamp":"2025-08-04 05:00:28"}
{"level":"info","message":"🔌 WebSocket connected: zljStv4j0eYwDTo7AAAH","service":"mock-test-api","timestamp":"2025-08-04 05:00:28"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:00:28"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:00:28"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:00:28 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:00:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"193ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:00:28","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:00:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:00:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"236ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:00:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:00:28 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:00:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"219ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:00:28","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:00:46"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:00:46"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:00:46"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:00:46"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:00:46"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:00:46"}
{"level":"info","message":"🔌 WebSocket connected: Y4BHbygh8avpplQaAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:00:47"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:00:47"}
{"level":"info","message":"🔌 WebSocket connected: TfanGUjYgIwXpgiUAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:00:47"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:00:47"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:01:24 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:01:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"136ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:01:24","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:01:55 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:01:55"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:01:55","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:02:41"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:02:41"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:02:41"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:02:41"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:02:41"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:02:41"}
{"level":"info","message":"🔌 WebSocket connected: v2GQ4axiS003raBWAAAC","service":"mock-test-api","timestamp":"2025-08-04 05:02:42"}
{"level":"info","message":"🔌 WebSocket connected: CovvttqcnQvp5E7JAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:02:42"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:02:42"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:02:42"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:02:42 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:02:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"192ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:02:42","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:02:42 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:02:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"225ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:02:42","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:02:42 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:02:42"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"171ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:02:42","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: v2GQ4axiS003raBWAAAC","service":"mock-test-api","timestamp":"2025-08-04 05:03:32"}
{"level":"info","message":"🔌 WebSocket disconnected: CovvttqcnQvp5E7JAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:03:32"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:03:34 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:03:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"32ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:03:34","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:03:34 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:03:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"45ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:03:34","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:03:34 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:03:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:03:34","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: 58eW2LjDrsr0iPndAAAG","service":"mock-test-api","timestamp":"2025-08-04 05:03:34"}
{"level":"info","message":"🔌 WebSocket connected: oorSGifWLcTgoDC-AAAH","service":"mock-test-api","timestamp":"2025-08-04 05:03:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:03:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:03:34"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:03:59 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 400 212 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:03:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"62ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 05:03:59","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:04:00 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 400 212 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:04:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"11ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 05:04:00","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:04:04 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:04:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:04:04","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:04:15"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:04:15"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:04:15"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:04:15"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:04:15"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:04:15"}
{"level":"info","message":"🔌 WebSocket connected: nfVZP1SQsSfSb-TfAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:04:15"}
{"level":"info","message":"🔌 WebSocket connected: eL9XqjClEVNavyNBAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:04:17"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:04:17"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:04:17"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:04:25"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:04:25"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:04:25"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:04:25"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:04:25"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:04:25"}
{"level":"info","message":"🔌 WebSocket connected: lqrOAT4JMMk9orYMAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:04:26"}
{"level":"info","message":"🔌 WebSocket connected: oqsTrZ55UTXttlqhAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:04:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:04:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:04:26"}
{"level":"error","message":"Exam booking validation error next is not a function","service":"mock-test-api","stack":"TypeError: next is not a function\n    at validateExamBooking (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:43:5)\n    at createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:547:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:159:5\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)","timestamp":"2025-08-04 05:04:46"}
{"level":"error","message":"Admin create booking failed Cannot read properties of undefined (reading 'status')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'status')\n    at validateExamBooking (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:46:9)\n    at createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:547:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:159:5\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)","timestamp":"2025-08-04 05:04:46"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:04:46 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 500 64 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:04:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"134ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 05:04:46","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"error","message":"Exam booking validation error next is not a function","service":"mock-test-api","stack":"TypeError: next is not a function\n    at validateExamBooking (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:43:5)\n    at createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:547:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:159:5\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)","timestamp":"2025-08-04 05:04:47"}
{"level":"error","message":"Admin create booking failed Cannot read properties of undefined (reading 'status')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'status')\n    at validateExamBooking (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:46:9)\n    at createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:547:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:159:5\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)","timestamp":"2025-08-04 05:04:47"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:04:47 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 500 64 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:04:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"13ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 05:04:47","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:04:48"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:04:48"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:04:48"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:04:48"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:04:48"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:04:48"}
{"level":"info","message":"🔌 WebSocket connected: ItlMWee-pnNPCTVkAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:04:49"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:04:49"}
{"level":"info","message":"🔌 WebSocket connected: 0v9l6apYnZQ2jyUGAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:04:50"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:04:50"}
{"level":"error","message":"Exam booking validation error next is not a function","service":"mock-test-api","stack":"TypeError: next is not a function\n    at validateExamBooking (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:43:5)\n    at createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:547:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:159:5\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)","timestamp":"2025-08-04 05:05:03"}
{"level":"error","message":"Admin create booking failed Cannot read properties of undefined (reading 'status')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'status')\n    at validateExamBooking (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:46:9)\n    at createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:547:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:159:5\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)","timestamp":"2025-08-04 05:05:03"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:05:03 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 500 64 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:05:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"95ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 05:05:03","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"error","message":"Exam booking validation error next is not a function","service":"mock-test-api","stack":"TypeError: next is not a function\n    at validateExamBooking (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:43:5)\n    at createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:547:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:159:5\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)","timestamp":"2025-08-04 05:05:04"}
{"level":"error","message":"Admin create booking failed Cannot read properties of undefined (reading 'status')","service":"mock-test-api","stack":"TypeError: Cannot read properties of undefined (reading 'status')\n    at validateExamBooking (/home/ahmadi/Desktop/mock/src/validators/examBookingValidator.js:46:9)\n    at createBookingForUser (/home/ahmadi/Desktop/mock/src/controllers/examBookingController.js:547:32)\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at /home/ahmadi/Desktop/mock/src/middleware/auth.js:159:5\n    at newFn (/home/ahmadi/Desktop/mock/node_modules/express-async-errors/index.js:16:20)\n    at Layer.handle [as handle_request] (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/layer.js:95:5)\n    at next (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/home/ahmadi/Desktop/mock/node_modules/express/lib/router/route.js:119:3)","timestamp":"2025-08-04 05:05:04"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:05:04 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 500 64 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:05:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"13ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 05:05:04","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:05:04 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:05:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"128ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:05:04","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:05:34 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:05:34"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"50ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:05:34","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:05:45"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:05:45"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:05:45"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:05:45"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:05:45"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:05:45"}
{"level":"info","message":"🔌 WebSocket connected: 6SHU1J2X0v49kje8AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:05:45"}
{"level":"info","message":"🔌 WebSocket connected: 3SOloXteHd3bXW5hAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:05:46"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:05:46"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:05:46"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:06:00"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:06:00"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:06:00"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:06:00"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:06:00"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:06:00"}
{"level":"info","message":"🔌 WebSocket connected: tbTTxpp4VWZ43FkVAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:06:01"}
{"level":"info","message":"🔌 WebSocket connected: lecDSgrgQAWiVujRAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:06:01"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:06:01"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:06:01"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:06:04 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:06:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"126ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:06:04","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"algorithm":"weighted_random","examCategoryId":"cat_005","examId":"exam_004","level":"info","message":"Generating random questions","overlapPercentage":10,"questionCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:06:07","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"availableCount":0,"examCategoryId":"cat_005","level":"info","message":"Available questions found","requiredCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:06:08"}
{"examId":"exam_004","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:06:08","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:06:08 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 201 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:06:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"215ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 05:06:08","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:06:08 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:06:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"33ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:06:08","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:06:08 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:06:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"161ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:06:08","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:06:08 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:06:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"156ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:06:08","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:06:38 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:06:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:06:38","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:06:56"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:06:56"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:06:56"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:06:56"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:06:56"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:06:56"}
{"level":"info","message":"🔌 WebSocket connected: PzXvc_jbnwPNDxlOAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:06:57"}
{"level":"info","message":"🔌 WebSocket connected: zvjXtO-KqiPpCpIHAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:06:57"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:06:57"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:06:57"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:07:08 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:07:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"142ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:07:08","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:08:56"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:08:56"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:08:56"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:08:56"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:08:56"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:08:56"}
{"level":"info","message":"🔌 WebSocket connected: O4H7tMRv4bidOYYsAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:08:56"}
{"level":"info","message":"🔌 WebSocket connected: gllm8XzshPMYOi6vAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:08:57"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:08:57"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:08:57"}
{"algorithm":"weighted_random","examCategoryId":"cat_005","examId":"exam_004","level":"info","message":"Generating random questions","overlapPercentage":10,"questionCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:09:06","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"availableCount":0,"examCategoryId":"cat_005","level":"info","message":"Available questions found","requiredCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:09:06"}
{"examId":"exam_004","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:09:06","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Bill generated for booking cmdww25kv0001i2gmsfej27gi: BILL-1754298546546-g1n3m3h40","service":"mock-test-api","timestamp":"2025-08-04 05:09:06"}
{"bookingId":"cmdww25kv0001i2gmsfej27gi","email":"student1@example.com","examTitle":"Computer Science Introduction","level":"info","message":"Sending booking confirmation notification","service":"mock-test-api","timestamp":"2025-08-04 05:09:06"}
{"action":"ADMIN_BOOKING_CREATED","adminId":"cmdw3a9vs0000i2jijo7g0t4t","bookingId":"cmdww25kv0001i2gmsfej27gi","examId":"exam_004","level":"info","message":"Exam Action","questionCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:09:06","totalAmount":"12.99","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:09:06 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 201 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:09:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"402ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 05:09:06","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:09:06 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:09:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"68ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:09:06","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:09:06 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:09:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"138ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:09:06","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:09:06 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:09:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"131ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:09:06","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:09:36 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:09:36"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"35ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:09:36","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:10:06 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:10:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"38ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:10:06","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:10:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:10:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:10:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:10:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:10:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:10:35"}
{"level":"info","message":"🔌 WebSocket connected: lxBKZjpM-PMARsfyAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:10:36"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:10:36"}
{"level":"info","message":"🔌 WebSocket connected: B1vaVwWSEj3VJqh8AAAD","service":"mock-test-api","timestamp":"2025-08-04 05:10:36"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:10:36"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:10:37 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:10:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"178ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:10:37","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:10:38"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:10:38"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:10:38"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:10:38"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:10:38"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:10:38"}
{"level":"info","message":"🔌 WebSocket connected: AWD0ackVAI5_58n7AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:10:39"}
{"level":"info","message":"🔌 WebSocket connected: -KT3ZyGHUsFmhCgVAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:10:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:10:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:10:39"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:11:07 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:11:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"161ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:11:07","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"🔌 WebSocket connected: JMjgm1jW5Ni90_OXAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"🔌 WebSocket connected: dyNhd_-bOFjT5MAjAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:11:16"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:11:30"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:11:30"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:11:30"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:11:30"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:11:30"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:11:30"}
{"level":"info","message":"🔌 WebSocket connected: z-ODdOIz0HBFpEbmAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:11:31"}
{"level":"info","message":"🔌 WebSocket disconnected: z-ODdOIz0HBFpEbmAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:11:31"}
{"level":"info","message":"🔌 WebSocket connected: Qx4MTfgGFvISHIZHAAAE","service":"mock-test-api","timestamp":"2025-08-04 05:11:32"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:11:32 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:11:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"166ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:11:32","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: Ie1ycOweNk7mUnlBAAAG","service":"mock-test-api","timestamp":"2025-08-04 05:11:32"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:11:32"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:11:32"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:11:32 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:11:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"192ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:11:32","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:11:32 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:11:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"217ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:11:32","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:12:02 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:12:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:12:02","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:12:53 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:12:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:12:53","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:13:23 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:13:23"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:13:23","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:13:53 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:13:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"36ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:13:53","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:14:09"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:14:09"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:14:09"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:14:09"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:14:09"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:14:09"}
{"level":"info","message":"🔌 WebSocket connected: 0dAG9J4x33MVUirfAAAC","service":"mock-test-api","timestamp":"2025-08-04 05:14:10"}
{"level":"info","message":"🔌 WebSocket connected: 2uli8aOvXLLn60PTAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:14:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:14:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:14:10"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:14:10 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:14:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"295ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:14:10","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:14:10 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:14:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"284ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:14:10","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:14:10 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:14:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"281ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:14:10","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:14:41 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:14:41"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"46ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:14:41","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 0dAG9J4x33MVUirfAAAC","service":"mock-test-api","timestamp":"2025-08-04 05:15:02"}
{"level":"info","message":"🔌 WebSocket disconnected: 2uli8aOvXLLn60PTAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:15:02"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:15:04 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:15:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:15:04","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:15:04 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:15:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:15:04","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:15:04 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:15:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:15:04","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: Yvr92GtXQq7XOIwEAAAG","service":"mock-test-api","timestamp":"2025-08-04 05:15:04"}
{"level":"info","message":"🔌 WebSocket connected: b5eo1vwcM5kMhf8fAAAH","service":"mock-test-api","timestamp":"2025-08-04 05:15:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:15:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:15:04"}
{"algorithm":"weighted_random","examCategoryId":"cat_005","examId":"exam_004","level":"info","message":"Generating random questions","overlapPercentage":10,"questionCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:15:31","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"availableCount":0,"examCategoryId":"cat_005","level":"info","message":"Available questions found","requiredCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:15:31"}
{"examId":"exam_004","level":"info","message":"Question generation completed","overlapCount":0,"selectedCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:15:31","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"Bill generated for booking cmdwwaewe0001i2d48ik65q8l: BILL-1754298931902-6wrc6fx4t","service":"mock-test-api","timestamp":"2025-08-04 05:15:31"}
{"bookingId":"cmdwwaewe0001i2d48ik65q8l","email":"student1@example.com","examTitle":"Computer Science Introduction","level":"info","message":"Sending booking confirmation notification","service":"mock-test-api","timestamp":"2025-08-04 05:15:31"}
{"action":"ADMIN_BOOKING_CREATED","adminId":"cmdw3a9vs0000i2jijo7g0t4t","bookingId":"cmdwwaewe0001i2d48ik65q8l","examId":"exam_004","level":"info","message":"Exam Action","questionCount":0,"service":"mock-test-api","timestamp":"2025-08-04 05:15:31","totalAmount":"12.99","userId":"cmdw3a9w30003i2jiq5yeaei0"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:15:31 +0000] \"POST /api/v1/bookings/admin/create HTTP/1.1\" 201 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:15:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"311ms","service":"mock-test-api","statusCode":201,"timestamp":"2025-08-04 05:15:31","url":"/admin/create","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:15:31 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:15:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"34ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:15:31","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:15:31 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:15:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:15:31","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:15:31 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:15:31"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"36ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:15:31","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"POST","path":"/admin/process-on-print/cmdwwaewe0001i2d48ik65q8l","requiredRoles":[["SUPER_ADMIN","ADMIN"]],"service":"mock-test-api","timestamp":"2025-08-04 05:15:33","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:15:33 +0000] \"POST /api/v1/payments/admin/process-on-print/cmdwwaewe0001i2d48ik65q8l HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:15:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"35ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:15:33","url":"/admin/process-on-print/cmdwwaewe0001i2d48ik65q8l","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:16:02 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:16:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:16:02","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:16:30"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:16:30"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:16:30"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:16:30"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:16:30"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:16:30"}
{"level":"info","message":"🔌 WebSocket connected: cAMryUJANVq9cYCqAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:16:30"}
{"level":"info","message":"🔌 WebSocket connected: ioLBjX7dklktvrUNAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:16:31"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:16:31"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:16:31"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:16:33 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:16:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"265ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:16:33","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:16:33"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:16:33"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:16:33"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:16:33"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:16:33"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:16:33"}
{"level":"info","message":"🔌 WebSocket connected: Uc-rdXw3PhlmA2_eAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:16:34"}
{"level":"info","message":"🔌 WebSocket connected: BGFD-_X_x2DhYE_vAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:16:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:16:34"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:16:34"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:17:03 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:17:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"126ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:17:03","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:17:05"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:17:05"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:17:05"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:17:05"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:17:05"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:17:05"}
{"level":"info","message":"🔌 WebSocket connected: M-s2EJkjhP5rLO8JAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:17:06"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:17:06"}
{"level":"info","message":"🔌 WebSocket connected: joUmuMUf691s37EAAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:17:08"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:17:08"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:17:33 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:17:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"158ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:17:33","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"🔌 WebSocket connected: 4A2pzTXD7nhZzuTNAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"🔌 WebSocket connected: x8P4pMsa9FNxYimNAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:17:42"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:18:03 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:18:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"199ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:18:03","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:18:35 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:18:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"25ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:18:35","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:18:47"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:18:47"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:18:47"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:18:47"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:18:47"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:18:47"}
{"level":"info","message":"🔌 WebSocket connected: UJKsd6ipiUczuz6GAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:18:47"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:18:47"}
{"level":"info","message":"🔌 WebSocket connected: oIrhDCC_D4ybQq5YAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:18:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:18:48"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:18:58"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:18:58"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:18:58"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:18:58"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:18:58"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:18:58"}
{"level":"info","message":"🔌 WebSocket connected: jHNWjX6LoL7nTt13AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:18:59"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:18:59"}
{"level":"info","message":"🔌 WebSocket connected: zEIQOFNXq0fIMlFEAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:18:59"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:18:59"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:19:05 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:19:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"191ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:19:05","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:19:09"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:19:09"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:19:09"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:19:09"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:19:09"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:19:09"}
{"level":"info","message":"🔌 WebSocket connected: 7Kw7XsnDHUIHMdkqAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:19:10"}
{"level":"error","message":"Process payment on print failed notificationService.sendPaymentConfirmation is not a function","service":"mock-test-api","stack":"TypeError: notificationService.sendPaymentConfirmation is not a function\n    at processPaymentOnPrint (/home/ahmadi/Desktop/mock/src/controllers/paymentController.js:255:33)","timestamp":"2025-08-04 05:19:11"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:19:11 +0000] \"POST /api/v1/payments/admin/process-on-print/cmdwwaewe0001i2d48ik65q8l HTTP/1.1\" 500 65 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:19:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"162ms","service":"mock-test-api","statusCode":500,"timestamp":"2025-08-04 05:19:11","url":"/admin/process-on-print/cmdwwaewe0001i2d48ik65q8l","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: irx_QnwAOcwcS8BrAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:19:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:19:11"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:19:11"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:19:16 +0000] \"POST /api/v1/payments/admin/process-on-print/cmdwwaewe0001i2d48ik65q8l HTTP/1.1\" 400 79 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:19:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"16ms","service":"mock-test-api","statusCode":400,"timestamp":"2025-08-04 05:19:16","url":"/admin/process-on-print/cmdwwaewe0001i2d48ik65q8l","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: 7Kw7XsnDHUIHMdkqAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:19:31"}
{"level":"info","message":"🔌 WebSocket disconnected: irx_QnwAOcwcS8BrAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:19:31"}
{"level":"info","message":"🔌 WebSocket connected: 7O6ItsermXryf6YaAAAG","service":"mock-test-api","timestamp":"2025-08-04 05:19:32"}
{"level":"info","message":"🔌 WebSocket connected: rI2IcE61SijZQcmZAAAH","service":"mock-test-api","timestamp":"2025-08-04 05:19:32"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:19:32 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:19:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"130ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:19:32","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:19:32 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:19:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"132ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:19:32","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:19:32 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:19:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"170ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:19:32","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:19:32"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:19:32"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:20:02 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:20:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:20:02","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:20:32 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:20:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:20:32","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:20:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:20:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:20:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:20:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:20:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:20:35"}
{"level":"info","message":"🔌 WebSocket connected: JCvTt9RRCqEjLdV6AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:20:35"}
{"level":"info","message":"🔌 WebSocket connected: F-aYps7y5_Y0QnzuAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:20:38"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:20:38"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:20:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:21:02 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:21:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"152ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:21:02","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:21:32"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:21:32"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:21:32"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:21:32"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:21:32"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:21:32"}
{"level":"info","message":"🔌 WebSocket connected: RwjHEhrHJeNG3-5SAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:21:32"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:21:32 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:21:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"175ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:21:32","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket connected: b_uZTAhQBpDL11jnAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:21:33"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:21:33"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:21:33"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:21:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:21:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:21:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:21:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:21:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:21:35"}
{"level":"info","message":"🔌 WebSocket connected: DzRcPukRV02N-JosAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:21:36"}
{"level":"info","message":"🔌 WebSocket connected: jUehA5LM5Xz2Pol8AAAD","service":"mock-test-api","timestamp":"2025-08-04 05:21:38"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:21:38"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:21:38"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:22:03 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:22:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"137ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:22:03","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:22:33 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:22:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"29ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:22:33","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:23:03 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:23:03"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:23:03","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:23:08"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:23:08"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:23:08"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:23:08"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:23:08"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:23:08"}
{"level":"info","message":"🔌 WebSocket connected: dnLdbST46kkmmLq_AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:23:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:23:09"}
{"level":"info","message":"🔌 WebSocket connected: NkSudauBDOM1yFXyAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:23:09"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:23:09"}
{"level":"info","message":"🔌 WebSocket disconnected: dnLdbST46kkmmLq_AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:23:27"}
{"level":"info","message":"🔌 WebSocket disconnected: NkSudauBDOM1yFXyAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:23:27"}
{"level":"info","message":"🔌 WebSocket connected: YYmEfegp66pZ0jIAAAAF","service":"mock-test-api","timestamp":"2025-08-04 05:23:28"}
{"level":"info","message":"🔌 WebSocket connected: 57z-uJyds5oDe2tEAAAH","service":"mock-test-api","timestamp":"2025-08-04 05:23:29"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:23:29"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:23:29"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:23:29 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:23:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"285ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:23:29","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:23:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:23:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"320ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:23:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:23:29 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:23:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"317ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:23:29","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:23:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:23:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:23:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:24:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:24:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:24:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:25:45 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:25:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:25:45","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:26:57 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:26:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:26:57","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:27:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:27:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:27:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:27:58 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:27:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"16ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:27:58","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:27:59"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:27:59"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:27:59"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:27:59"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:27:59"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:27:59"}
{"level":"info","message":"🔌 WebSocket connected: r7PdaOYC5O2OMRDuAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:28:00"}
{"level":"info","message":"🔌 WebSocket connected: ApkU5Pj3n0c7Dl7dAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:28:01"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:28:01"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:28:01"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:28:11"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:28:11"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:28:11"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:28:11"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:28:11"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:28:11"}
{"level":"info","message":"🔌 WebSocket connected: ziGE9s75aBAx6dFoAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:28:12"}
{"level":"info","message":"🔌 WebSocket connected: 4FpucdQJuJmBxcUqAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:28:13"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:28:13"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:28:13"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:28:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:28:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"174ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:28:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:28:49"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:28:49"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:28:49"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:28:49"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:28:49"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:28:49"}
{"level":"info","message":"🔌 WebSocket connected: h8qx3U84POcsKt1EAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:28:50"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:28:50"}
{"level":"info","message":"🔌 WebSocket connected: WViZj8XWsgKwdvLpAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:28:51"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:28:51"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:28:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:28:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"195ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:28:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:29:01"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:01"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:29:01"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:29:01"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:01"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:29:01"}
{"level":"info","message":"🔌 WebSocket connected: ah9bwlAz3c4GVIEdAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:29:02"}
{"level":"info","message":"🔌 WebSocket connected: X20XTJyhW7jKw3HnAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:29:02"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:02"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:02"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:29:13"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"🔌 WebSocket connected: hDSqmBDIRFnPA5XHAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"🔌 WebSocket connected: b5xVzTLqoD4cfNkOAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:14"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:29:24"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:24"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:29:24"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:29:24"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:24"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:29:24"}
{"level":"info","message":"🔌 WebSocket connected: 4o7Qty_0urJ924vLAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:29:25"}
{"level":"info","message":"🔌 WebSocket connected: 0MTZLjwyuXiQqopJAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:29:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:26"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:26"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:29:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:29:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"116ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:29:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:29:36"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:36"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:29:36"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:29:36"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:36"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:29:36"}
{"level":"info","message":"🔌 WebSocket connected: BRZt_KH6U_38k3AHAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:29:37"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:37"}
{"level":"info","message":"🔌 WebSocket connected: lldbG7h5wb_j3balAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:29:38"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:38"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"🔌 WebSocket connected: 5USYi6o3BpiP-QiNAAAC","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"🔌 WebSocket connected: -hRZW_2LaEywdMqbAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:29:48"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:29:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:29:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"163ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:29:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:30:24"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:30:24"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:30:24"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:30:24"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:30:24"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:30:24"}
{"level":"info","message":"🔌 WebSocket connected: q1qe5rfLOW34aYqYAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:30:24"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:30:24"}
{"level":"info","message":"🔌 WebSocket connected: aXXLUtShmcw96V6uAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:30:25"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:30:25"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:30:29","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:30:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:30:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"83ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:30:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:30:30","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:30:30 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:30:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:30:30","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:30:32","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:30:32 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:30:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:30:32","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:30:37"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:30:37"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:30:37"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:30:37"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:30:37"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:30:37"}
{"level":"info","message":"🔌 WebSocket connected: CFhgq3AOvgVAnnn-AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:30:38"}
{"level":"info","message":"🔌 WebSocket connected: Fbt23gWygspAFIgRAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:30:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:30:39"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:30:39"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:30:52"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:30:52"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:30:52"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:30:52"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:30:52"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:30:52"}
{"level":"info","message":"🔌 WebSocket connected: n822smH8hOhmlQZLAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:30:53"}
{"level":"info","message":"🔌 WebSocket connected: urlY7M77K00LD4ZgAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:30:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:30:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:30:53"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:31:06","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:31:06 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:31:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"68ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:31:06","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:31:07","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:31:07 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:31:07"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:31:07","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:31:09","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:31:09 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:31:09"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:31:09","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:31:13","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:31:13 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:31:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:31:13","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:31:43","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:31:43 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:31:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:31:43","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:31:45","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:31:45 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:31:45"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:31:45","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:31:47","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:31:47 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:31:47"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:31:47","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:31:51","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:31:51 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:31:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"15ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:31:51","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:32:21","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:32:21 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:32:21"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:32:21","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:32:22","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:32:22 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:32:22"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:32:22","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:32:24","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:32:24 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:32:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:32:24","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:32:28","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:32:28 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:32:28"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:32:28","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:32:59","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:32:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:32:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:32:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:33:00","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:33:00 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:33:00"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:33:00","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:33:02","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:33:02 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:33:02"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:33:02","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:33:06","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:33:06 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:33:06"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:33:06","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:33:36","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:33:36 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:33:36"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:33:36","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:33:37","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:33:37 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:33:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"39ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:33:37","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:33:39","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:33:39 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:33:39"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:33:39","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:33:43","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:33:43 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:33:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:33:43","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:34:13","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:34:13 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:34:13"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:34:13","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:34:14","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:34:14 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:34:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:34:14","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:34:16","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:34:16 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:34:16"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:34:16","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:34:20","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:34:20 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:34:20"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:34:20","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:34:46"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:34:46"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:34:46"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:34:46"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:34:46"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:34:46"}
{"level":"info","message":"🔌 WebSocket connected: NpHLKgUV66XmyTjTAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:34:46"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:34:46"}
{"level":"info","message":"🔌 WebSocket connected: x-vsSlxedfiHIAoeAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:34:47"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:34:47"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:34:50","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:34:50 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:34:50"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"57ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:34:50","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:34:51","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:34:51 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:34:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:34:51","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:34:53","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:34:53 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:34:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"23ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:34:53","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:34:57","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:34:57 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:34:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:34:57","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:35:29","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:29 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:29"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:35:29","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:35:30","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:30 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:35:30","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:35:32","userId":"cmdw3a9vs0000i2jijo7g0t4t","userRole":"SUPER_ADMIN"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:32 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:32"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"12ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:35:32","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: NpHLKgUV66XmyTjTAAAB","service":"mock-test-api","timestamp":"2025-08-04 05:35:33"}
{"email":"moderator@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"MODERATOR","service":"mock-test-api","timestamp":"2025-08-04 05:35:43","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:43 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 424 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"518ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:35:43","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: LNZh7M2VfPGmEGkoAAAF","service":"mock-test-api","timestamp":"2025-08-04 05:35:43"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:35:43"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:43 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"121ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:35:43","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:43 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"157ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:35:43","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:43 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"178ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:35:43","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:43 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:43"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"173ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:35:43","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:35:58 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:35:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:35:58","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:01 +0000] \"GET /api/v1/admin/users?search= HTTP/1.1\" 200 - \"http://localhost:3000/admin/users\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:01"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:36:01","url":"/users?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"🔌 WebSocket disconnected: x-vsSlxedfiHIAoeAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:36:03"}
{"level":"info","message":"🔌 WebSocket disconnected: LNZh7M2VfPGmEGkoAAAF","service":"mock-test-api","timestamp":"2025-08-04 05:36:03"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:04 +0000] \"GET /api/v1/admin/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/users\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:04"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:04","url":"/users?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"🔌 WebSocket connected: -lLuewQbgjwDrZziAAAI","service":"mock-test-api","timestamp":"2025-08-04 05:36:04"}
{"level":"info","message":"🔌 WebSocket connected: 0Lny8t6Rb0ujCnK5AAAJ","service":"mock-test-api","timestamp":"2025-08-04 05:36:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:36:04"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:36:04"}
{"level":"info","message":"🔌 WebSocket disconnected: -lLuewQbgjwDrZziAAAI","service":"mock-test-api","timestamp":"2025-08-04 05:36:09"}
{"level":"info","message":"🔌 WebSocket disconnected: 0Lny8t6Rb0ujCnK5AAAJ","service":"mock-test-api","timestamp":"2025-08-04 05:36:09"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:10 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:10","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:10 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:10","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:10 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:10","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:10 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:10"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"19ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:10","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"🔌 WebSocket connected: vQUoR-wurCZ4q3-gAAAM","service":"mock-test-api","timestamp":"2025-08-04 05:36:10"}
{"level":"info","message":"🔌 WebSocket connected: wavcdKP6Z6bs2BAAAAAN","service":"mock-test-api","timestamp":"2025-08-04 05:36:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:36:10"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:36:10"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:36:11","userId":"cmdw3a9w00002i2jiqo0rm1px","userRole":"MODERATOR"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:11 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:36:11","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:11 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:36:11","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:11 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:11"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"21ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:11","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:36:12","userId":"cmdw3a9w00002i2jiqo0rm1px","userRole":"MODERATOR"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:12 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:12"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"14ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:36:12","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:36:14","userId":"cmdw3a9w00002i2jiqo0rm1px","userRole":"MODERATOR"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:14 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:14"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:36:14","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:36:18","userId":"cmdw3a9w00002i2jiqo0rm1px","userRole":"MODERATOR"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:18 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:18"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:36:18","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:46 +0000] \"GET /api/v1/admin/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/users\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:46"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"11ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:46","url":"/users?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"🔌 WebSocket disconnected: wavcdKP6Z6bs2BAAAAAN","service":"mock-test-api","timestamp":"2025-08-04 05:36:51"}
{"level":"info","message":"🔌 WebSocket disconnected: vQUoR-wurCZ4q3-gAAAM","service":"mock-test-api","timestamp":"2025-08-04 05:36:51"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:52 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:52"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"10ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:52","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:52 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 304 - \"http://localhost:3000/admin/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:52"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"28ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:52","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:52 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:52"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:52","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:52 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin/\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:52"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"24ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:52","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"🔌 WebSocket connected: HqQ-9Fgy_9oTjO2RAAAQ","service":"mock-test-api","timestamp":"2025-08-04 05:36:52"}
{"level":"info","message":"🔌 WebSocket connected: vaE77Uxs0Pm26FcxAAAR","service":"mock-test-api","timestamp":"2025-08-04 05:36:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:36:53"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:36:53"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:53 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:53"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"9ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:53","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:36:58","userId":"cmdw3a9w00002i2jiqo0rm1px","userRole":"MODERATOR"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:58 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"13ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:36:58","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:58 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"18ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:58","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:58 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:58"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:36:58","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:36:59","userId":"cmdw3a9w00002i2jiqo0rm1px","userRole":"MODERATOR"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:36:59 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:36:59"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:36:59","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:37:01","userId":"cmdw3a9w00002i2jiqo0rm1px","userRole":"MODERATOR"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:37:01 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:37:01"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"8ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:37:01","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"ip":"::1","level":"warn","message":"Unauthorized access attempt","method":"GET","path":"/admin/all","requiredRoles":["STUDENT"],"service":"mock-test-api","timestamp":"2025-08-04 05:37:05","userId":"cmdw3a9w00002i2jiqo0rm1px","userRole":"MODERATOR"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:37:05 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 403 80 \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:37:05"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"7ms","service":"mock-test-api","statusCode":403,"timestamp":"2025-08-04 05:37:05","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"🔌 WebSocket connected: zYQAzf6QEVx7m_A-AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"🔌 WebSocket connected: PXAFvRpgM1T9pG4rAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:37:35 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:37:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"159ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:37:35","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"Database connected successfully via Prisma","service":"mock-test-api","timestamp":"2025-08-04 05:37:47"}
{"level":"info","message":"🚀 Server is running on port 5000","service":"mock-test-api","timestamp":"2025-08-04 05:37:47"}
{"level":"info","message":"📊 Environment: development","service":"mock-test-api","timestamp":"2025-08-04 05:37:47"}
{"level":"info","message":"🔗 Health check: http://localhost:5000/health","service":"mock-test-api","timestamp":"2025-08-04 05:37:47"}
{"level":"info","message":"🔌 WebSocket: ws://localhost:5000","service":"mock-test-api","timestamp":"2025-08-04 05:37:47"}
{"level":"info","message":"📚 API Documentation: http://localhost:5000/api/v1/docs","service":"mock-test-api","timestamp":"2025-08-04 05:37:47"}
{"level":"info","message":"🔌 WebSocket connected: OEiskIgZBRoituE7AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:37:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:37:48"}
{"level":"info","message":"🔌 WebSocket connected: BcFQFoi7MGOt8p-lAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:37:48"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:37:48"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:37:51 +0000] \"GET /api/v1/admin/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/users\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:37:51"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"163ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:37:51","url":"/users?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"🔌 WebSocket disconnected: OEiskIgZBRoituE7AAAB","service":"mock-test-api","timestamp":"2025-08-04 05:39:36"}
{"level":"info","message":"🔌 WebSocket disconnected: BcFQFoi7MGOt8p-lAAAD","service":"mock-test-api","timestamp":"2025-08-04 05:39:36"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:39:37 +0000] \"GET /api/v1/admin/users?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/users\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:39:37"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:39:37","url":"/users?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"🔌 WebSocket connected: -h4GbpQMfUXrgCZHAAAF","service":"mock-test-api","timestamp":"2025-08-04 05:39:37"}
{"level":"info","message":"🔌 WebSocket connected: D9vhoNmtjNR_7hMLAAAH","service":"mock-test-api","timestamp":"2025-08-04 05:39:37"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:39:37"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:39:37"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:39:57 +0000] \"GET /api/v1/exam-categories HTTP/1.1\" 200 - \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:39:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"70ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:39:57","url":"/","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:39:57 +0000] \"GET /api/v1/admin/questions?search= HTTP/1.1\" 304 - \"http://localhost:3000/admin/questions\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:39:57"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"104ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:39:57","url":"/questions?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"🔌 WebSocket disconnected: D9vhoNmtjNR_7hMLAAAH","service":"mock-test-api","timestamp":"2025-08-04 05:40:20"}
{"email":"admin@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"SUPER_ADMIN","service":"mock-test-api","timestamp":"2025-08-04 05:40:24","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:24 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 419 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"511ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:40:24","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: p02WY6O7Tw1Fq0EkAAAJ","service":"mock-test-api","timestamp":"2025-08-04 05:40:24"}
{"level":"info","message":"👤 Admin joined: cmdw3a9vs0000i2jijo7g0t4t","service":"mock-test-api","timestamp":"2025-08-04 05:40:24"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:24 +0000] \"GET /api/v1/admin/users HTTP/1.1\" 200 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"31ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:40:24","url":"/users","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:24 +0000] \"GET /api/v1/admin/questions HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:24"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"26ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:40:24","url":"/questions","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:25 +0000] \"GET /api/v1/admin/exams HTTP/1.1\" 304 - \"http://localhost:3000/admin\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:25"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"149ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:40:25","url":"/exams","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:30 +0000] \"GET /api/v1/admin/exams?search= HTTP/1.1\" 200 - \"http://localhost:3000/admin/tests\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:30"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"17ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:40:30","url":"/exams?search=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:33 +0000] \"GET /api/v1/admin/users?limit=100 HTTP/1.1\" 200 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"22ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:40:33","url":"/users?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:33 +0000] \"GET /api/v1/admin/exams?limit=100 HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"20ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:40:33","url":"/exams?limit=100","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:33 +0000] \"GET /api/v1/bookings/admin/all?status=&examCategoryId=&startDate=&endDate= HTTP/1.1\" 304 - \"http://localhost:3000/admin/bookings\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:33"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"125ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:40:33","url":"/admin/all?status=&examCategoryId=&startDate=&endDate=","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:35 +0000] \"GET /api/v1/analytics/performance HTTP/1.1\" 304 - \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"137ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:40:35","url":"/performance","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:35 +0000] \"GET /api/v1/analytics/dashboard?period=month HTTP/1.1\" 200 - \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"206ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:40:35","url":"/dashboard?period=month","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:35 +0000] \"GET /api/v1/analytics/dashboard?includeCategories=true HTTP/1.1\" 200 - \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"206ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:40:35","url":"/dashboard?includeCategories=true","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:35 +0000] \"GET /api/v1/admin/dashboard/stats HTTP/1.1\" 200 - \"http://localhost:3000/admin/reports\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:35"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"247ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:40:35","url":"/dashboard/stats","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:40:38 +0000] \"GET /api/v1/admin/exam-categories HTTP/1.1\" 304 - \"http://localhost:3000/admin/categories\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:40:38"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"GET","responseTime":"65ms","service":"mock-test-api","statusCode":304,"timestamp":"2025-08-04 05:40:38","url":"/exam-categories","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"cmdw3a9vs0000i2jijo7g0t4t"}
{"level":"info","message":"🔌 WebSocket disconnected: p02WY6O7Tw1Fq0EkAAAJ","service":"mock-test-api","timestamp":"2025-08-04 05:40:40"}
{"email":"moderator@mocktest.com","ip":"::1","level":"info","message":"User logged in successfully","role":"MODERATOR","service":"mock-test-api","timestamp":"2025-08-04 05:41:08","userId":"cmdw3a9w00002i2jiqo0rm1px"}
{"level":"info","message":"::1 - - [04/Aug/2025:09:41:08 +0000] \"POST /api/v1/auth/login HTTP/1.1\" 200 424 \"http://localhost:3000/login\" \"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0\"","service":"mock-test-api","timestamp":"2025-08-04 05:41:08"}
{"ip":"::1","level":"info","message":"HTTP Request","method":"POST","responseTime":"392ms","service":"mock-test-api","statusCode":200,"timestamp":"2025-08-04 05:41:08","url":"/login","userAgent":"Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0","userId":"anonymous"}
{"level":"info","message":"🔌 WebSocket connected: Yu0ENwGFpZrk0K2cAAAL","service":"mock-test-api","timestamp":"2025-08-04 05:41:08"}
{"level":"info","message":"👤 Admin joined: cmdw3a9w00002i2jiqo0rm1px","service":"mock-test-api","timestamp":"2025-08-04 05:41:08"}
{"level":"info","message":"🔌 WebSocket disconnected: Yu0ENwGFpZrk0K2cAAAL","service":"mock-test-api","timestamp":"2025-08-04 05:41:28"}
