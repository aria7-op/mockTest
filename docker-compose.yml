version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mock-exam-db
    environment:
      POSTGRES_DB: mock_exam_db
      POSTGRES_USER: mock_user
      POSTGRES_PASSWORD: mock_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mock-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mock_user -d mock_exam_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: mock-exam-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://mock_user:mock_password@postgres:5432/mock_exam_db
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - mock-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: mock-exam-frontend
    environment:
      VITE_API_BASE_URL: http://localhost:5000/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - mock-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: mock-exam-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - mock-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  mock-network:
    driver: bridge 